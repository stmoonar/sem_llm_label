{
    "authorId": "122132137",
    "papers": [
        {
            "paperId": "8e6e6bad3639bca91637b30205a8daf29bc50d0b",
            "title": "A Full-Spectrum Blockchain-as-a-Service for Business Collaboration",
            "abstract": "Private and consortium blockchains have recently raised interest in the blockchain community around facilitating business collaboration. In a business network, multiple participants either (1) work with a centralized authority to maintain a complete and verifiable ledger, or (2) transact in a decentralized manner to maintain an independent shared ledger. A centralized, private blockchain system, such as Amazon QLDB, addresses scenario one with good price-to-performance ratio. The second scenario is commonly backed by a consortium blockchain network, such as Hyperledger Fabric, that requires greater and more complex hardware and software to handle complicated consensus and peer-to-peer communications. The disparate design objectives and resultant principles complicate efforts to handle both scenarios within a single blockchain system. Moreover, the two situations are often mixed together for a user in different business activities, and interchangeable with the evolution of the business collaboration. From the outset, users face a dilemma in choosing which blockchain system type will handle their long-term needs. In this paper, we present a novel Full-Spectrum Blockchain as a Service (FSBaaS) built on top of a high-performance centralized private blockchain runtime called Blockchain Lite and a Hyperledger Fabric blockchain runtime. It handles different scenarios flexibly by providing a unified interface for the two blockchain runtimes from programing model and RESTful APIs to the tenant model. A BaaS tenant can subscribe to the two runtimes simultaneously and migrate data from one to the other as needed. Experimental results contrasted the performance of two blockchain runtimes and the practicality of the proposed BaaS.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "2216588947",
                    "name": "Jingxiao Gu"
                },
                {
                    "authorId": "2107993189",
                    "name": "Shi Chen"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2118774785",
                    "name": "X. Wang"
                }
            ]
        },
        {
            "paperId": "6aa9b2fbae12d34aa8380a89d41d63919bf2fdd3",
            "title": "Inter-Bank Payment System on Enterprise Blockchain Platform",
            "abstract": "Real-time gross settlement system (RTGS) is the cornerstone of inter-bank payment business. Spectacular expansion of large-value wholesale payment has forced financial institutions to implement inter-bank payment systems (IBPS) with higher level of throughput, security, and stability. This promising approach to orchestrating IBPS utilizes emerging blockchain technology, which has been successfully harnessed to deliver distributed trust and confidentiality for diverse financial service applications. However, blockchain is not a silver bullet for IBPS, which faces multiple challenges incurred by high value transactions. Financial institutions expect not only a simple migration from traditional RTGS to a blockchain platform, but a decentralized system with better confidentiality, instruction settlement finality, liquidity saving mechanism, and more efficient methods of gridlock resolution. In this paper, we introduce an end-to-end IBPS prototype based on Hyperledger Fabric enterprise blockchain platform. The prototype supports gross settlement, gridlock resolution, and reconciliation for inter-bank payment business. As a preliminary research of Ubin Project, this prototype is proved to provide higher level of payment settlement service.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2153692001",
                    "name": "Xin Wang"
                },
                {
                    "authorId": "2115189307",
                    "name": "Xiaomin Xu"
                },
                {
                    "authorId": "3033305",
                    "name": "Lance Feagan"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "1924066",
                    "name": "Limei Jiao"
                },
                {
                    "authorId": "2150717858",
                    "name": "Wei Zhao"
                }
            ]
        },
        {
            "paperId": "08376aaa89d220f66a7fd8cfc7fc991fded21ff6",
            "title": "XMLValue: XML Configuration Attribute Value Recommendation",
            "abstract": "Frameworks are popularly used to reduce implementation complexity and improve productivity. Unfortunately, most frameworks are quite complex and not well documented. Hence, correctly and effectively programming with Framework is still a great challenge. One of the significant obstacles for us to smoothly use Framework is the complicated attribute value configuration of XML files. To overcome these difficulties, we present XMLValue to automatically recommend XML attribute values using association rules and NLP techniques. Experimental results show that our tool is efficient and effective for mining reusable configuration snippets, and has significantly shorten development time for framework based programming, and is general enough to support a variety of frameworks, and has real time performance for code assistance.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2141538106",
                    "name": "Yiqi Lu"
                },
                {
                    "authorId": "3366523",
                    "name": "Jiaqing Liang"
                },
                {
                    "authorId": "3011950",
                    "name": "Yanghua Xiao"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2089312",
                    "name": "Deqing Yang"
                },
                {
                    "authorId": "30535909",
                    "name": "Wei Wang"
                },
                {
                    "authorId": "2152783865",
                    "name": "Haibo Lin"
                }
            ]
        },
        {
            "paperId": "6008f89daa23f6d1a96eddc2f83abc8084fedad3",
            "title": "EAaaS: Edge Analytics as a Service",
            "abstract": "In the Internet of Things (IoT) era, with ubiquitous remote sensing devices and other diverse data sources, nearly everything can forward voluminous data continuously, in real-time, which drives demand to perform real-time analytics on uninterrupted IoT data flows. The typical resultant approach is a cloud-centered architecture providing an analytic service for real-time IoT data processing. However, a cloud-centered IoT analytic service cannot guarantee real-time responsiveness has a high-fee pay-as-you-go business model, and opens data privacy concerns. Hence, it becomes rational to shift analytic workloads to the edge and provide a management service for edge analysis. Existing work on providing edge analytics as a service encountered challenges such as lacking a lightweight way to compose IoT applications based on multiple service providers, lacking a flexible and unified way to define domain-specific analytic logic, and maintaining efficiency when processing data on a resource-limited edge. This paper presents EAaaS, a scalable analytic service for enabling real-time edge analytics in IoT scenarios. In this work, we propose a unified rule-based analytic model to ease user's programming efforts in specifying rule-based analytic logic. Moreover, we also designed and implemented a high performance edge engine to apply rule-based analytic on incoming device data streams. To simplify the access to EAaaS service, a group of RESTful web interfaces is also designed for edge analytic management on cloud and flexible composition with external services. EAaaS is implemented as a part of IBM Watson IoT Platform, which is a cloud service for elementary IoT application development on IBM Bluemix cloud announced by IBM recently. We have conducted proof of correctness (PoC) of EAaaS with customers from boat racing in the U.S. and collected valuable feedback from customers for further enhancement of EAaaS\u2019s flexibility and usability",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2115189307",
                    "name": "Xiaomin Xu"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "3033305",
                    "name": "Lance Feagan"
                },
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "2155757",
                    "name": "Yunjie Qiu"
                },
                {
                    "authorId": "2153604856",
                    "name": "Yu Wang"
                }
            ]
        },
        {
            "paperId": "26ad6f9d11c5c63b3cc747784f43ad1fee8635eb",
            "title": "RTA: Real Time Actionable Events Detection as a Service",
            "abstract": "Nowadays vast amounts of data are being produced in continuous ways. They may come from sensors, smart meters, application logs, monitoring software etc. The data need to be processed in realtime to gain actionable insights. Services like smart grid load balancing, cloud platform maintenance, can be carried out in an efficient way. Stream processing is the programming paradigm that answers such demand. When talking about stream processing, we can easily recall several famous open-source software frameworks such as Spark Streaming, Samza, Flink and Storm. Although they provide distributed, robust, low-latency stream processing engines, it's still difficult for an end user to set up a usable stream processing application from scratch. Firstly, users are required to write code to define their business related stream processing logic. Secondly, the submission and update of the stream processing logic require service restart, therefore it may lead to service unavailability for minutes. Thirdly, extra operation effort are required for handling scaling and failover issues. In this paper, we present RTA, a released research service on realtime data processing. The RTA service fills the gap between the stream processing requester and the existing software stacks. It offers a SQL-like stream query language for defining stream processing logic definition over streaming data. It allows users easily define their stream processing logic without programming. In RTA service, stream processing logic is also treated as a type of input, which enables online logic update without service downtime. The RTA service also provides scalability, high availability and resource isolation for serving multiple tenants. In this paper, we also provide a comprehensive evaluation of our service through a case study.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2155757",
                    "name": "Yunjie Qiu"
                },
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "1924066",
                    "name": "Limei Jiao"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                }
            ]
        },
        {
            "paperId": "b84f51a460f001d625f66ceecdca0fc3bbb32821",
            "title": "On Implementing a Text-Database-as-a-Service",
            "abstract": "The emergence of heterogeneous big data in the last decade calls for a hybrid data service that can manage all different kinds of data, including relational data, JSON data, and text data in a unified way. Among them, text data play an important role in many fields such as Internet-of-Things, biology, social network, and etc. For example, a smart meter application detecting the anomaly of the electricity use might want to link each anomaly of a certain area to a meaningful social event mined from the news in plain text. As a result, text data services have raised more and more attentions by the research community. Most of such services are implemented based on a content management system such as ElasticSearch and Solr. However, we found that the mere content management capabilities are not enough. On one hand, text data query often requires join operations to relational data or JSON data in an existing DBMS. On the other hand, users often have to pull the big text data out to an independent system or service for further text analytics. In this paper, we present our Text-DataBase-as-a-Service (TDBaaS), which is built on top of the Hybrid Data Service (HDS) from IBM Research. The TDBaaS is designed to manage the text data together with relational data and JSON data in a single service. Basic text analytics can be conducted directly inside the database in the form of general SQLs. Moreover, the extensible framework allows the service to have abundant text analytic capabilities with high performance. As a case study, we investigate in the implementation of the top-k word algorithm, and show how the common computations are shared across different tenants in the TDBaaS. The experimental results demonstrate the high performance of the TDBaaS on both text data management and text data analytics.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "2144545295",
                    "name": "Chang Liu"
                },
                {
                    "authorId": "2107969168",
                    "name": "Jianfeng Zhang"
                },
                {
                    "authorId": "2240008",
                    "name": "Zhenying He"
                },
                {
                    "authorId": "2118774785",
                    "name": "X. Wang"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2109384092",
                    "name": "Xiaoyan Chen"
                }
            ]
        },
        {
            "paperId": "178751466bf77aea7c966b717c9732b8242e2b77",
            "title": "COSS: Content-Based Subscription as an IoT Service",
            "abstract": "Publish/subscribe (pub/sub) systems are widely used in numerous Internet-Of-Things (IoT) applications such as environment monitoring, supply chain tracing, healthcare, and vehicle networks. In these applications, publishers (e.g. Smart devices, sensors) are continuously generating large volume of data with an extremely high throughput, whereas subscribers are only interested in a small portion of the data. Recently, content-based subscription systems have raised more and more attentions by the researchers where subscribers can specify rules on the content of messages that are composed of many attributes. For example, in traffic monitoring, an operator is only interested in the data within a specified area defined by constraints on latitude and longitude instead of the whole map. In this paper, we present COSS, the first Content-based Subscription Service for IoT with natural multi-tenant support and easy-to-use REST APIs. Moreover, we investigate in the problem of Balanced Rule Engine Partitioning for content-based subscription under the Tenant-Message-Rule (TMR) model. We show the NP-hardness of the problem and design a heuristics to enable COSS to adaptively adjust the message distribution according to the workload history, and to scale on both the high data throughput of IoT workloads and multi-tenant. Extensive experiments show that COSS offers high performance and scalability for content-based subscription in terms of the number of tenants, and the data throughput of the messages.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "2144507715",
                    "name": "Jingjing Wang"
                },
                {
                    "authorId": "2108986527",
                    "name": "Hongwei Wang"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2146249681",
                    "name": "Chen Lin"
                }
            ]
        },
        {
            "paperId": "f8dd5bd6baf4ad32c9a1f1e7248f78711277f1c2",
            "title": "STaaS: Spatio Temporal Historian as a Service",
            "abstract": "In the Internet of Things (IoT) era, an increasing number of data management applications, such as for connected vehicles and smarter cities, face the challenge of querying and analyzing massive volumes of spatiotemporal data. These applications frequently perform queries that join moving objects with spatial data, such as selecting sub-tracks crossing a bridge. However, spatiotemporal queries are not well supported or natively supported by current state-of-the-art relational database systems. Most of existing systems build a spatial index directly over the raw spatiotemporal data, which leads to performance issues when scaling out for both indexing and query. In this paper, we focus on building a Spatio Temporal historian as a Service (STaaS) by extending the IBM Blue mix Time Series Database service. The STaaS service manages to process spatiotemporal queries over high volume historical data. The experiments show that STaaS service could easily scale out by adding shards, and achieve dramatic speed-up on spatiotemporal query with support of our hybrid data store. Moreover, we have already deployed STaaS on Blue mix Staging (Internal User Testing) Zone to collect feedback for improvement before porting it into the product zone in the future.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2109384092",
                    "name": "Xiaoyan Chen"
                },
                {
                    "authorId": "2115189307",
                    "name": "Xiaomin Xu"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2052980957",
                    "name": "Weiming Ye"
                },
                {
                    "authorId": "3033305",
                    "name": "Lance Feagan"
                },
                {
                    "authorId": "32518102",
                    "name": "Lalitha Krishnamoorthy"
                },
                {
                    "authorId": "2067999068",
                    "name": "Mark Ashworth"
                }
            ]
        },
        {
            "paperId": "614cfdf34322b769eff9bdbcc2f218d62d1e2d00",
            "title": "The next generation operational data historian for IoT based on informix",
            "abstract": "In the era of the Internet of Things (IoT), increasing numbers of applications face the challenge of using current data management systems to manage the massive volume of operational data gener-ated by sensors and devices. Databases based on time series data model, like PI Server, are developed to handle such data with operational technology (OT) characteristics (high volume, long lifecycle, and simple format). However, while achieving excellent write performance, these database systems provide limited query capabilities. In this paper, we present the next-generation Opera-tional Data Historian (ODH) system that is based on the IBM\u00a9 Informix\u00a9 system architecture. The system combines the write advantages of the existing time series databases and the ability to run complex queries in SQL. We demonstrate the high efficiency of our system for both writing and querying data with a variety of case studies in the industries of Energy and Utilities and con-nected vehicles. In addition, we present the first benchmark, IoT-X, to evaluate technologies on operational data management for IoT.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "2109384092",
                    "name": "Xiaoyan Chen"
                },
                {
                    "authorId": "49599759",
                    "name": "Kai Liu"
                },
                {
                    "authorId": "2115189307",
                    "name": "Xiaomin Xu"
                },
                {
                    "authorId": "40614781",
                    "name": "Chen Wang"
                },
                {
                    "authorId": "2117071128",
                    "name": "Kevin Brown"
                },
                {
                    "authorId": "1863259",
                    "name": "I. Halilovic"
                }
            ]
        },
        {
            "paperId": "9b469c684140210d4e565d1ec4b5bc9cd6b92c7c",
            "title": "A Demonstration of SearchonTS: An Efficient Pattern Search Framework for Time Series Data",
            "abstract": "In recent years, time series data are everywhere across different industry, which creates a huge demand on time series data analysis, such as pattern search. Meanwhile, it is increasingly realized that only when pattern search results together with information from relational tables could be used in a programming-free way, can they perform analysis on time series conveniently. Hence, casual users highly demand that queries involving pattern search could be performed via SQLs. However, existing database products supporting time series data type lack the capability to perform pattern searches on time series data. This paper presents SearchonTS, an extendable framework for in-database pattern search on time series data. It provides a series of interfaces so that time series index and pattern search can be added and performed in a uniformed and query optimized manner. SearchonTS is implemented as an extension on Informix, which is a database product in IBM software product series. It targets a future release of IBM Informix. We have implemented index-based pattern search for Euclid Distance(ED) via SearhonTS to demonstrate its usability for developers. And real scenario is also provided to show SQL involving pattern search so that users can have a more clear experience of the convenience.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2115189307",
                    "name": "Xiaomin Xu"
                },
                {
                    "authorId": "122132137",
                    "name": "Sheng Huang"
                },
                {
                    "authorId": "2118360016",
                    "name": "Yaoliang Chen"
                },
                {
                    "authorId": "40614781",
                    "name": "Chen Wang"
                },
                {
                    "authorId": "1863259",
                    "name": "I. Halilovic"
                },
                {
                    "authorId": "2117071128",
                    "name": "Kevin Brown"
                },
                {
                    "authorId": "2067999068",
                    "name": "Mark Ashworth"
                }
            ]
        }
    ]
}