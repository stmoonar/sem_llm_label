{
    "authorId": "37884573",
    "papers": [
        {
            "paperId": "756502beaa310e1eb2465279e06adbfea9c6c482",
            "title": "Multilevel DiscreteWavelet Transform and Deep Neural Networks for Predicting Remaining Useful Life of a Machine Asset",
            "abstract": "Estimation of Remaining Useful Life (RUL) of a machine asset using sensor data is a problem that is of prime interest to modern process industries. Accurate estimation of RUL is very critical in prognostics and health management (PHM). Traditional regression-based approaches that utilize both classical machine learning and deep learning architecture do not take into account the features that can be extracted using the temporal characteristics of the time-series sub-sequence pertaining to the sensor data. In this paper, different transformations of these sub-sequences have been used in conjunction with different state-of-art deep learning architectures to significantly improve the accuracy of RUL estimation. The need for such transformations arises when there are no visible trends in the data, leading to the failure of the machine asset. These transformations bring out different critical signatures like sudden bursts of high frequency activity hidden in these sub-sequences. Using extensive experimentation, this paper concludes that if multilevel discrete wavelet transform (DWT) coefficients of the sub-sequences are used as the input feature for the deep learning models instead of the raw sensor values, then a significant improvement in the accuracy of RUL estimation is observed.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2099835409",
                    "name": "Shivam Bhardwaj"
                },
                {
                    "authorId": "14295286",
                    "name": "P. Kartikeya"
                },
                {
                    "authorId": "2117776464",
                    "name": "Ramesh Kumar"
                },
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                }
            ]
        },
        {
            "paperId": "b626bddd51b900e0d03c03395484075d218b362e",
            "title": "PigReuse: A Reuse-based Optimizer for Pig Latin",
            "abstract": "Pig Latin is a popular language which is widely used for parallel processing of massive data sets. Currently, subexpressions occurring repeatedly in Pig Latin scripts are executed as many times as they appear, and the current Pig Latin optimizer does not identify reuse opportunities. \nWe present a novel optimization approach aiming at identifying and reusing repeated subexpressions in Pig Latin scripts. Our optimization algorithm, named PigReuse, operates on a particular algebraic representation of Pig Latin scripts. PigReuse identifies subexpression merging opportunities, selects the best ones to execute based on a cost function, and reuses their results as needed in order to compute exactly the same output as the original scripts. Our experiments demonstrate the effectiveness of our approach.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "1691789",
                    "name": "Dario Colazzo"
                },
                {
                    "authorId": "143677452",
                    "name": "Melanie Herschel"
                },
                {
                    "authorId": "1739309",
                    "name": "I. Manolescu"
                },
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                }
            ]
        },
        {
            "paperId": "fa142af96157c2eb7d14c96f9409b50961b6f124",
            "title": "D-Sieve: A Novel Data Processing Engine for Efficient Handling of Crises-Related Social Messages",
            "abstract": "Existing literature demonstrates the usefulness of system-mediated algorithms, such as supervised machine learning for detecting classes of messages in the social-data stream (e.g., topically relevant vs. irrelevant). The classification accuracies of these algorithms largely depend upon the size of labeled samples that are provided during the learning phase. Other factors such as class distribution, term distribution among the training set also play an important role on classifier's accuracy. However, due to several reasons (money / time constraints, limited number of skilled labelers etc.), a large sample of labeled messages is often not available immediately for learning an efficient classification model. Consequently, classifier trained on a poor model often mis-classifies data and hence, the applicability of such learning techniques (especially for the online setting) during ongoing crisis response remains limited. In this paper, we propose a post-classification processing step leveraging upon two additional content features-stable hashtag association and stable named entity association, to improve the classification accuracy for a classifier in realistic settings. We have tested our algorithms on two crisis datasets from Twitter (Hurricane Sandy 2012 and Queensland Floods 2013), and compared our results against the results produced by a \"best-in-class'' baseline online classifier. By showing the consistent better quality results than the baseline algorithm i.e., by correctly classifying the misclassified data points from the prior step (false negative and false positive to true positive and true negative classes, respectively), we demonstrate the applicability of our approach in practice.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "7147418",
                    "name": "Hemant Purohit"
                },
                {
                    "authorId": "32584303",
                    "name": "Muhammad Imran"
                }
            ]
        },
        {
            "paperId": "67e4ec020d43e2e87a64606f9aa002a515cf7a58",
            "title": "Reuse-based Optimization for Pig Latin",
            "abstract": "Pig Latin is a popular language which is widely used for parallel processing of massive data sets. Currently, subexpressions occurring repeatedly in Pig Latin scripts are executed as many times as they appear, and the current Pig Latin optimizer does not identify reuse opportunities. We present a novel optimization approach aiming at identifying and reusing repeated subexpressions in Pig Latin scripts. Our optimization algorithm, named PigReuse, identifies subexpression merging opportunities, selects the best ones to execute based on a cost function, and reuses their results as needed in order to compute exactly the same output as the original scripts. Our experiments demonstrate the effectiveness of our approach.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "1691789",
                    "name": "Dario Colazzo"
                },
                {
                    "authorId": "143677452",
                    "name": "Melanie Herschel"
                },
                {
                    "authorId": "1739309",
                    "name": "I. Manolescu"
                },
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                }
            ]
        },
        {
            "paperId": "80bb59ada8ae5de2d23ec825340ef7e0c352c838",
            "title": "Recommendation and Weaving of Reusable Mashup Model Patterns for Assisted Development",
            "abstract": "With this article, we give an answer to one of the open problems of mashup development that users may face when operating a model-driven mashup tool, namely the lack of modeling expertise. Although commonly considered simple applications, mashups can also be complex software artifacts depending on the number and types of Web resources (the components) they integrate. Mashup tools have undoubtedly simplified mashup development, yet the problem is still generally nontrivial and requires intimate knowledge of the components provided by the mashup tool, its underlying mashup paradigm, and of how to apply such to the integration of the components. This knowledge is generally neither intuitive nor standardized across different mashup tools and the consequent lack of modeling expertise affects both skilled programmers and end-user programmers alike.\n In this article, we show how to effectively assist the users of mashup tools with contextual, interactive recommendations of composition knowledge in the form of reusable mashup model patterns. We design and study three different recommendation algorithms and describe a pattern weaving approach for the one-click reuse of composition knowledge. We report on the implementation of three pattern recommender plugins for different mashup tools and demonstrate via user studies that recommending and weaving contextual mashup model patterns significantly reduces development times in all three cases.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "144896044",
                    "name": "F. Daniel"
                },
                {
                    "authorId": "145866446",
                    "name": "F. Casati"
                }
            ]
        },
        {
            "paperId": "7c18269318148f8f10a522256647726c22fbca77",
            "title": "Complementary assistance mechanisms for end user mashup composition",
            "abstract": "Despite several efforts for simplifying the composition process, learning efforts required for using existing mashup editors to develop mashups remain still high. In this paper, we describe how this barrier can be lowered by means of an assisted development approach that seamlessly integrates automatic composition and interactive pattern recommendation techniques into existing mashup platforms for supporting easy mashup development by end users. We showcase the use of such an assisted development environment in the context of an open-source mashup platform Apache Rave. Results of our user studies demonstrate the benefits of our approach for end user mashup development.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "3221761",
                    "name": "Olexiy Chudnovskyy"
                },
                {
                    "authorId": "3173312",
                    "name": "Matthias Niederhausen"
                },
                {
                    "authorId": "1848975",
                    "name": "S. Pietschmann"
                },
                {
                    "authorId": "144083953",
                    "name": "P. Sharples"
                },
                {
                    "authorId": "144896044",
                    "name": "F. Daniel"
                },
                {
                    "authorId": "144151097",
                    "name": "M. Gaedke"
                }
            ]
        },
        {
            "paperId": "ef54bf37d60f37f07c958783fc56021311205d5c",
            "title": "Tweet4act: Using incident-specific profiles for classifying crisis-related messages",
            "abstract": "We present Tweet4act, a system to detect and classify crisis-related messages communicated over a microblogging platform. Our system relies on extracting content features from each message. These features and the use of an incident-specific dictionary allow us to determine the period type of an incident that each message belongs to. The period types are: pre-incident (messages talking about prevention, mitigation, and preparedness), during-incident (messages sent while the incident is taking place), and post-incident (messages related to the response, recovery, and reconstruction). We show that our detection method can effectively identify incident-related messages with high precision and recall, and that our incident-period classification method outperforms standard machine learning classification methods.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "151491159",
                    "name": "Muhammad Imran"
                },
                {
                    "authorId": "35065376",
                    "name": "M. R. Asghar"
                },
                {
                    "authorId": "1403657578",
                    "name": "S. Amer-Yahia"
                },
                {
                    "authorId": "153191671",
                    "name": "Carlos Castillo"
                }
            ]
        },
        {
            "paperId": "f162fbbb3080a1be002d4141bc7183ea158f8fbe",
            "title": "Assisted Reuse of Pattern-Based Composition Knowledge for Mashup Development",
            "abstract": "First generation of the World Wide Web (WWW) enabled users to have instantaneous access to a large diversity of knowledge. Second generation of the WWW (Web 2.0) brought a fundamental change in the way people interact with and through the World Wide Web. Web 2.0 has made the World Wide Web a platform not only for communication and sharing information but also for software development (e.g., web service composition). Web mashup or mashup development is a Web2.0 development approach in which users are expected to create applications by combining multiple data sources, application logic and UI components from the web to cater for their situational application needs. However, in reality creating an even simple mashup application is a complex task that can only be managed by skilled developers. \n \n \nExamples of ready mashup models are one of the main sources of help for users who don't know how to design a mashup, provided that suitable examples can be found (examples that have an analogy with the modeling situation faced by the user). But also tutorials, expert colleagues or friends, and, of course, Google are typical means to find help. However, searching for help does not always lead to a success, and retrieved information is only seldom immediately usable as it is, since the retrieved pieces of information are not contextual, i.e., immediately applicable to the given modeling problem. \n \nMotivated by the development challenges faced by a naive user of existing mashup tools, in this thesis we propose toaid such users by enabling assisted reuse of pattern-based composition knowledge. In this thesis we show how it is possible to effectively assist these users in their development task with contextual, interactive recommendations of composition knowledge in the form of mashup model patterns. We study a set of recommendation algorithms with different levels of performance and describe a flexible pattern weaving approach for the one-click reuse of patterns. We prove the generality of our algorithms and approach by implementing two prototype tools for two different mashup platforms. Finally, we validate the usefulness of our assisted development approach by performing thorough empirical tests and two user studies with our prototype tools.",
            "fieldsOfStudy": [
                "Computer Science",
                "Engineering"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                }
            ]
        },
        {
            "paperId": "48b6cd8ab8a4504b10330f570f7ef3b59d44b88b",
            "title": "Assisting end-user development in browser-based mashup tools",
            "abstract": "Despite the recent progresses in end-user development and particularly in mashup application development, developing even simple mashups is still non-trivial and requires intimate knowledge about the functionality of web APIs and services, their interfaces, parameter settings, data mappings, and so on. We aim to assist less skilled developers in composing own mashups by interactively recommending composition knowledge in the form of modeling patterns and fostering knowledge reuse. Our prototype system demonstrates our idea of interactive recommendation and automated pattern weaving, which involves recommending relevant composition patterns to the users during development, and once selected, applying automatically the changes as suggested in the selected pattern to the mashup model under development. The experimental evaluation of our prototype implementation demonstrates that even complex composition patterns can be efficiently stored, queried and weaved into the model under development in browser-based mashup tools.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                }
            ]
        },
        {
            "paperId": "8a0e074a136b7087e902091d39e57bae56ffcf19",
            "title": "Baya: assisted mashup development as a service",
            "abstract": "In this demonstration, we describe Baya, an extension of Yahoo! Pipes that guides and speeds up development by interactively recommending composition knowledge harvested from a repository of existing pipes. Composition knowledge is delivered in the form of reusable mashup patterns, which are retrieved and ranked on the fly while the developer models his own pipe (the mashup) and that are automatically weaved into his pipe model upon selection. Baya mines candidate patterns from pipe models available online and thereby leverages on the knowledge of the crowd, i.e., of other developers. Baya is an extension for the Firefox browser that seamlessly integrates with Pipes. It enhances Pipes with a powerful new feature for both expert developers and beginners, speeding up the former and enabling the latter. The discovery of composition knowledge is provided as a service and can easily be extended toward other modeling environments.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "144173084",
                    "name": "Carlos Rodr\u00edguez"
                },
                {
                    "authorId": "144896044",
                    "name": "F. Daniel"
                },
                {
                    "authorId": "145866446",
                    "name": "F. Casati"
                }
            ]
        },
        {
            "paperId": "f01cba64f6127227c67942eb07a6c354b2e2a564",
            "title": "Discovery and reuse of composition knowledge for assisted mashup development",
            "abstract": "Despite the emergence of mashup tools like Yahoo! Pipes or JackBe Presto Wires, developing mashups is still non-trivial and requires intimate knowledge about the functionality of web APIs and services, their interfaces, parameter settings, data mappings, and so on. We aim to assist the mashup process and to turn it into an interactive co-creation process, in which one part of the solution comes from the developer and the other part from reusable composition knowledge that has proven successful in the past. We harvest composition knowledge from a repository of existing mashup models by mining a set of reusable composition patterns, which we then use to interactively provide composition recommendations to developers while they model their own mashup. Upon acceptance of a recommendation, the purposeful design of the respective pattern types allows us to automatically weave the chosen pattern into a partial mashup model, in practice performing a set of modeling actions on behalf of the developer. The experimental evaluation of our prototype implementation demonstrates that it is indeed possible to harvest meaningful, reusable knowledge from existing mashups, and that even complex recommendations can be efficiently queried and weaved also inside the client browser.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "144896044",
                    "name": "F. Daniel"
                },
                {
                    "authorId": "144173084",
                    "name": "Carlos Rodr\u00edguez"
                },
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "7191589",
                    "name": "H. M. Nezhad"
                },
                {
                    "authorId": "145866446",
                    "name": "F. Casati"
                }
            ]
        },
        {
            "paperId": "1f4aca9ab62dea1db9256c5e0ac48a640978df07",
            "title": "Composition Patterns in Data Flow Based Mashups",
            "abstract": "Recently, mashup tools have emerged as popular end-user development platform. Composition languages used in mashup tools provide ways (drag-and-drop based visual metaphor for programming) to integrate data from multiple data sources in order to develop situational applications. However this integration task often requires substantial technical expertise from the developers in order to use basic composition blocks properly in their composition logic. Reusing of existing composition knowledge is one of the possible solutions to ease mashup development process. This reusable composition knowledge can be harvested from composition patterns that have occurred frequently in previously developed mashup. In order to understand composition patterns in mashups, particularly in data flow based mashups, in this paper, we have analyzed the composition language used by one of the most popular data-flow based mashup tools, Yahoo! Pipes. Based upon our analysis we have identified six composition patterns, which represent most commonly used composition steps during mashup application development. To prove the generality of the identified patterns in data-flow based mashup composition languages, we have further shown the applicability of our composition patterns in several other popular data-flow based mashup tools.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                },
                {
                    "authorId": "2517625",
                    "name": "Aliaksandr Birukou"
                },
                {
                    "authorId": "144896044",
                    "name": "F. Daniel"
                },
                {
                    "authorId": "145866446",
                    "name": "F. Casati"
                }
            ]
        },
        {
            "paperId": "ef631e0d4f481ce19f3ca17fbdb089586fada13f",
            "title": "Determining configuration parameter dependencies via analysis of configuration data from multi-tiered enterprise applications",
            "abstract": "Multi-tiered enterprise applications, which comprise of many (heterogeneous and possibly loosely coupled) components at various layers of the IT stack, typically have configuration dependencies between these different components. A change in the value of a configuration parameter of a component may require changing one or more parameters of other components to the same value. Keeping track of these dependencies is not a mean task as they are typically cross product and requires in-depth product/system knowledge.\n Our aim in this paper is to introduce techniques that do not require a system administrator to have in-depth knowledge about a multi-tiered system in order to be aware of the possible configuration dependencies in a system. Our focus in this paper does not include, for example, the performance-related dependencies such as the one that exists between the maximum number of threads and session timeout in an Apache server. In this paper we provide a method for analyzing existing deployments (that are functioning properly) to infer the configuration dependencies in a probabilistic sense. Firstly, we analyze the values of the configuration parameters of the various components to determine a candidate list of dependencies which includes both true and false ones. We then provide a heuristic that makes use of the statistics on the parameter name and value strings, computed from the configuration data and also the information on the web, to compute a rank for a dependency to be true. We provide a rank-ordered list of dependencies so that administrators can consult it to quickly and systematically identify the true dependencies. To complement our proposed approach we have performed an extensive study and experimentation to show the efficacy of our technique on data from two real-world solutions.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2057719831",
                    "name": "Vinod Ramachandran"
                },
                {
                    "authorId": "145637678",
                    "name": "Manish Gupta"
                },
                {
                    "authorId": "2066035153",
                    "name": "Manish Sethi"
                },
                {
                    "authorId": "37884573",
                    "name": "Soudip Roy Chowdhury"
                }
            ]
        }
    ]
}