{
    "authorId": "51286999",
    "papers": [
        {
            "paperId": "1f50e75fb4f2c244c496ead4992b18443b188102",
            "title": "Benchmarking Whole Knowledge Graph Embedding Techniques",
            "abstract": ",",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "33122761",
                    "name": "P. Bonte"
                },
                {
                    "authorId": "51286999",
                    "name": "Sander Vanden Hautte"
                },
                {
                    "authorId": "2065702132",
                    "name": "F. de Turck"
                },
                {
                    "authorId": "134767416",
                    "name": "Sofie Van Hoecke"
                },
                {
                    "authorId": "1726557",
                    "name": "F. Ongenae"
                }
            ]
        },
        {
            "paperId": "0bf81934632676646e06dda790568782171cf6c1",
            "title": "A Dynamic Dashboarding Application for Fleet Monitoring Using Semantic Web of Things Technologies",
            "abstract": "In industry, dashboards are often used to monitor fleets of assets, such as trains, machines or buildings. In such industrial fleets, the vast amount of sensors evolves continuously, new sensor data exchange protocols and data formats are introduced, new visualization types may need to be introduced and existing dashboard visualizations may need to be updated in terms of displayed sensors. These requirements motivate the development of dynamic dashboarding applications. These, as opposed to fixed-structure dashboard applications, allow users to create visualizations at will and do not have hard-coded sensor bindings. The state-of-the-art in dynamic dashboarding does not cope well with the frequent additions and removals of sensors that must be monitored\u2014these changes must still be configured in the implementation or at runtime by a user. Also, the user is presented with an overload of sensors, aggregations and visualizations to select from, which may sometimes even lead to the creation of dashboard widgets that do not make sense. In this paper, we present a dynamic dashboard that overcomes these problems. Sensors, visualizations and aggregations can be discovered automatically, since they are provided as RESTful Web Things on a Web Thing Model compliant gateway. The gateway also provides semantic annotations of the Web Things, describing what their abilities are. A semantic reasoner can derive visualization suggestions, given the Thing annotations, logic rules and a custom dashboard ontology. The resulting dashboarding application automatically presents the available sensors, visualizations and aggregations that can be used, without requiring sensor configuration, and assists the user in building dashboards that make sense. This way, the user can concentrate on interpreting the sensor data and detecting and solving operational problems early.",
            "fieldsOfStudy": [
                "Computer Science",
                "Medicine"
            ],
            "authors": [
                {
                    "authorId": "51286999",
                    "name": "Sander Vanden Hautte"
                },
                {
                    "authorId": "1506980790",
                    "name": "Pieter Moens"
                },
                {
                    "authorId": "32435123",
                    "name": "J. Herwegen"
                },
                {
                    "authorId": "3463404",
                    "name": "Dieter De Paepe"
                },
                {
                    "authorId": "51138839",
                    "name": "Bram Steenwinckel"
                },
                {
                    "authorId": "2812519",
                    "name": "S. Verstichel"
                },
                {
                    "authorId": "1726557",
                    "name": "F. Ongenae"
                },
                {
                    "authorId": "1790767",
                    "name": "S. V. Hoecke"
                }
            ]
        },
        {
            "paperId": "428ae8b4885c67014c5afa1474633e99e00af840",
            "title": "Scalable Fleet Monitoring and Visualization for Smart Machine Maintenance and Industrial IoT Applications",
            "abstract": "The wide adoption of smart machine maintenance in manufacturing is blocked by open challenges in the Industrial Internet of Things (IIoT) with regard to robustness, scalability and security. Solving these challenges is of uttermost importance to mission-critical industrial operations. Furthermore, effective application of predictive maintenance requires well-trained machine learning algorithms which on their turn require high volumes of reliable data. This paper addresses both challenges and presents the Smart Maintenance Living Lab, an open test and research platform that consists of a fleet of drivetrain systems for accelerated lifetime tests of rolling-element bearings, a scalable IoT middleware cloud platform for reliable data ingestion and persistence, and a dynamic dashboard application for fleet monitoring and visualization. Each individual component within the presented system is discussed and validated, demonstrating the feasibility of IIoT applications for smart machine maintenance. The resulting platform provides benchmark data for the improvement of machine learning algorithms, gives insights into the design, implementation and validation of a complete architecture for IIoT applications with specific requirements concerning robustness, scalability and security and therefore reduces the reticence in the industry to widely adopt these technologies.",
            "fieldsOfStudy": [
                "Computer Science",
                "Medicine"
            ],
            "authors": [
                {
                    "authorId": "1506980790",
                    "name": "Pieter Moens"
                },
                {
                    "authorId": "1857451378",
                    "name": "Vincent Bracke"
                },
                {
                    "authorId": "1857545705",
                    "name": "Colin Soete"
                },
                {
                    "authorId": "51286999",
                    "name": "Sander Vanden Hautte"
                },
                {
                    "authorId": "119432977",
                    "name": "Diego Nieves Avendano"
                },
                {
                    "authorId": "51913455",
                    "name": "T. Ooijevaar"
                },
                {
                    "authorId": "40429475",
                    "name": "S. Devos"
                },
                {
                    "authorId": "1803683",
                    "name": "B. Volckaert"
                },
                {
                    "authorId": "1790767",
                    "name": "S. V. Hoecke"
                }
            ]
        },
        {
            "paperId": "5acadb3ecba5d836b6b229d71a6baf5860864382",
            "title": "Towards Adaptive Anomaly Detection and Root Cause Analysis by Automated Extraction of Knowledge from Risk Analyses",
            "abstract": ". Connected sensors inside the device can analyse the environment and report possible unwanted behaviour. Current risk analysis tools, such as Fault Tree Analysis (FTA) and Failure Mode and E\ufb00ect Analysis (FMEA), provide prior information on these malfunctions. A lot of people are involved during this process, resulting in disambiguates and incompleteness. Ontologies could resolve this issue by providing an uniform structure for the failures and their causes. However, domain experts are not always ontology experts, resulting in a lot of human e\ufb00ort to keep the ontologies up to date. In this paper, a tool is developed to automate the mapping of the data from the FMEA to a domain-speci\ufb01c ontology and generate rules from a constructed FTA. The approach is demonstrated with a use case to investigate the possible failures and causes of reduced passenger comfort levels inside a train.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "51138839",
                    "name": "Bram Steenwinckel"
                },
                {
                    "authorId": "1896690",
                    "name": "Pieter Heyvaert"
                },
                {
                    "authorId": "3463404",
                    "name": "Dieter De Paepe"
                },
                {
                    "authorId": "3001762",
                    "name": "Olivier Janssens"
                },
                {
                    "authorId": "51286999",
                    "name": "Sander Vanden Hautte"
                },
                {
                    "authorId": "1722023",
                    "name": "Anastasia Dimou"
                },
                {
                    "authorId": "1715957",
                    "name": "F. Turck"
                },
                {
                    "authorId": "1790767",
                    "name": "S. V. Hoecke"
                },
                {
                    "authorId": "1726557",
                    "name": "F. Ongenae"
                }
            ]
        },
        {
            "paperId": "7da2ed0b72362e18ef2ec84758a09e576fe06f4c",
            "title": "Automated Extraction of Rules and Knowledge from Risk Analyses: a Ventilation Unit Demo",
            "abstract": "Assessing upfront the causes and effects of failures is an important aspect of system manufacturing. Nowadays, these analyses are performed by a large number of experts. To enable semantic unification and easy operationalization of these risk analyses, this paper demonstrates an approach to automatically map the captured information into an ontology and accompanying rules. The approach is demonstrated with a use case to identify anomalies and their causes within a ventilation unit.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "51138839",
                    "name": "Bram Steenwinckel"
                },
                {
                    "authorId": "1896690",
                    "name": "Pieter Heyvaert"
                },
                {
                    "authorId": "3463404",
                    "name": "Dieter De Paepe"
                },
                {
                    "authorId": "3001762",
                    "name": "Olivier Janssens"
                },
                {
                    "authorId": "51286999",
                    "name": "Sander Vanden Hautte"
                },
                {
                    "authorId": "1722023",
                    "name": "Anastasia Dimou"
                },
                {
                    "authorId": "1715957",
                    "name": "F. Turck"
                },
                {
                    "authorId": "1790767",
                    "name": "S. V. Hoecke"
                },
                {
                    "authorId": "1726557",
                    "name": "F. Ongenae"
                }
            ]
        }
    ]
}