{
    "authorId": "102919472",
    "papers": [
        {
            "paperId": "69aed6ffc30f8f2a7684c76a82475464b3d8e92d",
            "title": "Enumerating Minimal Unsatisfiable Cores of LTLf formulas",
            "abstract": "Linear Temporal Logic over finite traces ($\\text{LTL}_f$) is a widely used formalism with applications in AI, process mining, model checking, and more. The primary reasoning task for $\\text{LTL}_f$ is satisfiability checking; yet, the recent focus on explainable AI has increased interest in analyzing inconsistent formulas, making the enumeration of minimal explanations for infeasibility a relevant task also for $\\text{LTL}_f$. This paper introduces a novel technique for enumerating minimal unsatisfiable cores (MUCs) of an $\\text{LTL}_f$ specification. The main idea is to encode a $\\text{LTL}_f$ formula into an Answer Set Programming (ASP) specification, such that the minimal unsatisfiable subsets (MUSes) of the ASP program directly correspond to the MUCs of the original $\\text{LTL}_f$ specification. Leveraging recent advancements in ASP solving yields a MUC enumerator achieving good performance in experiments conducted on established benchmarks from the literature.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "102919472",
                    "name": "Antonio Ielo"
                },
                {
                    "authorId": "2259981999",
                    "name": "Giuseppe Mazzotta"
                },
                {
                    "authorId": "2261752448",
                    "name": "Rafael Pe\u00f1aloza"
                },
                {
                    "authorId": "2259950505",
                    "name": "Francesco Ricca"
                }
            ]
        },
        {
            "paperId": "d1bc0593cd45e2ce381be20954d23cfd0f5261b7",
            "title": "Continuous reasoning for adaptive container image distribution in the cloud-edge continuum",
            "abstract": "Cloud-edge computing requires applications to operate across diverse infrastructures, often triggered by cyber-physical events. Containers offer a lightweight deployment option but pulling images from central repositories can cause delays. This article presents a novel declarative approach and open-source prototype for replicating container images across the cloud-edge continuum. Considering resource availability, network QoS, and storage costs, we leverage logic programming to (i) determine optimal initial placements via Answer Set Programming (ASP) and (ii) adapt placements using Prolog-based continuous reasoning. We evaluate our solution through simulations, showcasing how combining ASP and Prolog continuous reasoning can balance cost optimisation and prompt decision-making in placement adaptation at increasing infrastructure sizes.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "34721141",
                    "name": "Damiano Azzolini"
                },
                {
                    "authorId": "2311695613",
                    "name": "Stefano Forti"
                },
                {
                    "authorId": "102919472",
                    "name": "Antonio Ielo"
                }
            ]
        },
        {
            "paperId": "06670ccfd2fe290d671f2627a31e0dbada8bbeec",
            "title": "Logic-based Composition of Business Process Models",
            "abstract": "Process Mining is a family of techniques that exploit data collected from process execution to analyze and improve process efficiency, quality, and security. Over the years, many modeling languages have been proposed for process model specification, with different expressiveness, features, and computational properties.\n\nWe propose a new logic-based declarative formalism, called Constraint Formulae, to compose process specifications, expressed in heterogeneous process modeling languages, without altering their original semantics. We formalize common process mining tasks for Constraint Formulae, study their computational properties, and provide an implementation in Answer Set Programming.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1705291",
                    "name": "Valeria Fionda"
                },
                {
                    "authorId": "102919472",
                    "name": "Antonio Ielo"
                },
                {
                    "authorId": "17858580",
                    "name": "F. Ricca"
                }
            ]
        },
        {
            "paperId": "0036db29b705d288dfc74dc1ea09fb324096e643",
            "title": "Declarative Mining of Business Processes via ASP",
            "abstract": "Declarative process discovery algorithms aim to identify a subset of relationships between process\u2019 activities (\u201cconstraints\") that implicitly define the acceptable behavior of a process given a bag of its execution traces. Declarative process models have proven effective in dealing with loosely-structured processes and complex domains. This paper proposes a declarative approach to mine constraints over a set of process variants that satisfy user-defined optimization criteria and preferences. We implement the approach using Answer Set Programming, a declarative paradigm developed in logic programming and non-monotonic reasoning.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "102919472",
                    "name": "Antonio Ielo"
                },
                {
                    "authorId": "1710973",
                    "name": "L. Pontieri"
                },
                {
                    "authorId": "17858580",
                    "name": "F. Ricca"
                }
            ]
        },
        {
            "paperId": "3921c1acc9174a8d1a43d246894bdafc01bf428f",
            "title": "Answer Set Computation of Negative Two-Literal Programs Based on Graph Neural Networks: Preliminary Results",
            "abstract": ". Graph neural networks architectures have been successfully applied to combinatorial optimization problems such as SAT and MAX-CSP. In this work in progress we attempt to adapt similar techniques to Answer Set Programming, in particular to negative two-literal programs as they represent a class of programs of practical and theoretical interest whose answer sets have a full graph-theoretical characterization.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "102919472",
                    "name": "Antonio Ielo"
                },
                {
                    "authorId": "17858580",
                    "name": "F. Ricca"
                }
            ]
        }
    ]
}