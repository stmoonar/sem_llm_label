{
    "authorId": "2073092250",
    "papers": [
        {
            "paperId": "0c903d7418287c4dca5e1f45a4b26e3a9d5c93c2",
            "title": "Transfer Learning Strategies for Anomaly Detection in IoT Vibration Data",
            "abstract": "An increasing number of industrial assets are equipped with IoT sensor platforms and the industry now expects data-driven maintenance strategies with minimal deployment costs. However, gathering labeled training data for supervised tasks such as anomaly detection is costly and often difficult to implement in operational environments. Therefore, this work aims to design and implement a solution that reduces the required amount of data for training anomaly classification models on time series sensor data and thereby brings down the overall deployment effort of IoT anomaly detection sensors. We set up several in-lab experiments using three peristaltic pumps and investigated approaches for transferring trained anomaly detection models across assets of the same type. Our experiments achieved promising effectiveness and provide initial evidence that transfer learning could be a suitable strategy for using pre-trained anomaly classification models across industrial assets of the same type with minimal prior labeling and training effort. This work could serve as a starting point for more general, pre-trained sensor data embeddings, applicable to a wide range of assets.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "102437585",
                    "name": "Clemens Heistracher"
                },
                {
                    "authorId": "66533544",
                    "name": "Anahid N. Jalali"
                },
                {
                    "authorId": "2136007339",
                    "name": "Indu Strobl"
                },
                {
                    "authorId": "2131616037",
                    "name": "Axel Suendermann"
                },
                {
                    "authorId": "2073092250",
                    "name": "Sebastian Meixner"
                },
                {
                    "authorId": "2044356893",
                    "name": "Stephan Holly"
                },
                {
                    "authorId": "2174929320",
                    "name": "Daniel Schall"
                },
                {
                    "authorId": "1679379",
                    "name": "Bernhard Haslhofer"
                },
                {
                    "authorId": "20650897",
                    "name": "J. Kemnitz"
                }
            ]
        },
        {
            "paperId": "f75b84a9f8155ecdf32a263b6e4997e24f9fa152",
            "title": "Minimal-Configuration Anomaly Detection for IIoT Sensors",
            "abstract": "The increasing deployment of low-cost IoT sensor platforms in industry boosts the demand for anomaly detection solutions that fulfill two key requirements: minimal configuration effort and easy transferability across equipment. Recent advances in deep learning, especially long-short-term memory (LSTM) and autoencoders, offer promising methods for detecting anomalies in sensor data recordings. We compared autoencoders with various architectures such as deep neural networks (DNN), LSTMs and convolutional neural networks (CNN) using a simple benchmark dataset, which we generated by operating a peristaltic pump under various operating conditions and inducing anomalies manually. Our preliminary results indicate that a single model can detect anomalies under various operating conditions on a four-dimensional data set without any specific feature engineering for each operating condition. We consider this work as being the first step towards a generic anomaly detection method, which is applicable for a wide range of industrial equipment.",
            "fieldsOfStudy": [
                "Computer Science",
                "Engineering"
            ],
            "authors": [
                {
                    "authorId": "102437585",
                    "name": "Clemens Heistracher"
                },
                {
                    "authorId": "66533544",
                    "name": "Anahid N. Jalali"
                },
                {
                    "authorId": "2131616037",
                    "name": "Axel Suendermann"
                },
                {
                    "authorId": "2073092250",
                    "name": "Sebastian Meixner"
                },
                {
                    "authorId": "145900451",
                    "name": "D. Schall"
                },
                {
                    "authorId": "1679379",
                    "name": "Bernhard Haslhofer"
                },
                {
                    "authorId": "20650897",
                    "name": "J. Kemnitz"
                }
            ]
        },
        {
            "paperId": "207c1987ffd0dd681d1c469d669233136fea45b7",
            "title": "Automatic Application Placement and Adaptation in Cloud-Edge Environments",
            "abstract": "Edge computing describes a paradigm for combining computational resources at the edge of the network with the cloud. Even though complementing the cloud with these resources provides benefits, e.g., low latency, it also introduces new challenges to the operational staff. Such challenges can be: deciding if the applications should be placed in the cloud or at the edge, and monitoring them at runtime to ensure that all the application requirements are met. This becomes more challenging when using microservices due to the complexity of the resulting placement problem. To mitigate such concerns, we introduce an automatic deployment framework along with a prototype implementation, called D-DAD. This framework provides a transparent (to the operational staff) way to deploy applications with respect to all their requirements\u2014including the non-functional\u2014using mechanisms for monitoring and adapting the deployments to the available resources in a cloud-edge environment. For evaluating our framework, we provide results from a series of experiments which show how the adaptation mechanism meets the application requirements, including a ~90% reduction of CPU utilization violations, compared to using only the local resources.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2073092250",
                    "name": "Sebastian Meixner"
                },
                {
                    "authorId": "145900451",
                    "name": "D. Schall"
                },
                {
                    "authorId": "2115374633",
                    "name": "Fei Li"
                },
                {
                    "authorId": "144070013",
                    "name": "Vasileios Karagiannis"
                },
                {
                    "authorId": "144042741",
                    "name": "Stefan Schulte"
                },
                {
                    "authorId": "2830231",
                    "name": "Konstantinos Plakidas"
                }
            ]
        },
        {
            "paperId": "5b644af21b7d5593a08e05a948db1492a87b50b0",
            "title": "Process traceability in distributed manufacturing using blockchains",
            "abstract": "This paper introduces a novel Machine Sharing Economy (MSE) approach to support machine owners in sharing idle machine capacities by means of a marketplace. Manufacturing networks and supply chains are thus no longer static and driven by long-term agreements, but rather dynamic and time-bound. In such distributed manufacturing systems, it is important to keep track of the operations that have been performed, including relevant production information such as the actual machines performing a task, tools, and their parameters. We propose a tamper-proof blockchain-based framework to close the feedback cycle by emitting relevant events of the production process and storing process values in the blockchain. This paper describes the overall architecture of the system including a detailed discussion how the feedback cycle for distributed manufacturing systems has been realized using blockchains. In addition, we perform an empirical validation at a real-world digital factory and present our lessons learned.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2077427760",
                    "name": "Sebastian Geiger"
                },
                {
                    "authorId": "145900451",
                    "name": "D. Schall"
                },
                {
                    "authorId": "2073092250",
                    "name": "Sebastian Meixner"
                },
                {
                    "authorId": "2073553605",
                    "name": "Andreas Egger"
                }
            ]
        },
        {
            "paperId": "388e50386eff6a728db65fca3d8303a6a14d5705",
            "title": "Microservice Patterns for the Life Cycle of Industrial Edge Software",
            "abstract": "The Industry 4.0 initiative is pushing traditional production systems and methodologies through fundamental changes. In traditional industries such as manufacturing, utilities, and infrastructure monitoring, customers are demanding more flexibility and greater efficiency. The software that oversees these systems addresses these demands by adopting novel architectural styles and patterns. Industrial edge systems are gaining momentum because they offer superior data security and better response time to field operations. Microservice style has been adopted from cloud services because it improves development efficiency. This paper presents architecture patterns that cover four phases in the life cycle of industrial software. In the deployment phase, DOWNSHIFTING moves microservices from the cloud to the edge. During runtime, MONITORING CONNECTORS oversee properties of microservices at the edge, such as performance and resource usage. When adaptation is needed, EDGE-TO-CLOUD LOAD BALANCING leverages cloud resources to fulfill performance expectations. When a new microservice version is deployed, TEST PROBE enables testing the microservice at the edge without interfering with ongoing operations. This paper is intended for architects, developers and practitioners who are involved in delivering software in industrial edge environments.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2115374633",
                    "name": "Fei Li"
                },
                {
                    "authorId": "1721488",
                    "name": "J. Fr\u00f6hlich"
                },
                {
                    "authorId": "145900451",
                    "name": "D. Schall"
                },
                {
                    "authorId": "66137912",
                    "name": "Markus Lachenmayr"
                },
                {
                    "authorId": "3450772",
                    "name": "Christoph St\u00fcckj\u00fcrgen"
                },
                {
                    "authorId": "2073092250",
                    "name": "Sebastian Meixner"
                },
                {
                    "authorId": "3133006",
                    "name": "F. Buschmann"
                }
            ]
        }
    ]
}