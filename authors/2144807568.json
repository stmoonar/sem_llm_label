{
    "authorId": "2144807568",
    "papers": [
        {
            "paperId": "0d70ae75101c19199f0c475b5482305a3d1087cc",
            "title": "GraphSense: A General-Purpose Cryptoasset Analytics Platform",
            "abstract": "There is currently an increasing demand for cryptoasset analysis tools among cryptoasset service providers, the financial industry in general, as well as across academic fields. At the moment, one can choose between commercial services or low-level open-source tools providing programmatic access. In this paper, we present the design and implementation of another option: the GraphSense Cryptoasset Analytics Platform, which can be used for interactive investigations of monetary flows and, more importantly, for executing advanced analytics tasks using a standard data science tool stack. By providing a growing set of open-source components, GraphSense could ultimately become an instrument for scientific investigations in academia and a possible response to emerging compliance and regulation challenges for businesses and organizations dealing with cryptoassets.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1679379",
                    "name": "Bernhard Haslhofer"
                },
                {
                    "authorId": "2074914548",
                    "name": "Rainer St\u00fctz"
                },
                {
                    "authorId": "118700367",
                    "name": "Matteo Romiti"
                },
                {
                    "authorId": "2144807568",
                    "name": "Ross D. King"
                }
            ]
        },
        {
            "paperId": "0ec103bbb55542c7ada1e985aaa035d1abe57b76",
            "title": "On the Use of Computer Programs as Money",
            "abstract": "Money is a technology for promoting economic prosperity. Over history money has become increasingly abstract, it used to be hardware, gold coins and the like, now it is mostly software, data structures located in banks. Here I propose the logical conclusion of the abstraction of money: to use as money the most general form of information - computer programs. The key advantage that using programs for money (program-money) adds to the technology of money is agency. Program-money is active and thereby can fully participate in economics as economic agents. I describe the three basic technologies required to implement program-money: computational languages/logics to unambiguously describe the actions and interactions of program-money; computational cryptography to ensure that only the correct actions and interactions are performed; and a distributed computational environment in which the money can execute. I demonstrate that most of the technology for program-money has already been developed. The adoption of program-money transfers responsibility from human economic agents to money itself and has great potential economic advantages over the current passive form of money. For example in microeconomics, adding agency to money will simplify the exchange of ownership, ensure money is only used legally, automate the negotiation and forming of contracts, etc. Similar advantages occur in macroeconomics, where for example the control of the money supply could be transferred from central banks to money. It is also possible to envisage money that is not owned by any external human agent or corporation. One motivation for this is to force economic systems to behave more rationally and/or more like a specific economic theory, thereby increasing the success of economic forecasting.",
            "fieldsOfStudy": [
                "Economics",
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2144807568",
                    "name": "Ross D. King"
                }
            ]
        },
        {
            "paperId": "7aa17d7e4a12027149639cf2be97196ec88372d8",
            "title": "Numbers as Data Structures: The Prime Successor Function as Primitive",
            "abstract": "The symbolic representation of a number should be considered as a data structure, and the choice of data structure depends on the arithmetic operations that are to be performed. Numbers are almost universally represented using position based notations based on exponential powers of a base number - usually 10. This representations is computationally efficient for the standard arithmetic operations, but it is not efficient for factorisation. This has led to a common confusion that factorisation is inherently computationally hard. We propose a new representation of the natural numbers based on bags and using the prime successor function as a primitive - prime bags (PBs). This data structure is more efficient for most arithmetic operations, and enables numbers can be efficiently factored. However, it also has the interesting feature that addition appears to be computationally hard. PBs have an interesting alternative interpretation as partitions of numbers represented in the standard way, and this reveals a novel relationship between prime numbers and the partition function. The PB representation can be extended to rational and irrational numbers, and this provides the most direct proof of the irrationality of the square root of 2. I argue that what needs to be ultimately understood is not the peculiar computation complexity properties of the decimal system (e.g. factorisation), but rather what arithmetical operator trade-offs are generally possible.",
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "authors": [
                {
                    "authorId": "2144807568",
                    "name": "Ross D. King"
                }
            ]
        }
    ]
}