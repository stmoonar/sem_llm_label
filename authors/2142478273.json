{
    "authorId": "2142478273",
    "papers": [
        {
            "paperId": "46312814ce53b3471829669022ecbf00ea7291fb",
            "title": "Adversarial Attacks on Multi-Network Mining: Problem Definition and Fast Solutions",
            "abstract": "Multi-sourced networks naturally appear in many application domains, ranging from bioinformatics, social networks, neuroscience to management. Although state-of-the-art offers rich models and algorithms to find various patterns when input networks are given, it has largely remained nascent on how vulnerable the mining results are due to the adversarial attacks. In this paper, we address the problem of attacking multi-network mining through the way of deliberately perturbing the networks to alter the mining results. The key idea of the proposed method (<sc>Admiring</sc>) is effective and efficient influence functions on the Sylvester equation defined over the input networks, which plays a central and unifying role in various multi-network mining tasks. The proposed algorithms bear three main advantages, including (1) <italic>effectiveness,</italic> being able to accurately quantify the rate of change of the mining results in response to attacks; (2) <italic>efficiency,</italic> scaling <italic>linearly</italic> with more than <inline-formula><tex-math notation=\"LaTeX\">$100 \\times$</tex-math><alternatives><mml:math><mml:mrow><mml:mn>100</mml:mn><mml:mo>\u00d7</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href=\"zhou-ieq1-3078634.gif\"/></alternatives></inline-formula> speed-up over the straightforward implementation without any quality loss; and (3) <italic>generality,</italic> being applicable to a variety of multi-network mining tasks (e.g., graph kernel, network alignment, cross-network node similarity) with different attacking strategies (e.g., edge/node removal, attribute alteration).",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1491243049",
                    "name": "Qinghai Zhou"
                },
                {
                    "authorId": "2145728192",
                    "name": "Liangyue Li"
                },
                {
                    "authorId": "144313415",
                    "name": "Nan Cao"
                },
                {
                    "authorId": "2142478273",
                    "name": "Lei Ying"
                },
                {
                    "authorId": "8163721",
                    "name": "Hanghang Tong"
                }
            ]
        },
        {
            "paperId": "be2210d4c6ca50b429f20fb4175b1266182ddcf4",
            "title": "Reconstructing Graph Diffusion History from a Single Snapshot",
            "abstract": "Diffusion on graphs is ubiquitous with numerous high-impact applications, ranging from the study of residential segregation in socioeconomics and activation cascading in neuroscience, to the modeling of disease contagion in epidemiology and malware spreading in cybersecurity. In these applications, complete diffusion histories play an essential role in terms of identifying dynamical patterns, reflecting on precaution actions, and forecasting intervention effects. Despite their importance, complete diffusion histories are rarely available and are highly challenging to reconstruct due to ill-posedness, explosive search space, and scarcity of training data. To date, few methods exist for diffusion history reconstruction. They are exclusively based on the maximum likelihood estimation (MLE) formulation and require to know true diffusion parameters. In this paper, we study an even harder problem, namely reconstructing Diffusion history from A single SnapsHot (DASH), where we seek to reconstruct the history from only the final snapshot without knowing true diffusion parameters. We start with theoretical analyses that reveal a fundamental limitation of the MLE formulation. We prove: (a) estimation error of diffusion parameters is unavoidable due to NP-hardness of diffusion parameter estimation, and (b) the MLE formulation is sensitive to estimation error of diffusion parameters. To overcome the inherent limitation of the MLE formulation, we propose a novel barycenter formulation: finding the barycenter of the posterior distribution of histories, which is provably stable against the estimation error of diffusion parameters. We further develop an effective solver named DIffusion hiTting Times with Optimal proposal (DITTO) by reducing the problem to estimating posterior expected hitting times via the Metropolis-Hastings Markov chain Monte Carlo method (M-H MCMC) and employing an unsupervised graph neural network to learn an optimal proposal to accelerate the convergence of M-H MCMC. We conduct extensive experiments to demonstrate the efficacy of the proposed method. Our code is available at https://github.com/q-rz/KDD23-DITTO. The appendix can be found at https://arxiv.org/abs/2306.00488.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2187298875",
                    "name": "Ruizhong Qiu"
                },
                {
                    "authorId": "150084152",
                    "name": "Dingsu Wang"
                },
                {
                    "authorId": "2142478273",
                    "name": "Lei Ying"
                },
                {
                    "authorId": "145967056",
                    "name": "H. Poor"
                },
                {
                    "authorId": "2180533657",
                    "name": "Yifang Zhang"
                },
                {
                    "authorId": "2058143613",
                    "name": "H. Tong"
                }
            ]
        },
        {
            "paperId": "acda0d4c1b3a63a73849f05cbc73dd283f87edf9",
            "title": "Batch Active Learning with Graph Neural Networks via Multi-Agent Deep Reinforcement Learning",
            "abstract": "Graph neural networks (GNNs) have achieved tremendous success in many graph learning tasks such as node classification, graph classification and link prediction. For the classification task, GNNs' performance often highly depends on the number of labeled nodes and thus could be significantly hampered due to the expensive annotation cost. The sparse literature on active learning for GNNs has primarily focused on selecting only one sample each iteration, which becomes inefficient for large scale datasets. In this paper, we study the batch active learning setting for GNNs where the learning agent can acquire labels of multiple samples at each time. We formulate batch active learning as a cooperative multi-agent reinforcement learning problem and present a novel reinforced batch-mode active learning framework BiGeNe. To avoid the combinatorial explosion of the joint action space, we introduce a value decomposition method that factorizes the total Q-value into the average of individual Q-values. Moreover, we propose a novel multi-agent Q-network consisting of a graph convolutional network (GCN) component and a gated recurrent unit (GRU) component. The GCN component takes both the informativeness and inter-dependences between nodes into account and the GRU component enables the agent to consider interactions between selected nodes in the same batch. Experimental results on multiple public datasets demonstrate the effectiveness and efficiency of our proposed method.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2108543360",
                    "name": "Yuheng Zhang"
                },
                {
                    "authorId": "8163721",
                    "name": "Hanghang Tong"
                },
                {
                    "authorId": "35846319",
                    "name": "Yinglong Xia"
                },
                {
                    "authorId": null,
                    "name": "Yan Zhu"
                },
                {
                    "authorId": "1784472",
                    "name": "Yuejie Chi"
                },
                {
                    "authorId": "2142478273",
                    "name": "Lei Ying"
                }
            ]
        }
    ]
}