{
    "authorId": "1380151268",
    "papers": [
        {
            "paperId": "0e2d94dc044191825c0137817a928cae7ea95a7f",
            "title": "Ou: Automating the Parallelization of Zero-Knowledge Protocols",
            "abstract": "A zero-knowledge proof (ZKP) is a powerful cryptographic primitive used in many decentralized or privacy-focused applications. However, the high overhead of ZKPs can restrict their practical applicability. We design a programming language, Ou, aimed at easing the programmer's burden when writing efficient ZKPs, and a compiler framework, Lian, that automates the analysis and distribution of statements to a computing cluster. Ou uses programming language semantics, formal methods, and combinatorial optimization to automatically partition an Ou program into efficiently sized chunks for parallel ZK-proving and/or verification. We contribute: (1) A front-end language where users can write proof statements as imperative programs in a familiar syntax; (2) A compiler architecture and implementation that automatically analyzes the program and compiles it into an optimized IR that can be lifted to a variety of ZKP constructions; and (3) A cutting algorithm, based on Pseudo-Boolean optimization and Integer Linear Programming, that reorders instructions and then partitions the program into efficiently sized chunks for parallel evaluation and efficient state reconciliation.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1380151268",
                    "name": "Yuyang Sang"
                },
                {
                    "authorId": "2065660489",
                    "name": "Ning Luo"
                },
                {
                    "authorId": "2007693530",
                    "name": "Samuel Judson"
                },
                {
                    "authorId": "2219634695",
                    "name": "Ben Chaimberg"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "144129720",
                    "name": "Xiao Wang"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "144656147",
                    "name": "Zhong Shao"
                }
            ]
        },
        {
            "paperId": "97e6bf5c6210a0d82f9772f2987e8c17951c0e5d",
            "title": "DeepSEA: a language for certified system software",
            "abstract": "Writing certifiably correct system software is still very labor-intensive, and current programming languages are not well suited for the task. Proof assistants work best on programs written in a high-level functional style, while operating systems need low-level control over the hardware. We present DeepSEA, a language which provides support for layered specification and abstraction refinement, effect encapsulation and composition, and full equational reasoning. A single DeepSEA program is automatically compiled into a certified ``layer'' consisting of a C program (which is then compiled into assembly by CompCert), a low-level functional Coq specification, and a formal (Coq) proof that the C program satisfies the specification. Multiple layers can be composed and interleaved with manual proofs to ascribe a high-level specification to a program by stepwise refinement. We evaluate the language by using it to reimplement two existing verified programs: a SHA-256 hash function and an OS kernel page table manager. This new style of programming language design can directly support the development of correct-by-construction system software.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2272749",
                    "name": "Vilhelm Sj\u00f6berg"
                },
                {
                    "authorId": "1380151268",
                    "name": "Yuyang Sang"
                },
                {
                    "authorId": "2733541",
                    "name": "Shu-Chun Weng"
                },
                {
                    "authorId": "144656147",
                    "name": "Zhong Shao"
                }
            ]
        }
    ]
}