{
    "authorId": "66953961",
    "papers": [
        {
            "paperId": "1d25eb96d7a3e2b26735df9a4c6cdb3cfecb96e3",
            "title": "Benchmarking for Deep Uplift Modeling in Online Marketing",
            "abstract": "Online marketing is critical for many industrial platforms and business applications, aiming to increase user engagement and platform revenue by identifying corresponding delivery-sensitive groups for specific incentives, such as coupons and bonuses. As the scale and complexity of features in industrial scenarios increase, deep uplift modeling (DUM) as a promising technique has attracted increased research from academia and industry, resulting in various predictive models. However, current DUM still lacks some standardized benchmarks and unified evaluation protocols, which limit the reproducibility of experimental results in existing studies and the practical value and potential impact in this direction. In this paper, we provide an open benchmark for DUM and present comparison results of existing models in a reproducible and uniform manner. To this end, we conduct extensive experiments on two representative industrial datasets with different preprocessing settings to re-evaluate 13 existing models. Surprisingly, our experimental results show that the most recent work differs less than expected from traditional work in many cases. In addition, our experiments also reveal the limitations of DUM in generalization, especially for different preprocessing and test distributions. Our benchmarking work allows researchers to evaluate the performance of new models quickly but also reasonably demonstrates fair comparison results with existing models. It also gives practitioners valuable insights into often overlooked considerations when deploying DUM. We will make this benchmarking library, evaluation protocol, and experimental setup available on GitHub.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2240611823",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "2204648054",
                    "name": "Yang Qiao"
                },
                {
                    "authorId": "2144067082",
                    "name": "Miao Liu"
                },
                {
                    "authorId": "2257124500",
                    "name": "Zexu Sun"
                },
                {
                    "authorId": "2261430143",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "2304455592",
                    "name": "Zhong Ming"
                }
            ]
        },
        {
            "paperId": "36c87f474378d3b352dc125d22cec672fd3c54c3",
            "title": "MultiFS: Automated Multi-Scenario Feature Selection in Deep Recommender Systems",
            "abstract": "Multi-scenario recommender systems (MSRSs) have been increasingly used in real-world industrial platforms for their excellent advantages in mitigating data sparsity and reducing maintenance costs. However, conventional MSRSs usually use all relevant features indiscriminately and ignore that different kinds of features have varying importance under different scenarios, which may cause confusion and performance degradation. In addition, existing feature selection methods for deep recommender systems may lack the exploration of scenario relations. In this paper, we propose a novel automated multi-scenario feature selection (MultiFS) framework to bridge this gap, which is able to consider scenario relations and utilize a hierarchical gating mechanism to select features for each scenario. Specifically, MultiFS first efficiently obtains feature importance across all the scenarios through a scenario-shared gate. Then, some scenario-specific gate aims to identify feature importance to individual scenarios from a subset of the former with lower importance. Subsequently, MultiFS imposes constraints on the two gates to make the learning mechanism more feasible and combines the two to select exclusive features for different scenarios. We evaluate MultiFS and demonstrate its ability to enhance the multi-scenario model performance through experiments over two public multi-scenario benchmarks.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2290696975",
                    "name": "Chaohua Yang"
                },
                {
                    "authorId": "2240611823",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "2162455919",
                    "name": "Yejing Wang"
                },
                {
                    "authorId": "1704274486",
                    "name": "Fuyuan Lyu"
                },
                {
                    "authorId": "2261426672",
                    "name": "Weihong Luo"
                },
                {
                    "authorId": "2261430143",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "2240535483",
                    "name": "Zhong Ming"
                },
                {
                    "authorId": "2116711669",
                    "name": "Xiangyu Zhao"
                }
            ]
        },
        {
            "paperId": "4f0cb55cf6f23e88ce1824a3100f686cc5912dfe",
            "title": "AutoDCS: Automated Decision Chain Selection in Deep Recommender Systems",
            "abstract": "Multi-behavior recommender systems (MBRS) have been commonly deployed on real-world industrial platforms for their superior advantages in understanding user preferences and mitigating data sparsity. However, the cascade graph modeling paradigm adopted in mainstream MBRS usually assumes that users will refer to all types of behavioral knowledge they have when making decisions about target behaviors, i.e., use all types of behavioral interactions indiscriminately when modeling and predicting target behaviors for each user. We call this a full decision chain constraint and argue that it may be too strict by ignoring that different types of behavioral knowledge have varying importance for different users. In this paper, we propose a novel automated decision chain selection (AutoDCS) framework to relax this constraint, which can consider each user\u2019s unique decision dependencies and select a reasonable set of behavioral knowledge to activate for the prediction of target behavior. Specifically, AutoDCS first integrates some existing MBRS methods in a base cascade module to obtain a set of behavior-aware embeddings. Then, a bilateral matching gating mechanism is used to select an exclusive set of behaviors for the current user-item pair to form a decision chain, and the corresponding behavior-augmented embeddings are selectively activated. Subse-quently, AutoDCS combines the behavior-augmented and original behavior-aware embeddings to predict the target behavior. Finally, we evaluate AutoDCS and demonstrate its effectiveness through experiments over four public multi-behavior benchmarks.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2304454810",
                    "name": "Shenxian Xian"
                },
                {
                    "authorId": "2240770864",
                    "name": "Yuhao Wu"
                },
                {
                    "authorId": "2290696975",
                    "name": "Chaohua Yang"
                },
                {
                    "authorId": "2240611823",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "2261430143",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "2304455592",
                    "name": "Zhong Ming"
                }
            ]
        },
        {
            "paperId": "8c9f0aa53c123a08b0b0968f0657ea0c4e7b7890",
            "title": "A Practice-Friendly Two-Stage LLM-Enhanced Paradigm in Sequential Recommendation",
            "abstract": "The training paradigm integrating large language models (LLM) is gradually reshaping sequential recommender systems (SRS) and has shown promising results. However, most existing LLM-enhanced methods rely on rich textual information on the item side and instance-level supervised fine-tuning (SFT) to inject collaborative information into LLM, which is inefficient and limited in many applications. To alleviate these problems, this paper proposes a novel practice-friendly two-stage LLM-enhanced paradigm (TSLRec) for SRS. Specifically, in the information reconstruction stage, we design a new user-level SFT task for collaborative information injection with the assistance of a pre-trained SRS model, which is more efficient and compatible with limited text information. We aim to let LLM try to infer the latent category of each item and reconstruct the corresponding user's preference distribution for all categories from the user's interaction sequence. In the information augmentation stage, we feed each item into LLM to obtain a set of enhanced embeddings that combine collaborative information and LLM inference capabilities. These embeddings can then be used to help train various future SRS models. Finally, we verify the effectiveness and efficiency of our TSLRec on three SRS benchmark datasets.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2304454810",
                    "name": "Shenxian Xian"
                },
                {
                    "authorId": "2187881407",
                    "name": "Xiaolin Lin"
                },
                {
                    "authorId": "2175970915",
                    "name": "Xiaolian Zhang"
                },
                {
                    "authorId": "2304434697",
                    "name": "Hong Zhu"
                },
                {
                    "authorId": "2220572561",
                    "name": "Yuan Fang"
                },
                {
                    "authorId": "2305207737",
                    "name": "Zhen Chen"
                },
                {
                    "authorId": "2304455592",
                    "name": "Zhong Ming"
                }
            ]
        },
        {
            "paperId": "b93d6d9682ef2f3cb6e7e567a31f120a5d6decfb",
            "title": "Automatically Inspecting Thousands of Static Bug Warnings with Large Language Model: How Far Are We?",
            "abstract": "Static analysis tools for capturing bugs and vulnerabilities in software programs are widely employed in practice, as they have the unique advantages of high coverage and independence from the execution environment. However, existing tools for analyzing large codebases often produce a great deal of false warnings over genuine bug reports. As a result, developers are required to manually inspect and confirm each warning, a challenging, time-consuming, and automation-essential task. This article advocates a fast, general, and easily extensible approach called Llm4sa that automatically inspects a sheer volume of static warnings by harnessing (some of) the powers of Large Language Models (LLMs). Our key insight is that LLMs have advanced program understanding capabilities, enabling them to effectively act as human experts in conducting manual inspections on bug warnings with their relevant code snippets. In this spirit, we propose a static analysis to effectively extract the relevant code snippets via program dependence traversal guided by the bug warning reports themselves. Then, by formulating customized questions that are enriched with domain knowledge and representative cases to query LLMs, Llm4sa can remove a great deal of false warnings and facilitate bug discovery significantly. Our experiments demonstrate that Llm4sa is practical in automatically inspecting thousands of static warnings from Juliet benchmark programs and 11 real-world C/C++ projects, showcasing a high precision (81.13%) and a recall rate (94.64%) for a total of 9,547 bug warnings. Our research introduces new opportunities and methodologies for using the LLMs to reduce human labor costs, improve the precision of static analyzers, and ensure software trustworthiness",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2068033261",
                    "name": "Cheng Wen"
                },
                {
                    "authorId": "2116361828",
                    "name": "Yuandao Cai"
                },
                {
                    "authorId": "2294167018",
                    "name": "Bin Zhang"
                },
                {
                    "authorId": "2268827043",
                    "name": "Jie Su"
                },
                {
                    "authorId": "2290622075",
                    "name": "Zhiwu Xu"
                },
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2268205001",
                    "name": "Shengchao Qin"
                },
                {
                    "authorId": "2240535483",
                    "name": "Zhong Ming"
                },
                {
                    "authorId": "2307438173",
                    "name": "Tian Cong"
                }
            ]
        },
        {
            "paperId": "15c576700d9ce48a1ce56aeb9f2b62071d63acd3",
            "title": "Prior-Guided Accuracy-Bias Tradeoff Learning for CTR Prediction in Multimedia Recommendation",
            "abstract": "Although debiasing in multimedia recommendation has shown promising results, most existing work relies on the ability of the model itself to fully disentangle the biased and unbiased information and considers arbitrarily removing all the biases. However, in many business scenarios, it is usually possible to extract a subset of features associated with the biases by means of expert knowledge, i.e., the confounding proxy features. Therefore, in this paper, we propose a novel debiasing framework with confounding proxy priors for the accuracy-bias tradeoff learning in the multimedia recommendation, or CP2Rec for short, in which these confounding proxy features driven by the expert experience are integrated into the model as prior knowledge corresponding to the biases. Specifically, guided by these priors, we use a bias disentangling module with some orthogonal constraints to force the model to avoid encoding biased information in the feature embeddings. We then introduce an auxiliary unbiased loss to synergize with the original biased loss in an accuracy-bias tradeoff module, aiming at recovering the beneficial bias information from the above-purified feature embeddings to achieve a more reasonable accuracy-bias tradeoff recommendation. Finally, we conduct extensive experiments on a public dataset and a product dataset to verify the effectiveness of CR2Rec. In addition, CR2Rec is also deployed on a large-scale financial multimedia recommendation platform in China and achieves a sustained performance gain.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2204648054",
                    "name": "Yang Qiao"
                },
                {
                    "authorId": "2240611823",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "2261475293",
                    "name": "Liang Chen"
                },
                {
                    "authorId": "2261430143",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "2240535483",
                    "name": "Zhong Ming"
                }
            ]
        },
        {
            "paperId": "3cd10b54e3b749f2e01bb298f46e063e8c2d8d0a",
            "title": "Self-Sampling Training and Evaluation for the Accuracy-Bias Tradeoff in Recommendation",
            "abstract": "Research on debiased recommendation has shown promising results. However, some issues still need to be handled for its application in industrial recommendation. For example, most of the existing methods require some specific data, architectures and training methods. In this paper, we first argue through an online study that arbitrarily removing all the biases in industrial recommendation may not consistently yield a desired performance improvement. For the situation that a randomized dataset is not available, we propose a novel self-sampling training and evaluation (SSTE) framework to achieve the accuracy-bias tradeoff in recommendation, i.e., eliminate the harmful biases and preserve the beneficial ones. Specifically, SSTE uses a self-sampling module to generate some subsets with different degrees of bias from the original training and validation data. A self-training module infers the beneficial biases and learns better tradeoff based on these subsets, and a self-evaluation module aims to use these subsets to construct more plausible references to reflect the optimized model. Finally, we conduct extensive offline experiments on two datasets to verify the effectiveness of our SSTE. Moreover, we deploy our SSTE in homepage recommendation of a famous financial management product called Tencent Licaitong, and find very promising results in an online A/B test.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2204648054",
                    "name": "Yang Qiao"
                },
                {
                    "authorId": "2109888596",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "2146034649",
                    "name": "Liang Chen"
                },
                {
                    "authorId": "1996703",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "144282460",
                    "name": "Weike Pan"
                },
                {
                    "authorId": "2106680008",
                    "name": "Zhong Ming"
                }
            ]
        },
        {
            "paperId": "7bd399e44edef48d5b95db47004aa90e19ffbf80",
            "title": "KDCRec: Knowledge Distillation for Counterfactual Recommendation via Uniform Data",
            "abstract": "The bias problems in recommender systems are an important challenge. In this paper, we focus on solving the bias problems via uniform data. Previous works have shown that simple modeling with a uniform data can alleviate the bias problems and improve the performance. However, the uniform data is usually few and expensive to collect in a real product. In order to use the valuable uniform data more effectively, we propose a novel and general knowledge distillation framework for counterfactual recommendation with four specific methods, including label-based distillation, feature-based distillation, sample-based distillation and model structure-based distillation. Moreover, we discuss the relation between the proposed framework and the previous works. We then conduct extensive experiments on both public and product datasets to verify the effectiveness of the proposed four methods. In addition, we explore and analyze the performance trends of the proposed methods on some key factors, and the changes in the distribution of the recommendation lists. Finally, we emphasize that counterfactual modeling with uniform data is a rich research area, and list some interesting and promising research topics worthy of further exploration. Note that the source codes are available at https://github.com/dgliu/TKDE_KDCRec.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "2087035377",
                    "name": "Pengxiang Cheng"
                },
                {
                    "authorId": "2695029",
                    "name": "Zi-Han Lin"
                },
                {
                    "authorId": "15218353",
                    "name": "Jinwei Luo"
                },
                {
                    "authorId": "3065080",
                    "name": "Zhenhua Dong"
                },
                {
                    "authorId": "1996703",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "144282460",
                    "name": "Weike Pan"
                },
                {
                    "authorId": "2106680008",
                    "name": "Zhong Ming"
                }
            ]
        },
        {
            "paperId": "8abd7b17824f19e1632939f1cc03e3223f675e52",
            "title": "Optimizing Feature Set for Click-Through Rate Prediction",
            "abstract": "Click-through prediction (CTR) models transform features into latent vectors and enumerate possible feature interactions to improve performance based on the input feature set. Therefore, when selecting an optimal feature set, we should consider the influence of both features and their interaction. However, most previous works focus on either feature field selection or only select feature interaction based on the fixed feature set to produce the feature set. The former restricts search space to the feature field, which is too coarse to determine subtle features. They also do not filter useless feature interactions, leading to higher computation costs and degraded model performance. The latter identifies useful feature interaction from all available features, resulting in many redundant features in the feature set. In this paper, we propose a novel method named OptFS to address these problems. To unify the selection of features and their interaction, we decompose the selection of each feature interaction into the selection of two correlated features. Such a decomposition makes the model end-to-end trainable given various feature interaction operations. By adopting feature-level search space, we set a learnable gate to determine whether each feature should be within the feature set. Because of the large-scale search space, we develop a learning-by-continuation training scheme to learn such gates. Hence, OptFS generates the feature set containing features that improve the final prediction results. Experimentally, we evaluate OptFS on three public datasets, demonstrating OptFS can optimize feature sets which enhance the model performance and further reduce both the storage and computational cost.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1704274486",
                    "name": "Fuyuan Lyu"
                },
                {
                    "authorId": "2109888596",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": null,
                    "name": "Liang Chen"
                },
                {
                    "authorId": "1996703",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "2188246843",
                    "name": "Xue Liu"
                }
            ]
        },
        {
            "paperId": "9a38c738a9bca9144dd8aaf34cd0a154d1a63abc",
            "title": "Feature Representation Learning for Click-through Rate Prediction: A Review and New Perspectives",
            "abstract": "Representation learning has been a critical topic in machine learning. In Click-through Rate Prediction, most features are represented as embedding vectors and learned simultaneously with other parameters in the model. With the development of CTR models, feature representation learning has become a trending topic and has been extensively studied by both industrial and academic researchers in recent years. This survey aims at summarizing the feature representation learning in a broader picture and pave the way for future research. To achieve such a goal, we first present a taxonomy of current research methods on feature representation learning following two main issues: (i) which feature to represent and (ii) how to represent these features. Then we give a detailed description of each method regarding these two issues. Finally, the review concludes with a discussion on the future directions of this field.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1704274486",
                    "name": "Fuyuan Lyu"
                },
                {
                    "authorId": "2109888596",
                    "name": "Xing Tang"
                },
                {
                    "authorId": "66953961",
                    "name": "Dugang Liu"
                },
                {
                    "authorId": "107747459",
                    "name": "Haolun Wu"
                },
                {
                    "authorId": "74142381",
                    "name": "Chen Ma"
                },
                {
                    "authorId": "1996703",
                    "name": "Xiuqiang He"
                },
                {
                    "authorId": "2188246843",
                    "name": "Xue Liu"
                }
            ]
        }
    ]
}