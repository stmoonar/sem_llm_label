{
    "authorId": "69414245",
    "papers": [
        {
            "paperId": "64bb97277140067aa4cedc996d0d5c2e34e4319b",
            "title": "AI Safety Subproblems for Software Engineering Researchers",
            "abstract": "In this 4-page manuscript we discuss the problem of long-term AI Safety from a Software Engineering (SE) research viewpoint. We briefly summarize long-term AI Safety, and the challenge of avoiding harms from AI as systems meet or exceed human capabilities, including software engineering capabilities (and approach AGI /\"HLMI\"). We perform a quantified literature review suggesting that AI Safety discussions are not common at SE venues. We make conjectures about how software might change with rising capabilities, and categorize\"subproblems\"which fit into traditional SE areas, proposing how work on similar problems might improve the future of AI and SE.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1986353424",
                    "name": "David Gros"
                },
                {
                    "authorId": "69414245",
                    "name": "P. Devanbu"
                },
                {
                    "authorId": "144007938",
                    "name": "Zhou Yu"
                }
            ]
        },
        {
            "paperId": "e9487f7bbedd3f45e8063eee8fbe9407860d0454",
            "title": "Deep Learning & Software Engineering: State of Research and Future Directions",
            "abstract": "Given the current transformative potential of research that sits at the intersection of Deep Learning (DL) and Software Engineering (SE), an NSF-sponsored community workshop was conducted in co-location with the 34th IEEE/ACM International Conference on Automated Software Engineering (ASE'19) in San Diego, California. The goal of this workshop was to outline high priority areas for cross-cutting research. While a multitude of exciting directions for future work were identified, this report provides a general summary of the research areas representing the areas of highest priority which were discussed at the workshop. The intent of this report is to serve as a potential roadmap to guide future work that sits at the intersection of SE & DL.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "69414245",
                    "name": "P. Devanbu"
                },
                {
                    "authorId": "145738070",
                    "name": "Matthew B. Dwyer"
                },
                {
                    "authorId": "143754832",
                    "name": "Sebastian G. Elbaum"
                },
                {
                    "authorId": "147522460",
                    "name": "M. Lowry"
                },
                {
                    "authorId": "1381376597",
                    "name": "Kevin Moran"
                },
                {
                    "authorId": "1697757",
                    "name": "D. Poshyvanyk"
                },
                {
                    "authorId": "31631000",
                    "name": "Baishakhi Ray"
                },
                {
                    "authorId": "50631599",
                    "name": "Rishabh Singh"
                },
                {
                    "authorId": "2190290954",
                    "name": "Xiangyu Zhang"
                }
            ]
        },
        {
            "paperId": "0524bbe9f4f96f7b7772f8fad8f9b339bdb1a928",
            "title": "Software information systems",
            "abstract": "A key obstacle to higher productivity in large software systems is invisibility: the difficulty of locating needed information about the system under development. In this thesis, we introduce software information systems that use a knowledge base represented in description logic to help programmers find useful information. We describe how the representational and inferential services provided by description logics help address different aspects of software invisibility, and illustrate this with examples from an SIS for a specific telephonics system, Definity$\\sp{TM}.$ We present enhancements to the description logic substrate needed in order to represent plan information, which is essential in describing our kinds of software. We also describe a variety of tools that aid in acquiring knowledge for a software information system from external sources. These include query generators and a portable system for querying abstract syntax trees of programs, which has found practical applications in a variety of other environments.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "69414245",
                    "name": "P. Devanbu"
                }
            ]
        }
    ]
}