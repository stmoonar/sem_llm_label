{
    "authorId": "2183481826",
    "papers": [
        {
            "paperId": "3896e96bc1fc20b0094f7fb9955164d9fa2fb63d",
            "title": "Early prediction of onset of sepsis in Clinical Setting",
            "abstract": "This study proposes the use of Machine Learning models to predict the early onset of sepsis using deidentified clinical data from Montefiore Medical Center in Bronx, NY, USA. A supervised learning approach was adopted, wherein an XGBoost model was trained utilizing 80\\% of the train dataset, encompassing 107 features (including the original and derived features). Subsequently, the model was evaluated on the remaining 20\\% of the test data. The model was validated on prospective data that was entirely unseen during the training phase. To assess the model's performance at the individual patient level and timeliness of the prediction, a normalized utility score was employed, a widely recognized scoring methodology for sepsis detection, as outlined in the PhysioNet Sepsis Challenge paper. Metrics such as F1 Score, Sensitivity, Specificity, and Flag Rate were also devised. The model achieved a normalized utility score of 0.494 on test data and 0.378 on prospective data at threshold 0.3. The F1 scores were 80.8\\% and 67.1\\% respectively for the test data and the prospective data for the same threshold, highlighting its potential to be integrated into clinical decision-making processes effectively. These results bear testament to the model's robust predictive capabilities and its potential to substantially impact clinical decision-making processes.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2257041690",
                    "name": "Fahim Mohammad"
                },
                {
                    "authorId": "2257039894",
                    "name": "Lakshmi Arunachalam"
                },
                {
                    "authorId": "2183481826",
                    "name": "Samanway Sadhu"
                },
                {
                    "authorId": "103137956",
                    "name": "B. Aasman"
                },
                {
                    "authorId": "50064464",
                    "name": "Shweta Garg"
                },
                {
                    "authorId": "2283106087",
                    "name": "Adil Ahmed"
                },
                {
                    "authorId": "2282963356",
                    "name": "Silvie Colman"
                },
                {
                    "authorId": "2282957096",
                    "name": "Meena Arunachalam"
                },
                {
                    "authorId": "2282975826",
                    "name": "Sudhir Kulkarni"
                },
                {
                    "authorId": "1711658",
                    "name": "P. Mirhaji"
                }
            ]
        },
        {
            "paperId": "fcc661a7c69b063cea3a0e13fef6ef79470ee821",
            "title": "MC2: Rigorous and Efficient Directed Greybox Fuzzing",
            "abstract": "Directed greybox fuzzing is a popular technique for targeted software testing that seeks to find inputs that reach a set of target sites in a program. Most existing directed greybox fuzzers do not provide any theoretical analysis of their performance or optimality. In this paper, we introduce a complexity-theoretic framework to pose directed greybox fuzzing as an oracle-guided search problem where some feedback about the input space (e.g., how close an input is to the target sites) is received by querying an oracle. Our framework assumes that each oracle query can return arbitrary content with a large but constant amount of information. Therefore, we use the number of oracle queries required by a fuzzing algorithm to find a target-reaching input as the performance metric. Using our framework, we design a randomized directed greybox fuzzing algorithm that makes a logarithmic (wrt. the number of all possible inputs) number of queries in expectation to find a target-reaching input. We further prove that the number of oracle queries required by our algorithm is optimal, i.e., no fuzzing algorithm can improve (i.e., minimize) the query count by more than a constant factor. We implement our approach in MC^2 and outperform state-of-the-art directed greybox fuzzers on challenging benchmarks (Magma and Fuzzer Test Suite) by up to two orders of magnitude (i.e., 134\\times) on average. MC^2 also found 15 previously undiscovered bugs that other state-of-the-art directed greybox fuzzers failed to find.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "145102480",
                    "name": "Abhishek Shah"
                },
                {
                    "authorId": "38468935",
                    "name": "Dongdong She"
                },
                {
                    "authorId": "2183481826",
                    "name": "Samanway Sadhu"
                },
                {
                    "authorId": "144409632",
                    "name": "Krishma Singal"
                },
                {
                    "authorId": "118830461",
                    "name": "Peter Coffman"
                },
                {
                    "authorId": "39400201",
                    "name": "S. Jana"
                }
            ]
        }
    ]
}