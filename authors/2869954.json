{
    "authorId": "2869954",
    "papers": [
        {
            "paperId": "1b2a538bf269ab40b54e89b07de0eafea97ab467",
            "title": "PyDex: Repairing Bugs in Introductory Python Assignments using LLMs",
            "abstract": "Students often make mistakes in their introductory programming assignments as part of their learning process. Unfortunately, providing custom repairs for these mistakes can require a substantial amount of time and effort from class instructors. Automated program repair (APR) techniques can be used to synthesize such fixes. Prior work has explored the use of symbolic and neural techniques for APR in the education domain. Both types of approaches require either substantial engineering efforts or large amounts of data and training. We propose to use a large language model trained on code, such as Codex (a version of GPT), to build an APR system -- PyDex -- for introductory Python programming assignments. Our system can fix both syntactic and semantic mistakes by combining multi-modal prompts, iterative querying, test-case-based selection of few-shots, and program chunking. We evaluate PyDex on 286 real student programs and compare to three baselines, including one that combines a state-of-the-art Python syntax repair engine, BIFI, and a state-of-the-art Python semantic repair engine for student assignments, Refactory. We find that PyDex can fix more programs and produce smaller patches on average.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2135763061",
                    "name": "Jialu Zhang"
                },
                {
                    "authorId": "150140211",
                    "name": "J. Cambronero"
                },
                {
                    "authorId": "2108314",
                    "name": "Sumit Gulwani"
                },
                {
                    "authorId": "2258716656",
                    "name": "Vu Le"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2256995505",
                    "name": "Gustavo Soares"
                },
                {
                    "authorId": "152668913",
                    "name": "Gust Verbruggen"
                }
            ]
        },
        {
            "paperId": "76bd04d1434656ef7210149406b742f2eb960297",
            "title": "Quantum Circuit Reconstruction from Power Side-Channel Attacks on Quantum Computer Controllers",
            "abstract": "The interest in quantum computing has grown rapidly in recent years, and with it grows the importance of securing quantum circuits. A novel type of threat to quantum circuits that dedicated attackers could launch are power trace attacks. To address this threat, this paper presents first formalization and demonstration of using power traces to unlock and steal quantum circuit secrets. With access to power traces, attackers can recover information about the control pulses sent to quantum computers. From the control pulses, the gate level description of the circuits, and eventually the secret algorithms can be reverse engineered. This work demonstrates how and what information could be recovered. This work uses algebraic reconstruction from power traces to realize two new types of single trace attacks: per-channel and total power attacks. The former attack relies on per-channel measurements to perform a brute-force attack to reconstruct the quantum circuits. The latter attack performs a single-trace attack using Mixed-Integer Linear Programming optimization. Through the use of algebraic reconstruction, this work demonstrates that quantum circuit secrets can be stolen with high accuracy. Evaluation on 32 real benchmark quantum circuits shows that our technique is highly effective at reconstructing quantum circuits. The findings not only show the veracity of the potential attacks, but also the need to develop new means to protect quantum circuits from power trace attacks. Throughout this work real control pulse information from real quantum computers is used to demonstrate potential attacks based on simulation of collection of power traces.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2202037",
                    "name": "Ferhat Erata"
                },
                {
                    "authorId": "2115784335",
                    "name": "Chuan Xu"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2239104177",
                    "name": "Jakub Szefer"
                }
            ]
        },
        {
            "paperId": "89a073d4606c3d308c208c1113d8e0b333d1e2c4",
            "title": "Systematic Use of Random Self-Reducibility against Physical Attacks",
            "abstract": "This work presents a novel, black-box software-based countermeasure against physical attacks including power side-channel and fault-injection attacks. The approach uses the concept of random self-reducibility and self-correctness to add randomness and redundancy in the execution for protection. Our approach is at the operation level, is not algorithm-specific, and thus, can be applied for protecting a wide range of algorithms. The countermeasure is empirically evaluated against attacks over operations like modular exponentiation, modular multiplication, polynomial multiplication, and number theoretic transforms. An end-to-end implementation of this countermeasure is demonstrated for RSA-CRT signature algorithm and Kyber Key Generation public key cryptosystems. The countermeasure reduced the power side-channel leakage by two orders of magnitude, to an acceptably secure level in TVLA analysis. For fault injection, the countermeasure reduces the number of faults to 95.4% in average.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2202037",
                    "name": "Ferhat Erata"
                },
                {
                    "authorId": "2261938852",
                    "name": "Tinghung Chiu"
                },
                {
                    "authorId": "2078617138",
                    "name": "Anthony Etim"
                },
                {
                    "authorId": "2300285200",
                    "name": "Srilalith Nampally"
                },
                {
                    "authorId": "2300285226",
                    "name": "Tejas Raju"
                },
                {
                    "authorId": "2300285482",
                    "name": "Rajashree Ramu"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "143757557",
                    "name": "Wenjie Xiong"
                },
                {
                    "authorId": "2239104177",
                    "name": "Jakub Szefer"
                }
            ]
        },
        {
            "paperId": "a3eacbe7f70240a5c8830ec729ad786d018b922e",
            "title": "Scheherazade: Evaluating Chain-of-Thought Math Reasoning in LLMs with Chain-of-Problems",
            "abstract": "Benchmarks are critical for measuring progress of math reasoning abilities of Large Language Models (LLMs). However, existing widely-used benchmarks such as GSM8K have been rendered less useful as multiple cutting-edge LLMs achieve over 94% accuracy. While harder benchmarks have been proposed, their creation is often manual and expensive. We present Scheherazade, an automated approach for producing challenging mathematical reasoning benchmarks by logically chaining mathematical reasoning problems. We propose two different chaining methods, forward chaining and backward chaining, which require reasoning forward and backward through the chain respectively. We apply Scheherazade on GSM8K to create GSM8K-Scheherazade and evaluate 3 frontier LLMs and OpenAI's o1-preview on it. We show that while frontier models' performance declines precipitously at only a few questions chained, a preliminary evaluation suggests o1-preview performance persists up to 5 questions chained backwards. In addition, while all other models perform worse when problems are chained backwards, o1-preview performs better on backward-chained benchmarks. We will release the dataset and code publicly.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2323744364",
                    "name": "Stephen Miner"
                },
                {
                    "authorId": "2323754343",
                    "name": "Yoshiki Takashima"
                },
                {
                    "authorId": "2323760832",
                    "name": "Simeng Han"
                },
                {
                    "authorId": "2202037",
                    "name": "Ferhat Erata"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2288001761",
                    "name": "Scott J. Shapiro"
                }
            ]
        },
        {
            "paperId": "019e9e2a92d516590ca396a11dd92d0d297d4732",
            "title": "Analyzing Intentional Behavior in Autonomous Agents under Uncertainty",
            "abstract": "Principled accountability for autonomous decision-making in uncertain environments requires distinguishing intentional outcomes from negligent designs from actual accidents. We propose analyzing the behavior of autonomous agents through a quantitative measure of the evidence of intentional behavior. We model an uncertain environment as a Markov Decision Process (MDP). For a given scenario, we rely on probabilistic model checking to compute the ability of the agent to influence reaching a certain event. We call this the scope of agency. We say that there is evidence of intentional behavior if the scope of agency is high and the decisions of the agent are close to being optimal for reaching the event. Our method applies counterfactual reasoning to automatically generate relevant scenarios that can be analyzed to increase the confidence of our assessment. In a case study, we show how our method can distinguish between 'intentional' and 'accidental' traffic collisions.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2221140085",
                    "name": "Filip Cano C'ordoba"
                },
                {
                    "authorId": "2007693530",
                    "name": "Samuel Judson"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "2219943761",
                    "name": "Katrine Bj\u00f8rner"
                },
                {
                    "authorId": "2073173217",
                    "name": "Nicholas Shoemaker"
                },
                {
                    "authorId": "39095165",
                    "name": "Scott J. Shapiro"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2278439482",
                    "name": "Bettina K\u00f6nighofer"
                }
            ]
        },
        {
            "paperId": "0e2d94dc044191825c0137817a928cae7ea95a7f",
            "title": "Ou: Automating the Parallelization of Zero-Knowledge Protocols",
            "abstract": "A zero-knowledge proof (ZKP) is a powerful cryptographic primitive used in many decentralized or privacy-focused applications. However, the high overhead of ZKPs can restrict their practical applicability. We design a programming language, Ou, aimed at easing the programmer's burden when writing efficient ZKPs, and a compiler framework, Lian, that automates the analysis and distribution of statements to a computing cluster. Ou uses programming language semantics, formal methods, and combinatorial optimization to automatically partition an Ou program into efficiently sized chunks for parallel ZK-proving and/or verification. We contribute: (1) A front-end language where users can write proof statements as imperative programs in a familiar syntax; (2) A compiler architecture and implementation that automatically analyzes the program and compiles it into an optimized IR that can be lifted to a variety of ZKP constructions; and (3) A cutting algorithm, based on Pseudo-Boolean optimization and Integer Linear Programming, that reorders instructions and then partitions the program into efficiently sized chunks for parallel evaluation and efficient state reconciliation.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1380151268",
                    "name": "Yuyang Sang"
                },
                {
                    "authorId": "2065660489",
                    "name": "Ning Luo"
                },
                {
                    "authorId": "2007693530",
                    "name": "Samuel Judson"
                },
                {
                    "authorId": "2219634695",
                    "name": "Ben Chaimberg"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "144129720",
                    "name": "Xiao Wang"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "144656147",
                    "name": "Zhong Shao"
                }
            ]
        },
        {
            "paperId": "3a60f65ce078fae43519855458e2a0d319ef1d74",
            "title": "ZKSMT: A VM for Proving SMT Theorems in Zero Knowledge",
            "abstract": "Verification of program safety is often reducible to proving the unsatisfiability (i.e., validity) of a formula in Satisfiability Modulo Theories (SMT): Boolean logic combined with theories that formalize arbitrary first-order fragments. Zero-knowledge (ZK) proofs allow SMT formulas to be validated without revealing the underlying formulas or their proofs to other parties, which is a crucial building block for proving the safety of proprietary programs. Recently, Luo et al. (CCS 2022) studied the simpler problem of proving the unsatisfia-bility of pure Boolean formulas but does not support proofs generated by SMT solvers. This work presents ZKSMT , a novel framework for proving the validity of SMT formulas in ZK. We design a virtual machine (VM) tailored to efficiently represent the verification process of SMT validity proofs in ZK. Our VM can support the vast majority of popular theories when proving program safety while being complete and sound. To demonstrate this, we instantiate the commonly used theories of equality and linear integer arithmetic in our VM with theory-specific optimizations for proving them in ZK. ZKSMT achieves high practicality even when running on realistic SMT formulas generated by Boogie, a common tool for software verification. It achieves a three-order-of-magnitude improvement compared to",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2268079351",
                    "name": "Daniel Luick"
                },
                {
                    "authorId": "2168012965",
                    "name": "John C. Kolesar"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "2271486021",
                    "name": "William R. Harris"
                },
                {
                    "authorId": "2268083269",
                    "name": "James Parker"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2337345",
                    "name": "Eran Tromer"
                },
                {
                    "authorId": "2268173877",
                    "name": "Xiao Wang"
                },
                {
                    "authorId": "2065660489",
                    "name": "Ning Luo"
                }
            ]
        },
        {
            "paperId": "477133fdd561d9f08550b5ffb74a5e2c275d177e",
            "title": "Proving Query Equivalence Using Linear Integer Arithmetic",
            "abstract": "Proving the equivalence between SQL queries is a fundamental problem in database research. Existing solvers model queries using algebraic representations and convert such representations into first-order logic formulas so that query equivalence can be verified by solving a satisfiability problem. The main challenge lies in \"unbounded summations\", which appear commonly in a query's algebraic representation in order to model common SQL features, such as projection and aggregate functions. Unfortunately, existing solvers handle unbounded summations in an ad-hoc manner based on heuristics or syntax comparison, which severely limits the set of queries that can be supported. This paper develops a new SQL equivalence prover called SQLSolver, which can handle unbounded summations in a principled way. Our key insight is to use the theory of LIA^*, which extends linear integer arithmetic formulas with unbounded sums and provides algorithms to translate a LIA^* formula to a LIA formula that can be decided using existing SMT solvers. We augment the basic LIA^* theory to handle several complex scenarios (such as nested unbounded summations) that arise from modeling real-world queries. We evaluate SQLSolver with 359 equivalent query pairs derived from the SQL rewrite rules in Calcite and Spark SQL. SQLSolver successfully proves 346 pairs of them, which significantly outperforms existing provers.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2113454063",
                    "name": "Haoran Ding"
                },
                {
                    "authorId": "8491577",
                    "name": "Zhaoguo Wang"
                },
                {
                    "authorId": "2169801604",
                    "name": "Yicun Yang"
                },
                {
                    "authorId": "2274064062",
                    "name": "Dexin Zhang"
                },
                {
                    "authorId": "2274170068",
                    "name": "Zhenglin Xu"
                },
                {
                    "authorId": "2240209894",
                    "name": "Haibo Chen"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2274077111",
                    "name": "Jinyang Li"
                }
            ]
        },
        {
            "paperId": "784ae05d89c8a350976d77de222ef72366e4f7f2",
            "title": "'Put the Car on the Stand': SMT-based Oracles for Investigating Decisions",
            "abstract": "Principled accountability in the aftermath of harms is essential to the trustworthy design and governance of algorithmic decision making. Legal theory offers a paramount method for assessing culpability: putting the agent 'on the stand' to subject their actions and intentions to cross-examination. We show that under minimal assumptions automated reasoning can rigorously interrogate algorithmic behaviors as in the adversarial process of legal fact finding. We use the formal methods of symbolic execution and satisfiability modulo theories (SMT) solving to discharge queries about agent behavior in factual and counterfactual scenarios, as adaptively formulated by a human investigator. We implement our framework and demonstrate its utility on an illustrative car crash scenario.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2007693530",
                    "name": "Samuel Judson"
                },
                {
                    "authorId": "2216720098",
                    "name": "Matthew Elacqua"
                },
                {
                    "authorId": "2288007300",
                    "name": "Filip Cano"
                },
                {
                    "authorId": "1682679",
                    "name": "Timos Antonopoulos"
                },
                {
                    "authorId": "2278439482",
                    "name": "Bettina K\u00f6nighofer"
                },
                {
                    "authorId": "39095165",
                    "name": "Scott J. Shapiro"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                }
            ]
        },
        {
            "paperId": "ac3b792b04c2be35965b09d43d6ac94ae3ea1c99",
            "title": "Testing learning-enabled cyber-physical systems with Large-Language Models: A Formal Approach",
            "abstract": "The integration of machine learning (ML) into cyber-physical systems (CPS) offers significant benefits, including enhanced efficiency, predictive capabilities, real-time responsiveness, and the enabling of autonomous operations. This convergence has accelerated the development and deployment of a range of real-world applications, such as autonomous vehicles, delivery drones, service robots, and telemedicine procedures. However, the software development life cycle (SDLC) for AI-infused CPS diverges significantly from traditional approaches, featuring data and learning as two critical components. Existing verification and validation techniques are often inadequate for these new paradigms. In this study, we pinpoint the main challenges in ensuring formal safety for learningenabled CPS.We begin by examining testing as the most pragmatic method for verification and validation, summarizing the current state-of-the-art methodologies. Recognizing the limitations in current testing approaches to provide formal safety guarantees, we propose a roadmap to transition from foundational probabilistic testing to a more rigorous approach capable of delivering formal assurance.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2266423094",
                    "name": "Xi Zheng"
                },
                {
                    "authorId": "2262703517",
                    "name": "Al Mok"
                },
                {
                    "authorId": "2869954",
                    "name": "R. Piskac"
                },
                {
                    "authorId": "2266420781",
                    "name": "Yong Jae Lee"
                },
                {
                    "authorId": "2240404266",
                    "name": "Bhaskar Krishnamachari"
                },
                {
                    "authorId": "2266388756",
                    "name": "Dakai Zhu"
                },
                {
                    "authorId": "1681081",
                    "name": "O. Sokolsky"
                },
                {
                    "authorId": "2254049033",
                    "name": "Insup Lee"
                }
            ]
        }
    ]
}