{
    "authorId": "2145775206",
    "papers": [
        {
            "paperId": "1163c29ae6a26b1cd8d85280740410e99001a959",
            "title": "Self-Supervised Graph Neural Networks via Diverse and Interactive Message Passing",
            "abstract": "By interpreting Graph Neural Networks (GNNs) as the message passing from the spatial perspective, their success is attributed to Laplacian smoothing. However, it also leads to serious over-smoothing issue by stacking many layers. Recently, many efforts have been paid to overcome this issue in semi-supervised learning. Unfortunately, it is more serious in unsupervised node representation learning task due to the lack of supervision information. Thus, most of the unsupervised or self-supervised GNNs often employ \\textit{one-layer GCN} as the encoder. Essentially, the over-smoothing issue is caused by the over-simplification of the existing message passing, which possesses two intrinsic limits: blind message and uniform passing. In this paper, a novel Diverse and Interactive Message Passing (DIMP) is proposed for self-supervised learning by overcoming these limits. Firstly, to prevent the message from blindness and make it interactive between two connected nodes, the message is determined by both the two connected nodes instead of the attributes of one node. Secondly, to prevent the passing from uniformness and make it diverse over different attribute channels, different propagation weights are assigned to different elements in the message. To this end, a natural implementation of the message in DIMP is the element-wise product of the representations of two connected nodes. From the perspective of numerical optimization, the proposed DIMP is equivalent to performing an overlapping community detection via expectation-maximization (EM). Both the objective function of the community detection and the convergence of EM algorithm guarantee that DMIP can prevent from over-smoothing issue. Extensive evaluations on node-level and graph-level tasks demonstrate the superiority of DIMP on improving performance and overcoming over-smoothing issue.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2143921529",
                    "name": "Liang Yang"
                },
                {
                    "authorId": "2145775206",
                    "name": "Cheng Chen"
                },
                {
                    "authorId": "1409858224",
                    "name": "Weixun Li"
                },
                {
                    "authorId": "2661834",
                    "name": "Bingxin Niu"
                },
                {
                    "authorId": "6413344",
                    "name": "Junhua Gu"
                },
                {
                    "authorId": "2109150586",
                    "name": "Chuan Wang"
                },
                {
                    "authorId": "40137924",
                    "name": "Dongxiao He"
                },
                {
                    "authorId": "2613860",
                    "name": "Yuanfang Guo"
                },
                {
                    "authorId": "1719250",
                    "name": "Xiaochun Cao"
                }
            ]
        },
        {
            "paperId": "0db7ad4825f4808df0480f55154245efebe14045",
            "title": "Efficient hypothesis testing for community detection in heterogeneous networks by graph dissimilarity",
            "abstract": "Identifying communities in networks is a fundamental and challenging problem of practical importance in many fields of science. Current methods either ignore the heterogeneous distribution of nodal degrees or assume prior knowledge of the number of communities. Here we propose an efficient hypothesis test for community detection based on quantifying dissimilarities between graphs. Given a random graph, the null hypothesis is that it is of degree-corrected Erd\u00f6s-R\u00e9nyi type. We compare the dissimilarity between them by a measure incorporating the vertex distance distribution, the clustering coefficient distribution, and the alpha-centrality distribution, which is used for our hypothesis test. We design a two-stage bipartitioning algorithm to uncover the number of communities and the corresponding structure simultaneously. Experiments on synthetic and real networks show that our method outperforms state-of-the-art ones.",
            "fieldsOfStudy": [
                "Computer Science",
                "Physics"
            ],
            "authors": [
                {
                    "authorId": "3175758",
                    "name": "Xin-Jian Xu"
                },
                {
                    "authorId": "2145775206",
                    "name": "Cheng Chen"
                },
                {
                    "authorId": "145823055",
                    "name": "J. Mendes"
                }
            ]
        },
        {
            "paperId": "572951125870e46f5d821674f8f58b43058ef20b",
            "title": "Community Preserving Network Embedding Based on Memetic Algorithm",
            "abstract": "Network embedding aims to embed network nodes into a low-dimensional and continuous vector space, which can benefit various downstream network analysis tasks. As it is an emerging topic in recent years, a variety of methods have been proposed to learn representations by preserving a network topology structure. However, it still remains challenging to incorporate a community structure into network embedding, which is ignored by most of the methods. In this paper, we present a novel memetic algorithm for network embedding, which is termed as MemeRep. As a matter of fact, the community structure is preserved by optimizing the modularity density. In our methods, genetic algorithm is adopted to optimize a population of solutions, and a problem-specific local search procedure with the two-level learning strategies is designed to accelerate the optimization process. The first-level learning strategy enables each node to learn from its neighbors, while the second-level learning strategy expands the learning area, which enables each node to learn from communities. Experiments on real-world and computer-generated networks show that the proposed algorithm outperforms several state-of-the-art methods in visualization, node classification, and community detection.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "144605807",
                    "name": "Maoguo Gong"
                },
                {
                    "authorId": "2145775206",
                    "name": "Cheng Chen"
                },
                {
                    "authorId": "94510122",
                    "name": "Yu Xie"
                },
                {
                    "authorId": "50695750",
                    "name": "Shanfeng Wang"
                }
            ]
        },
        {
            "paperId": "03ac93a2219b496d3f6e515042b3cff5bd7432a3",
            "title": "Co-Evolution of Multi-Typed Objects in Dynamic Star Networks",
            "abstract": "Mining network evolution has emerged as an intriguing research topic in many domains such as data mining, social networks, and machine learning. While a bulk of research has focused on mining evolutionary patterns of homogeneous networks (e.g., networks of friends), however, most real-world networks are heterogeneous, containing objects of different types, such as authors, papers, venues, and terms in a bibliographic network. Modeling co-evolution of multityped objects can capture richer information than that on single-typed objects alone. For example, studying co-evolution of authors, venues, and terms in a bibliographic network can tell better the evolution of research areas than just examining co-author network or term network alone. In this paper, we study mining co-evolution of multityped objects in a special type of heterogeneous networks, called star networks, and examine how the multityped objects influence each other in the network evolution. A hierarchical Dirichlet process mixture model-based evolution model is proposed, which detects the co-evolution of multityped objects in the form of multityped cluster evolution in dynamic star networks. An efficient inference algorithm is provided to learn the proposed model. Experiments on several real networks (DBLP, Twitter, and Delicious) validate the effectiveness of the model and the scalability of the algorithm.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2109461904",
                    "name": "Yizhou Sun"
                },
                {
                    "authorId": "46199760",
                    "name": "Jie Tang"
                },
                {
                    "authorId": "145325584",
                    "name": "Jiawei Han"
                },
                {
                    "authorId": "2145775206",
                    "name": "Cheng Chen"
                },
                {
                    "authorId": "2109834659",
                    "name": "Manish Gupta"
                }
            ]
        }
    ]
}