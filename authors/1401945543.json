{
    "authorId": "1401945543",
    "papers": [
        {
            "paperId": "ae29cd8368f9dff81a71a7e2efe86bfd17716680",
            "title": "Vertically Autoscaling Monolithic Applications with CaaSPER: Scalable Container-as-a-Service Performance Enhanced Resizing Algorithm for the Cloud",
            "abstract": "Kubernetes has emerged as a prominent open-source platform for managing cloud applications, including stateful databases. These monolithic applications rely on vertical scaling, adjusting CPU cores based on load fluctuations. However, our analysis of Kubernetes-based Database-as-a-Service (DBaaS) offerings at Microsoft revealed that many customers consistently over-provision resources for peak workloads, neglecting cost-saving opportunities through resource scale-down. We found that there is a gap in the ability of existing vertical autoscaling tools to minimize resource slack and respond promptly to throttling, leading to increased costs and impacting crucial metrics such as throughput and availability. To address this challenge, we propose CaaSPER, a vertical autoscaling algorithm that blends reactive and proactive strategies. By dynamically adjusting CPU resources, CaaSPER minimizes resource slack, maintains optimal CPU utilization, and reduces throttling. Importantly, customers have the flexibility to prioritize either cost savings or high performance based on their preferences. Extensive testing demonstrates that CaaSPER effectively reduces throttling and keeps CPU utilization within target levels. CaaSPER is designed to be application-agnostic and platform-agnostic, with potential for extension to other applications requiring vertical autoscaling.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2293284852",
                    "name": "Anna Pavlenko"
                },
                {
                    "authorId": "2293284093",
                    "name": "Joyce Cahoon"
                },
                {
                    "authorId": "2293353592",
                    "name": "Yiwen Zhu"
                },
                {
                    "authorId": "1388059340",
                    "name": "Brian Kroth"
                },
                {
                    "authorId": "2302859845",
                    "name": "Michael Nelson"
                },
                {
                    "authorId": "2302858902",
                    "name": "Andrew Carter"
                },
                {
                    "authorId": "2302858348",
                    "name": "David Liao"
                },
                {
                    "authorId": "2058172179",
                    "name": "Travis Wright"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "2293284912",
                    "name": "Karla Saur"
                }
            ]
        },
        {
            "paperId": "cfd55aeec363d9e0c29b127aa8c0fc8bfbb24085",
            "title": "Sibyl: Forecasting Time-Evolving Query Workloads",
            "abstract": "Database systems often rely on historical query traces to perform workload-based performance tuning. However, real production workloads are time-evolving, making historical queries ineffective for optimizing future workloads. To address this challenge, we propose SIBYL, an end-to-end machine learning-based framework that accurately forecasts a sequence of future queries, with the entire query statements, in various prediction windows. Drawing insights from real-workloads, we propose template-based featurization techniques and develop a stacked-LSTM with an encoder-decoder architecture for accurate forecasting of query workloads. We also develop techniques to improve forecasting accuracy over large prediction windows and achieve high scalability over large workloads with high variability in arrival rates of queries. Finally, we propose techniques to handle workload drifts. Our evaluation on four real workloads demonstrates that SIBYL can forecast workloads with an 87.3% median F1 score, and can result in 1.7\u00d7 and 1.3\u00d7 performance improvement when applied to materialized view selection and index selection applications, respectively.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "51293533",
                    "name": "Hanxian Huang"
                },
                {
                    "authorId": "5295950",
                    "name": "Tarique Siddiqui"
                },
                {
                    "authorId": "2273940323",
                    "name": "Rana Alotaibi"
                },
                {
                    "authorId": "2278429940",
                    "name": "Carlo Curino"
                },
                {
                    "authorId": "50334798",
                    "name": "Jyoti Leeka"
                },
                {
                    "authorId": "2153832",
                    "name": "Alekh Jindal"
                },
                {
                    "authorId": "2278568030",
                    "name": "Jishen Zhao"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "2274824557",
                    "name": "Yuanyuan Tian"
                }
            ]
        },
        {
            "paperId": "5215a52205943e08c886948dc7881938ec5ee230",
            "title": "Diversity, Equity and Inclusion Activities in Database Conferences: A 2022 Report",
            "abstract": "The Diversity, Equity and Inclusion (DEI) initiative started as the Diversity/Inclusion initiative in 2020 [4]. The current report summarizes our activities in 2022. Our responsibility as a community is to ensure that attendees of DB conferences feel included, irrespective of their scientific perspective and personal background. One of the first steps was to establish the role of the DEI chairs at DB Conferences, with the DEI team dedicated to providing leadership to help our community achieve this goal. In this leadership role, the DEI team is advising DEI chairs at DB conferences, serving as a memory of DEI events at conferences, building an agreed-upon vision, and committing to working together to devise a set of measures for achieving DEI. That is pursued via actions led by our core members (Figure 1) and liaisons of individual executive bodies (Figure 2): REACH OUT collects data and experiences from our community. INCLUDE monitors and recommends inclusion efforts. ORGANIZE focuses on in-conference organization efforts, such as adopting a code of conduct. INFORM communicates through various channels. SUPPORT coordinates DEI support from executive bodies and sponsors. SCOUT collates DEI efforts from other communities. COORDINATE manages all actions. Two new actions: MEDIA preserves and disseminates the digital media produced by DEI@DB events. ETHICS establishes and promotes ethics guidelines for publications in our community.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1403657578",
                    "name": "S. Amer-Yahia"
                },
                {
                    "authorId": "143970078",
                    "name": "D. Agrawal"
                },
                {
                    "authorId": "1710637",
                    "name": "Yael Amsterdamer"
                },
                {
                    "authorId": "1730344",
                    "name": "S. Bhowmick"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "1726425",
                    "name": "B. Catania"
                },
                {
                    "authorId": "2091879100",
                    "name": "K. Panos"
                },
                {
                    "authorId": "2081044488",
                    "name": "Chrysanthis"
                },
                {
                    "authorId": "1692732",
                    "name": "C. Curino"
                },
                {
                    "authorId": "145025853",
                    "name": "J. Darmont"
                },
                {
                    "authorId": "152945656",
                    "name": "G. Dobbie"
                },
                {
                    "authorId": "1709353",
                    "name": "A. El Abbadi"
                },
                {
                    "authorId": "2223141115",
                    "name": "Avrilia"
                },
                {
                    "authorId": "2223141462",
                    "name": "Floratou"
                },
                {
                    "authorId": "2178387374",
                    "name": "Juliana Freire"
                },
                {
                    "authorId": "2153832",
                    "name": "Alekh Jindal"
                },
                {
                    "authorId": "1685532",
                    "name": "V. Kalogeraki"
                },
                {
                    "authorId": "51205357",
                    "name": "Sujaya Maiyya"
                },
                {
                    "authorId": "2079019460",
                    "name": "Alexandra"
                },
                {
                    "authorId": "2223137576",
                    "name": "Meliou"
                },
                {
                    "authorId": "37168010",
                    "name": "Madhulika Mohanty"
                },
                {
                    "authorId": "1403851743",
                    "name": "Behrooz Omidvar-Tehrani"
                },
                {
                    "authorId": "2149251297",
                    "name": "Fatma \u00d6zcan"
                },
                {
                    "authorId": "3139922",
                    "name": "L. Peterfreund"
                },
                {
                    "authorId": "145492471",
                    "name": "Wenny Rahayu"
                },
                {
                    "authorId": "2092368",
                    "name": "S. Sadiq"
                },
                {
                    "authorId": "2062657988",
                    "name": "Sana Sellami"
                },
                {
                    "authorId": "2388459",
                    "name": "Utku Sirin"
                },
                {
                    "authorId": "2131764025",
                    "name": "Wang-Chiew Tan"
                },
                {
                    "authorId": "2080239484",
                    "name": "Bhavani"
                },
                {
                    "authorId": "101679060",
                    "name": "Thuraisingham"
                },
                {
                    "authorId": "1392679676",
                    "name": "Neeraja"
                },
                {
                    "authorId": "2223141037",
                    "name": "Yadwadkar"
                },
                {
                    "authorId": "3010003",
                    "name": "Victor Zakhary"
                },
                {
                    "authorId": "2117848168",
                    "name": "Meihui Zhang"
                }
            ]
        },
        {
            "paperId": "7dc45f5891bccff14dadcdb3a2ec7f215dd713bd",
            "title": "Query Processing on Gaming Consoles",
            "abstract": "ACM Reference Format: Wei Cui, Qianxi Zhang, Spyros Blanas, Jesus Camacho-Rodriguez, Brandon Haynes,, Yinan Li, Ravi Ramamurthy, Peng Cheng, Rathijit Sen, Matteo Interlandi. 2023. Query Processing onGaming Consoles. In 19th International Workshop on Data Management on New Hardware (DaMoN \u201923), June 18\u201323, 2023, Seattle, WA, USA. ACM, New York, NY, USA, 3 pages. https://doi.org/ 10.1145/3592980.3595313",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2053108211",
                    "name": "Wei Cui"
                },
                {
                    "authorId": "2108076499",
                    "name": "Qianxi Zhang"
                },
                {
                    "authorId": "3264757",
                    "name": "Spyros Blanas"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "144843868",
                    "name": "Brandon Haynes"
                },
                {
                    "authorId": "2220131077",
                    "name": "Yinan Li"
                },
                {
                    "authorId": "1708341",
                    "name": "Ravishankar Ramamurthy"
                },
                {
                    "authorId": "2237779961",
                    "name": "Peng Cheng"
                },
                {
                    "authorId": "3133317",
                    "name": "Rathijit Sen"
                },
                {
                    "authorId": "2192580",
                    "name": "Matteo Interlandi"
                }
            ]
        },
        {
            "paperId": "ac08fa76038762f89a0f6c39ea38655422926408",
            "title": "Towards Building Autonomous Data Services on Azure",
            "abstract": "Modern cloud has turned data services into easily accessible commodities. With just a few clicks, users are now able to access a catalog of data processing systems for a wide range of tasks. How- ever, the cloud brings in both complexity and opportunity. While cloud users can quickly start an application by using various data services, it can be difficult to configure and optimize these services to gain the most value from them. For cloud providers, managing every aspect of an ever-increasing set of data services, while meeting customer SLAs and minimizing operational cost is becoming more challenging. Cloud technology enables the collection of significant amounts of workload traces and system telemetry. With the progress in data science (DS) and machine learning (ML), it is feasible and desirable to utilize a data-driven, ML-based approach to automate various aspects of data services, resulting in the creation of autonomous data services. This paper presents our perspectives and insights on creating autonomous data services on Azure. It also covers the future endeavors we plan to undertake and unresolved issues that still need attention.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2139103184",
                    "name": "Yiwen Zhu"
                },
                {
                    "authorId": "1968180",
                    "name": "Yuanyuan Tian"
                },
                {
                    "authorId": "150140157",
                    "name": "Joyce Cahoon"
                },
                {
                    "authorId": "2494730",
                    "name": "Subru Krishnan"
                },
                {
                    "authorId": "2078529694",
                    "name": "A. Agarwal"
                },
                {
                    "authorId": "147869186",
                    "name": "R. Alotaibi"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "31279592",
                    "name": "Bibin Chundatt"
                },
                {
                    "authorId": "144457950",
                    "name": "Andrew Chung"
                },
                {
                    "authorId": "2219536718",
                    "name": "Niharika Dutta"
                },
                {
                    "authorId": "2070590552",
                    "name": "Andrew Fogarty"
                },
                {
                    "authorId": "3202556",
                    "name": "Anja Gruenheid"
                },
                {
                    "authorId": "144843868",
                    "name": "Brandon Haynes"
                },
                {
                    "authorId": "2192580",
                    "name": "Matteo Interlandi"
                },
                {
                    "authorId": "2113625984",
                    "name": "Minu Iyer"
                },
                {
                    "authorId": "2113653327",
                    "name": "Nick Jurgens"
                },
                {
                    "authorId": "2219551648",
                    "name": "Sumeet Khushalani"
                },
                {
                    "authorId": "1388059340",
                    "name": "Brian Kroth"
                },
                {
                    "authorId": "1780130",
                    "name": "M. Kumar"
                },
                {
                    "authorId": "50334798",
                    "name": "Jyoti Leeka"
                },
                {
                    "authorId": "3035003",
                    "name": "Sergiy Matusevych"
                },
                {
                    "authorId": "103851731",
                    "name": "Minni Mittal"
                },
                {
                    "authorId": "2118628029",
                    "name": "A. Mueller"
                },
                {
                    "authorId": "2736124",
                    "name": "Kartheek Muthyala"
                },
                {
                    "authorId": "2219567198",
                    "name": "Harsha Nagulapalli"
                },
                {
                    "authorId": "2898580",
                    "name": "Yoonjae Park"
                },
                {
                    "authorId": "1471618633",
                    "name": "Hiren Patel"
                },
                {
                    "authorId": "118267534",
                    "name": "Anna Pavlenko"
                },
                {
                    "authorId": "3035292",
                    "name": "Olga Poppe"
                },
                {
                    "authorId": "119783776",
                    "name": "Santhosh Ravindran"
                },
                {
                    "authorId": "35064289",
                    "name": "Karla Saur"
                },
                {
                    "authorId": "3133317",
                    "name": "Rathijit Sen"
                },
                {
                    "authorId": "1943020154",
                    "name": "Steve Suh"
                },
                {
                    "authorId": "28077930",
                    "name": "Arijit Tarafdar"
                },
                {
                    "authorId": "1726059433",
                    "name": "Kunal Waghray"
                },
                {
                    "authorId": "2219026639",
                    "name": "Demin Wang"
                },
                {
                    "authorId": "1692732",
                    "name": "C. Curino"
                },
                {
                    "authorId": "2066044800",
                    "name": "R. Ramakrishnan"
                }
            ]
        },
        {
            "paperId": "d6214ed84f305d2c155366f76e1ad5a891554e62",
            "title": "Optimizing Data Pipelines for Machine Learning in Feature Stores",
            "abstract": "Data pipelines (i.e., converting raw data to features) are critical for machine learning (ML) models, yet their development and management is time-consuming. Feature stores have recently emerged as a new \"DBMS-for-ML\" with the premise of enabling data scientists and engineers to define and manage their data pipelines. While current feature stores fulfill their promise from a functionality perspective, they are resource-hungry---with ample opportunities for implementing database-style optimizations to enhance their performance. In this paper, we propose a novel set of optimizations specifically targeted for point-in-time join, which is a critical operation in data pipelines. We implement these optimizations on top of Feathr: a widely-used feature store, and evaluate them on use cases from both the TPCx-AI benchmark and real-world online retail scenarios. Our thorough experimental analysis shows that our optimizations can accelerate data pipelines by up to 3\u00d7 over state-of-the-art baselines.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2268475527",
                    "name": "Rui Liu"
                },
                {
                    "authorId": "2276974161",
                    "name": "Kwanghyun Park"
                },
                {
                    "authorId": "2493657",
                    "name": "Fotis Psallidas"
                },
                {
                    "authorId": "2268416653",
                    "name": "Xiaoyong Zhu"
                },
                {
                    "authorId": "2268396634",
                    "name": "Jinghui Mo"
                },
                {
                    "authorId": "3133317",
                    "name": "Rathijit Sen"
                },
                {
                    "authorId": "2268394815",
                    "name": "Matteo Interlandi"
                },
                {
                    "authorId": "2268367071",
                    "name": "Konstantinos Karanasos"
                },
                {
                    "authorId": "2268431436",
                    "name": "Yuanyuan Tian"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                }
            ]
        },
        {
            "paperId": "4e3257f85e20289c6653cf6410b0d6901103f695",
            "title": "OneProvenance: Efficient Extraction of Dynamic Coarse-Grained Provenance from Database Logs",
            "abstract": "Provenance encodes information that connects datasets, their generation workflows, and associated metadata (e.g., who or when executed a query). As such, it is instrumental for a wide range of critical applications, including governance, observability, and auditing. Unfortunately, in the context of database systems, extracting meaningful coarse-grained provenance is a long-standing problem due to the complexity and sheer volume of database workflows. Provenance extraction from query event logs has been recently proposed as favorable because, in principle, can result in meaningful provenance graphs for provenance applications. Current approaches, however, (a) add substantial overhead to the database and provenance extraction workflows and (b) extract provenance that is noisy, omits query execution dependencies, and is not rich enough to support upstream applications. To address these problems, we introduce O NE P ROVENANCE : an engine for efficient extraction of meaningful coarse-grained provenance from query event logs. O NE P ROVE - NANCE addresses the unique challenges of log-based extraction by (a) identifying query execution dependencies through efficient log analysis, (b) extracting provenance through novel event transformations that account for query dependencies, and (c) introducing effective filtering and compression optimizations. Our thorough experimental analysis shows that O NE P ROVENANCE can improve",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2493657",
                    "name": "Fotis Psallidas"
                },
                {
                    "authorId": "9490513",
                    "name": "Ashvin Agrawal"
                },
                {
                    "authorId": "2188780833",
                    "name": "Chandru Sugunan"
                },
                {
                    "authorId": "2188780274",
                    "name": "Khaled Ibrahim"
                },
                {
                    "authorId": "2687553",
                    "name": "Konstantinos Karanasos"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "2327080",
                    "name": "Avrilia Floratou"
                },
                {
                    "authorId": "1692732",
                    "name": "C. Curino"
                },
                {
                    "authorId": "2066044800",
                    "name": "R. Ramakrishnan"
                }
            ]
        },
        {
            "paperId": "6c8c4503e3f50848d35deaf080ae4086dd4f60c1",
            "title": "Containerized Execution of UDFs: An Experimental Evaluation",
            "abstract": "User-defined functions (UDFs) have long been used as the de facto way to extend the capabilities of data management systems. However, they are restricted to the specificities of each DBMS, and recent demands for advanced analytics have increased the need for complex UDFs that may require execution of arbitrary computation written in any programming language, management of library dependencies, portability across environments and engines, and resource isolation. These requirements go beyond what traditional UDFs were designed for, and have given rise to containerized UDFs that enable encapsulation and portability. However, this approach is nascent and can result in significant performance penalties and usability issues. In this paper, we present the first study that spans all stages of containerized UDFs' life cycle, performance bottlenecks in their execution, and extensibility to support different engines.\n Our experiments show that the performance of containerized UDF execution can be greatly affected by system design choices and that there are many trade-offs to consider. For example, regarding the method of communication with the containerized UDF, we show that binary-based implementations minimize overheads and are more than 2.4x faster than widely used text-based ones. Adopting a newer general-purpose communication method such as Arrow Flight can improve performance dramatically, causing a minimal ~10% slowdown compared to non-containerized UDFs. Additionally, containerized UDF start times vary wildly due to program size and complexity, from .07s to 7s in our experiments. Our insights can help DBMS developers make appropriate choices based on individual use cases when designing their systems.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "35064289",
                    "name": "Karla Saur"
                },
                {
                    "authorId": "2183983556",
                    "name": "Tara Mirmira"
                },
                {
                    "authorId": "2687553",
                    "name": "Konstantinos Karanasos"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                }
            ]
        },
        {
            "paperId": "5bff54f49eeba8d1b0961424bc619a694a02103b",
            "title": "Apache Hive: From MapReduce to Enterprise-grade Big Data Warehousing",
            "abstract": "Apache Hive is an open-source relational database system for analytic big-data workloads. In this paper we describe the key innovations on the journey from batch tool to fully fledged enterprise data warehousing system. We present a hybrid architecture that combines traditional MPP techniques with more recent big data and cloud concepts to achieve the scale and performance required by today's analytic applications. We explore the system by detailing enhancements along four main axis: Transactions, optimizer, runtime, and federation. We then provide experimental results to demonstrate the performance of the system for typical workloads and conclude with a look at the community roadmap.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "2056988400",
                    "name": "Ashutosh Chauhan"
                },
                {
                    "authorId": "35177717",
                    "name": "Alan Gates"
                },
                {
                    "authorId": "1411211651",
                    "name": "E. Koifman"
                },
                {
                    "authorId": "66363099",
                    "name": "Owen O'Malley"
                },
                {
                    "authorId": "2067125176",
                    "name": "Vineet Garg"
                },
                {
                    "authorId": "1415042719",
                    "name": "Zoltan Haindrich"
                },
                {
                    "authorId": "1411380228",
                    "name": "S. Shelukhin"
                },
                {
                    "authorId": "34961647",
                    "name": "Prasanth Jayachandran"
                },
                {
                    "authorId": "2056907529",
                    "name": "S. Seth"
                },
                {
                    "authorId": "2070046951",
                    "name": "Deepak Jaiswal"
                },
                {
                    "authorId": "1411346107",
                    "name": "Slim Bouguerra"
                },
                {
                    "authorId": "1411347617",
                    "name": "Nishant Bangarwa"
                },
                {
                    "authorId": "1411360785",
                    "name": "Sankar Hariappan"
                },
                {
                    "authorId": "2078529107",
                    "name": "Anishek Agarwal"
                },
                {
                    "authorId": "1411360660",
                    "name": "Jason Dere"
                },
                {
                    "authorId": "2052160228",
                    "name": "Daniel Dai"
                },
                {
                    "authorId": "153076765",
                    "name": "T. Nair"
                },
                {
                    "authorId": "1414911191",
                    "name": "Nita Dembla"
                },
                {
                    "authorId": "2065830195",
                    "name": "Gopal Vijayaraghavan"
                },
                {
                    "authorId": "2398727",
                    "name": "G\u00fcnther Hagleitner"
                }
            ]
        },
        {
            "paperId": "12d168c4342506188c87e64850e1faa777c5febe",
            "title": "Apache Calcite: A Foundational Framework for Optimized Query Processing Over Heterogeneous Data Sources",
            "abstract": "Apache Calcite is a foundational software framework that provides query processing, optimization, and query language support to many popular open-source data processing systems such as Apache Hive, Apache Storm, Apache Flink, Druid, and MapD. The goal of this paper is to formally introduce Calcite to the broader research community, brie y present its history, and describe its architecture, features, functionality, and patterns for adoption. Calcite's architecture consists of a modular and extensible query optimizer with hundreds of built-in optimization rules, a query processor capable of processing a variety of query languages, an adapter architecture designed for extensibility, and support for heterogeneous data models and stores (relational, semi-structured, streaming, and geospatial). This exible, embeddable, and extensible architecture is what makes Calcite an attractive choice for adoption in big-data frameworks. It is an active project that continues to introduce support for the new types of data sources, query languages, and approaches to query processing and optimization.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2856308",
                    "name": "Edmon Begoli"
                },
                {
                    "authorId": "1401945543",
                    "name": "Jes\u00fas Camacho-Rodr\u00edguez"
                },
                {
                    "authorId": "2053123111",
                    "name": "Julian Hyde"
                },
                {
                    "authorId": "2807081",
                    "name": "Michael J. Mior"
                },
                {
                    "authorId": "145013136",
                    "name": "D. Lemire"
                }
            ]
        }
    ]
}