{
    "authorId": "2109155757",
    "papers": [
        {
            "paperId": "16b0573b8a99746bd56c725bbbacab985be58557",
            "title": "AutoDim: Field-aware Embedding Dimension Searchin Recommender Systems",
            "abstract": "Practical large-scale recommender systems usually contain thousands of feature fields from users, items, contextual information, and their interactions. Most of them empirically allocate a unified dimension to all feature fields, which is memory inefficient. Thus it is highly desired to assign various embedding dimensions to different feature fields according to their importance and predictability. Due to the large amounts of feature fields and the nuanced relationship between embedding dimensions with feature distributions and neural network architectures, manually allocating embedding dimensions in practical recommender systems can be challenging. To this end, we propose an AutoML-based framework (AutoDim) in this paper, which can automatically select dimensions for different feature fields in a data-driven fashion. Specifically, we first proposed an end-to-end differentiable framework that can calculate the weights over various dimensions in a soft and continuous manner for feature fields, and an AutoML-based optimization algorithm; then, we derive a hard and discrete embedding component architecture according to the maximal weights and retrain the whole recommender framework. We conduct extensive experiments on benchmark datasets to validate the effectiveness of AutoDim.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2733057",
                    "name": "Xiangyu Zhao"
                },
                {
                    "authorId": "66442354",
                    "name": "Haochen Liu"
                },
                {
                    "authorId": "2146672392",
                    "name": "Hui Liu"
                },
                {
                    "authorId": "1736632",
                    "name": "Jiliang Tang"
                },
                {
                    "authorId": "2109155757",
                    "name": "Weiwei Guo"
                },
                {
                    "authorId": "2113235078",
                    "name": "Jun Shi"
                },
                {
                    "authorId": "16230274",
                    "name": "Sida Wang"
                },
                {
                    "authorId": "1722362",
                    "name": "Huiji Gao"
                },
                {
                    "authorId": "143947042",
                    "name": "Bo Long"
                }
            ]
        },
        {
            "paperId": "1c2c570b78174522268567d545a91e5e377f3bdd",
            "title": "Deep Natural Language Processing for LinkedIn Search Systems",
            "abstract": "Many search systems work with large amounts of natural language data, e.g., search queries, user profiles and documents, where deep learning based natural language processing techniques (deep NLP) can be of great help. In this paper, we introduce a comprehensive study of applying deep NLP techniques to five representative tasks in search engines. Through the model design and experiments of the five tasks, readers can find answers to three important questions: (1) When is deep NLP helpful/not helpful in search systems? (2) How to address latency challenges? (3) How to ensure model robustness? This work builds on existing efforts of LinkedIn search, and is tested at scale on a commercial search engine. We believe our experiences can provide useful insights for the industry and research communities.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2109155757",
                    "name": "Weiwei Guo"
                },
                {
                    "authorId": "2109116511",
                    "name": "Xiaowei Liu"
                },
                {
                    "authorId": "16230274",
                    "name": "Sida Wang"
                },
                {
                    "authorId": "3315931",
                    "name": "Michaeel Kazi"
                },
                {
                    "authorId": "1887610660",
                    "name": "Zhoutong Fu"
                },
                {
                    "authorId": "1722362",
                    "name": "Huiji Gao"
                },
                {
                    "authorId": "2117241913",
                    "name": "Jun Jia"
                },
                {
                    "authorId": "2146644146",
                    "name": "Liang Zhang"
                },
                {
                    "authorId": "2052143728",
                    "name": "Bo Long"
                }
            ]
        },
        {
            "paperId": "e913934865fff42619d22837c71d06459a99b96c",
            "title": "Cascaded Deep Neural Ranking Models in LinkedIn People Search",
            "abstract": "LinkedIn connects the world's professionals to make them more productive and successful. People Search plays an important role in fulfilling this goal by helping members find the most relevant and personalized results through a broad range of queries like names, job titles, skills, companies, locations, etc. It is one of the biggest search verticals at LinkedIn both in terms of engineering footprint and search traffic. In this paper, we present an overview of the People Search system, and discuss how we build and serve deep neural network (DNN) models, leveraging state-of-the-art deep natural language processing (NLP) techniques (e.g., convolutional neural networks (CNN) and Bidirectional Encoder Representations from Transformers (BERT)). We describe our journey of applying deep neural ranking models to a real-life product, including the modeling and system bottleneck challenges, crucial design choices, and lessons learned along the way. We hope a story of our endeavors and successes will provide meaningful insights to other similar systems.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2111907175",
                    "name": "Zimeng Yang"
                },
                {
                    "authorId": "2111438508",
                    "name": "Song Yan"
                },
                {
                    "authorId": "143638681",
                    "name": "A. Lad"
                },
                {
                    "authorId": "2109116511",
                    "name": "Xiaowei Liu"
                },
                {
                    "authorId": "2109155757",
                    "name": "Weiwei Guo"
                }
            ]
        },
        {
            "paperId": "f14dfcf3cf0a4a83571997efdaa5a4aedd23eb03",
            "title": "PHNet: Parasite-Host Network for Video Crowd Counting",
            "abstract": "Crowd counting plays an increasingly important role in public security. Recently, many crowd counting methods for a single image have been proposed but few studies have focused on using temporal information from image sequences of videos to improve prediction performance. In the existing methods using videos for crowd estimation, temporal features and spatial features are modeled jointly for the prediction, which makes the model less efficient in extracting spatiotemporal features and difficult to improve the performance of predictions. In order to solve these problems, this paper proposes a Parasite-Host Network (PHNet) which is composed of Parasite branch and Host branch to extract temporal features and spatial features respectively. To specifically extract the transform features in the time domain, we propose a novel architecture termed as \u201cRelational Extractor\u201d(RE) which models the multiplicative interaction features of adjacent frames. In addition, the Host branch extracts the spatial features from a current frame which can be replaced with any model that uses a single image for the prediction. We conducted experiments by using our PHNet on four video crowd counting benchmarks: Venice, UCSD, FDST and CrowdFlow. Experimental results show that PHNet achieves superior performance on these four datasets to the state-of-the-art methods.11The code is at https://github.com/LeeJAJA/PHNet-pytorch.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2156581475",
                    "name": "Shi Meng"
                },
                {
                    "authorId": "2117962517",
                    "name": "Jiajie Li"
                },
                {
                    "authorId": "2109155757",
                    "name": "Weiwei Guo"
                },
                {
                    "authorId": "2088922821",
                    "name": "Lai Ye"
                },
                {
                    "authorId": "8571267",
                    "name": "Jinfeng Jiang"
                }
            ]
        }
    ]
}