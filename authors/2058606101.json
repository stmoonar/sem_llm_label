{
    "authorId": "2058606101",
    "papers": [
        {
            "paperId": "421124db6a7901fc1933bf984c1e5ff5fdc27225",
            "title": "Embedding Based Retrieval in Friend Recommendation",
            "abstract": "Friend recommendation systems in online social and professional networks such as Snapchat helps users find friends and build connections, leading to better user engagement and retention. Traditional friend recommendation systems take advantage of the principle of locality and use graph traversal to retrieve friend candidates, e.g. Friends-of-Friends (FoF). While this approach has been adopted and shown efficacy in companies with large online networks such as Linkedin and Facebook, it suffers several challenges: (i) discrete graph traversal offers limited reach in cold-start settings, (ii) it is expensive and infeasible in realtime settings beyond 1 or 2 hop requests owing to latency constraints, and (iii) it cannot well-capture the complexity of graph topology or connection strengths, forcing one to resort to other mechanisms to rank and find top-K candidates. In this paper, we proposed a new Embedding Based Retrieval (EBR) system for retrieving friend candidates, which complements the traditional FoF retrieval by retrieving candidates beyond 2-hop, and providing a natural way to rank FoF candidates. Through online A/B test, we observe statistically significant improvements in the number of friendships made with EBR as an additional retrieval source in both low- and high-density network markets. Our contributions in this work include deploying a novel retrieval system to a large-scale friend recommendation system at Snapchat, generating embeddings for billions of users using Graph Neural Networks, and building EBR infrastructure in production to support Snapchat scale.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2223893005",
                    "name": "Jiahui Shi"
                },
                {
                    "authorId": "2226063688",
                    "name": "Vivek Chaurasiya"
                },
                {
                    "authorId": "152891495",
                    "name": "Yozen Liu"
                },
                {
                    "authorId": "2223762996",
                    "name": "Shubham Vij"
                },
                {
                    "authorId": "83331194",
                    "name": "Y. Wu"
                },
                {
                    "authorId": "2892275",
                    "name": "Satya Kanduri"
                },
                {
                    "authorId": "2153429147",
                    "name": "Neil Shah"
                },
                {
                    "authorId": "2223884564",
                    "name": "Peicheng Yu"
                },
                {
                    "authorId": "2223768936",
                    "name": "Nik Srivastava"
                },
                {
                    "authorId": "2117206743",
                    "name": "Lei Shi"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                },
                {
                    "authorId": "28584977",
                    "name": "Junliang Yu"
                }
            ]
        },
        {
            "paperId": "184fb9222ae22d0e0d8ebcfb4ac5043bb39208ef",
            "title": "Large Scale Search Engine Marketing (SEM) at Airbnb",
            "abstract": "Airbnb is an online marketplace which connects hosts and guests all over the world. Our inventory includes over 4.5 million listings, which enable the travel of over 300 million guests. The growth team at Airbnb is responsible for helping travelers find Airbnb, in part by participating in ad auctions on major search platforms such as Google and Bing. In this talk, we will describe how ad- vertising efficiently on these platforms requires solving several information retrieval and machine learning problems, including query understanding, click value estimation, and realtime pacing of our expenditure.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2113385252",
                    "name": "James Wong"
                },
                {
                    "authorId": "2072510226",
                    "name": "Brendan M. Collins"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                }
            ]
        },
        {
            "paperId": "23379a0dcdd7804e1a63c23259fafb49f97c3508",
            "title": "Personalized Job Recommendation System at LinkedIn: Practical Challenges and Lessons Learned",
            "abstract": "Online professional social networks such as LinkedIn play a key role in helping job seekers find right career opportunities and job providers reach out to potential candidates. LinkedIn's job ecosystem has been designed to serve as a marketplace for efficient matching between potential candidates and job postings, and to provide tools to connect job seekers and job providers. LinkedIn's job recommendations product is a crucial mechanism to help achieve these goals, wherein personalized sets of recommended job postings are presented for members based on the structured, context data present in their profiles.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1769861",
                    "name": "K. Kenthapadi"
                },
                {
                    "authorId": "2061533136",
                    "name": "Benjamin Le"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                }
            ]
        },
        {
            "paperId": "45fe9c77f1cfffe6b2268d2151f321e8fb0f9313",
            "title": "Search Without a Query: Powering Job Recommendations via Search Index at LinkedIn",
            "abstract": "The mission of LinkedIn is to connect the world's professionals to make them more productive and successful. LinkedIn operates the world's largest professional network on the Internet with more than 500 Million members in over 200 countries. Core to realizing the mission is to help people find jobs. In this paper, we describe how the jobs recommendations is powered by a search index and some practical challenges involved in scaling such a system.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "13938287",
                    "name": "Dhruv Arya"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                }
            ]
        },
        {
            "paperId": "8f161d643808996e34823c89f6f97e4ebc255f22",
            "title": "Candidate Selection for Large Scale Personalized Search and Recommender Systems",
            "abstract": "Modern day social media search and recommender systems require complex query formulation that incorporates both user context and their explicit search queries. Users expect these systems to be fast and provide relevant results to their query and context. With millions of documents to choose from, these systems utilize a multi-pass scoring function to narrow the results and provide the most relevant ones to users. Candidate selection is required to sift through all the documents in the index and select a relevant few to be ranked by subsequent scoring functions. It becomes crucial to narrow down the document set while maintaining relevant ones in resulting set. In this tutorial we survey various candidate selection techniques and deep dive into case studies on a large scale social media platform. In the later half we provide hands-on tutorial where we explore building these candidate selection models on a real world dataset and see how to balance the tradeoff between relevance and latency.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "13938287",
                    "name": "Dhruv Arya"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                },
                {
                    "authorId": "2063993551",
                    "name": "Aman Grover"
                },
                {
                    "authorId": "1769861",
                    "name": "K. Kenthapadi"
                }
            ]
        },
        {
            "paperId": "f5fe607391e9d1063c897ab653429cbacf1afe01",
            "title": "Latency Reduction via Decision Tree Based Query Construction",
            "abstract": "LinkedIn as a professional network serves the career needs of 450 Million plus members. The task of job recommendation system is to nd the suitable job among a corpus of several million jobs and serve this in real time under tight latency constraints. Job search involves nding suitable job listings given a user, query and context. Typical scoring function for both search and recommendations involves evaluating a function that matches various elds in the job description with various elds in the member pro le. This in turn translates to evaluating a function with several thousands of features to get the right ranking. In recommendations, evaluating all the jobs in the corpus for all members is not possible given the latency constraints. On the other hand, reducing the candidate set could potentially involve loss of relevant jobs. We present a way to model the underlying complex ranking function via decision trees. The branches within the decision trees are query clauses and hence the decision trees can be mapped on to real time queries. We developed an o ine framework which evaluates the quality of the decision tree with respect to latency and recall. We tested the approach on job search and recommendations on LinkedIn and A/B tests show signi cant improvements in member engagement and latency. Our techniques helped reduce job search latency by over 67% and our recommendations latency by over 55%. Our techniques show 3.5% improvement in applications from job recommendations primarily due to reduced timeouts from upstream services. As of writing the approach powers all of job search and recommendations on LinkedIn.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2063993551",
                    "name": "Aman Grover"
                },
                {
                    "authorId": "13938287",
                    "name": "Dhruv Arya"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                }
            ]
        },
        {
            "paperId": "3f10df7b5d33730eefded12298ff4e50d853667f",
            "title": "Instant Search: A Hands-on Tutorial",
            "abstract": "Instant search has become a common part of the search experience in most popular search engines and social networking websites. The goal is to provide instant feedback to the user in terms of query completions (\"instant suggestions\") or directly provide search results (\"instant results\") as the user is typing their query. The need for instant search has been further amplified by the proliferation of mobile devices and services like Siri and Google Now that aim to address the user's information need as quickly as possible. Examples of instant results include web queries like \"weather san jose\" (which directly provides the current temperature), social network queries like searching for someone's name on Facebook or LinkedIn (which directly provide the people matching the query). In each of these cases, instant search constitutes a superior user experience, as opposed to making the user complete their query before the system returns a list of results on the traditional search engine results page (SERP). We consider instant search experience to be a combination of instant results and instant suggestions, with the goal of satisfying the user's information need as quickly as possible with minimal effort on the part of the user. We first present the challenges involved in putting together an instant search solution at scale, followed by a survey of IR and NLP techniques that can be used to address them. We will also conduct a hands-on session aimed at putting together an end-to-end instant search system using open source tools and publicly available data sets. These tools include typeahead.js from Twitter for the frontend and Lucene/elasticsearch for the backend. We present techniques for prefix-based retrieval as well as injecting custom ranking functions into elasticsearch. For the search index, we will use the dataset made available by Stackoverflow. This tutorial is aimed at both researchers interested in knowing about retrieval techniques used for instant search as well as practitioners interested in deploying an instant search system at scale. The authors have worked extensively on building and scaling LinkedIn's instant search experience. To the best of our knowledge, this is the first tutorial that covers both theoretical and practical aspects of instant search.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                },
                {
                    "authorId": "143638681",
                    "name": "A. Lad"
                },
                {
                    "authorId": "1403844150",
                    "name": "Viet Ha-Thuc"
                },
                {
                    "authorId": "13938287",
                    "name": "Dhruv Arya"
                }
            ]
        },
        {
            "paperId": "5e0f11832c1f23e1573bf30b1e2e75659050497e",
            "title": "Learning object recommendation for an effective open e-learning environment",
            "abstract": "Over the past few years, with the exponential expansion of the World Wide Web and its applications, there has been a paradigm shift in the way people learn - Massively Open Online Courses (MOOCs) and other online learning recourses are fast replacing conventional textbook learning. Efforts are also being made to develop and foster crowd sourced massive open repositories of learning objects, which can be tapped to author courses for diverse learners with varied backgrounds dynamically. While this can be done by adopting different systems and architectures, its effectiveness calls for a collaborative approach of learning object recommendation, driven by the learner's learning preferences. A course is basically authored based on the learner's requirements by retrieving learning objects that have high aptness to the particular subject/course and high collaborative-predicted rating which signifies high relation to the user's learning preferences. The learner rates the content after working on the learning object and this rating is used to learn the aptness and the learner's preferences.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                },
                {
                    "authorId": "2255666",
                    "name": "Arunkumar Ravichandran"
                },
                {
                    "authorId": "40647896",
                    "name": "C. Srinivasan"
                },
                {
                    "authorId": "145115018",
                    "name": "Susan Elias"
                },
                {
                    "authorId": "49436407",
                    "name": "Lakshimi Prabha Ramesh"
                }
            ]
        },
        {
            "paperId": "c85a631a4543ffebb32f3915e5467a43feebb588",
            "title": "Personalized expertise search at LinkedIn",
            "abstract": "Linkedln is the largest professional network with more than 350 million members. As the member base increases, searching for experts becomes more and more challenging. In this paper, we propose an approach to address the problem of personalized expertise search on LinkedIn, particularly for exploratory search queries containing skills. In the offline phase, we introduce a collaborative filtering approach based on matrix factorization. Our approach estimates expertise scores for both the skills that members list on their profiles as well as the skills they are likely to have but do not explicitly list. In the online phase (at query time) we use expertise scores on these skills as a feature in combination with other features to rank the results. To learn the personalized ranking function, we propose a heuristic to extract training data from search logs while handling position and sample selection biases. We tested our models on two products - LinkedIn homepage and LinkedIn recruiter. A/B tests showed significant improvements in click through rates - 31% for CTR@1 for recruiter (18% for homepage) as well as downstream messages sent from search - 37% for recruiter (20% for homepage). As of writing this paper, these models serve nearly all live traffic for skills search on LinkedIn homepage as well as LinkedIn recruiter.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1403844150",
                    "name": "Viet Ha-Thuc"
                },
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                },
                {
                    "authorId": "144544965",
                    "name": "Mario Rodr\u00edguez"
                },
                {
                    "authorId": "2503512",
                    "name": "Shakti Sinha"
                },
                {
                    "authorId": "7313694",
                    "name": "S. Sundaram"
                },
                {
                    "authorId": "2110671978",
                    "name": "Lin Guo"
                }
            ]
        },
        {
            "paperId": "65854ee3bbda217ee1980340ec7b3f16dfa8a1e4",
            "title": "Context-aware authoring and presentation from open e-learning repository",
            "abstract": "With the explosive growth in the World Wide Web over the past few decades, a predominant part of the pedagogical arena is making a transition from stereotype textbook learning to massive open online learning. Efforts are being made to develop and foster crowd sourced massive open repositories of learning objects, which can be tapped to author courses for diverse learners with varied backgrounds dynamically. Developing systems to author and deliver such courses has been of rising importance to contemporary researchers and this paper proposes an efficient context-aware open e-learning environment to do the same. The learning objects having high aptness to the particular course and high content-based predicted rating pertaining to the particular learner's preferences are picked from the open repository and the course structure is modeled using communicating dynamic Petri nets. Ratings and feedback from the user are obtained during presentation, based on which the course delivery is made adaptive. Rating prediction through Collaborative filtering is used for this purpose. The ratings are also used to implicitly learn the learner's preferences and to establish an aptness score for each learning object.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2058606101",
                    "name": "Ganesh Venkataraman"
                },
                {
                    "authorId": "2255666",
                    "name": "Arunkumar Ravichandran"
                },
                {
                    "authorId": "40647896",
                    "name": "C. Srinivasan"
                },
                {
                    "authorId": "145115018",
                    "name": "Susan Elias"
                },
                {
                    "authorId": "30800961",
                    "name": "Lakshimi Prabha Ramesh"
                }
            ]
        }
    ]
}