{
    "authorId": "1699192",
    "papers": [
        {
            "paperId": "0258cbc56438377939d130418289f16b7d52ffe4",
            "title": "qEndpoint: A Wikidata SPARQL endpoint on commodity hardware",
            "abstract": "In this work, we demonstrate how to setup a Wikidata SPARQL endpoint on commodity hardware resources. We achieve this by using a novel triple store called qEndpoint, which uses a read-only partition based on HDT and a write partition based on RDF4J. We show that qEndpoint can index and query the entire Wikidata dump (currently 17 billion triples) on a machine with 600GB SSD, 10 cores and 10GB of RAM, while keeping the query performance comparable with other SPARQL endpoints indexing Wikidata. In a nutshell, we present the first SPARQL endpoint over Wikidata that can run on commodity hardware while preserving the query run time of existing implementations. Our work goes in the direction of democratizing the access to Wikidata as well as to other large-scale Knowledge Graphs published on the Web. The source code of qEndpoint along with the query workloads are publicly available.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2189762794",
                    "name": "Antoine Willerval"
                },
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "3370065",
                    "name": "Dennis Diefenbach"
                }
            ]
        },
        {
            "paperId": "1f1cfad0bf63153e66b2b7fbd455c92a03e9ec04",
            "title": "An Overview of Reachability Indexes on Graphs",
            "abstract": "Graphs have been the natural choice for modeling entities and the relationships among them. One of the most fundamental graph processing operators is a reachability query, which checks whether a path exists from the source to the target vertex in a plain graph, and additionally whether the path can satisfy a given path constraint based on the edge labels in an edge-labeled graph. Processing reachability queries requires potentially visiting a large portion of the graph due to the inherent transitivity of these queries. This makes it costly to evaluate them on large graphs. Thus, significant effort has been spent to design indexing techniques for reachability queries in the last three decades, building advanced data structures to efficiently compress the transitive closure of the graph so as to accelerate online query processing, aka reachability indexes. In this tutorial, we provide an in-depth technical review of the existing reachability indexes, ranging from those designed for plain graphs to ones for edge-labeled graphs. We conclude the tutorial by summarizing the open challenges for integrating these techniques into GDBMSs.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2152737229",
                    "name": "Chao Zhang"
                },
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "1705151",
                    "name": "M. Tamer \u00d6zsu"
                }
            ]
        },
        {
            "paperId": "3d8bbb4869ab69f2735d08f8f339aa4d554d4295",
            "title": "From Large Language Models to Databases and Back: A Discussion on Research and Education",
            "abstract": "In recent years, large language models (LLMs) have garnered increasing attention from both academia and industry due to their potential to facilitate natural language processing (NLP) and generate highquality text. Despite their benefits, however, the use of LLMs is raising concerns about the reliability of knowledge extraction. The combination of DB research and data science has advanced the state of the art in solving real-world problems, such as merchandise recommendation and hazard prevention [30]. In this discussion, we explore the challenges and opportunities related to LLMs in DB and data science research and education.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1403657578",
                    "name": "S. Amer-Yahia"
                },
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "2146071014",
                    "name": "Lei Chen"
                },
                {
                    "authorId": "2217441359",
                    "name": "Guoliang Li"
                },
                {
                    "authorId": "144232630",
                    "name": "Kyuseok Shim"
                },
                {
                    "authorId": "2157263249",
                    "name": "Jianliang Xu"
                },
                {
                    "authorId": "2204051805",
                    "name": "Xiaochun Yang"
                }
            ]
        },
        {
            "paperId": "7c88cb15e9a51a5a8dacee3921c931dfefb63981",
            "title": "Threshold Queries",
            "abstract": "Threshold queries are an important class of queries that only require computing or counting answers up to a specified threshold value. To the best of our knowledge, threshold queries have been largely disregarded in the research literature, which is surprising considering how common they are in practice. We explore how such queries appear in practice and present a method that can be used to significantly improve the asymptotic bounds of their state-of-the-art evaluation algorithms. Our experimental evaluation of these methods shows order-of-magnitude performance improvements.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "31359282",
                    "name": "Stefania Dumbrava"
                },
                {
                    "authorId": "145301017",
                    "name": "G. Fletcher"
                },
                {
                    "authorId": "1687456",
                    "name": "J. Hidders"
                },
                {
                    "authorId": "2219726433",
                    "name": "Matthias Hofer"
                },
                {
                    "authorId": "144352362",
                    "name": "W. Martens"
                },
                {
                    "authorId": "3166093",
                    "name": "Filip Murlak"
                },
                {
                    "authorId": "2766552",
                    "name": "Joshua Shinavier"
                },
                {
                    "authorId": "73473120",
                    "name": "S. Staworko"
                },
                {
                    "authorId": "1777646",
                    "name": "Dominik Tomaszuk"
                }
            ]
        },
        {
            "paperId": "9bdb3f2f1f9391a9b5b6a99ac7a85c3c9847ea49",
            "title": "Indexing Techniques for Graph Reachability Queries",
            "abstract": "We survey graph reachability indexing techniques for efficient processing of graph reachability queries in two types of popular graph models: plain graphs and edge-labeled graphs. Reachability queries are fundamental in graph processing, and reachability indexes are specialized data structures tailored for speeding up such queries. Work on this topic goes back four decades -- we include 33 of the proposed techniques. Plain graphs contain only vertices and edges, with reachability queries checking path existence between a source and target vertex. Edge-labeled graphs, in contrast, augment plain graphs by adding edge labels. Reachability queries in edge-labeled graphs incorporate path constraints based on edge labels, assessing both path existence and compliance with constraints. We categorize techniques in both plain and edge-labeled graphs and discuss the approaches according to this classification, using existing techniques as exemplars. We discuss the main challenges within each class and how these might be addressed in other approaches. We conclude with a discussion of the open research challenges and future research directions, along the lines of integrating reachability indexes into graph data management systems. This survey serves as a comprehensive resource for researchers and practitioners interested in the advancements, techniques, and challenges on reachability indexing in graph analytics.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2265652624",
                    "name": "Chao Zhang"
                },
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "9107867",
                    "name": "M. Tamer Ozsu"
                }
            ]
        },
        {
            "paperId": "c8fff8ffe0a9b0e68384870370b7ac049e294e47",
            "title": "The Quest for Schemas in Graph Databases (keynote)",
            "abstract": "Abstract",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                }
            ]
        },
        {
            "paperId": "d25f8c388677d287d00ca67d44ef02da2b45f2d9",
            "title": "Large Language Models and Knowledge Graphs: Opportunities and Challenges",
            "abstract": "Large Language Models (LLMs) have taken Knowledge Representation -- and the world -- by storm. This inflection point marks a shift from explicit knowledge representation to a renewed focus on the hybrid representation of both explicit knowledge and parametric knowledge. In this position paper, we will discuss some of the common debate points within the community on LLMs (parametric knowledge) and Knowledge Graphs (explicit knowledge) and speculate on opportunities and visions that the renewed focus brings, as well as related research topics and challenges.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "9416872",
                    "name": "Jeff Z. Pan"
                },
                {
                    "authorId": "2066327465",
                    "name": "S. Razniewski"
                },
                {
                    "authorId": "3245041",
                    "name": "Jan-Christoph Kalo"
                },
                {
                    "authorId": "29001552",
                    "name": "Sneha Singhania"
                },
                {
                    "authorId": "1731892",
                    "name": "Jiaoyan Chen"
                },
                {
                    "authorId": "3081683",
                    "name": "S. Dietze"
                },
                {
                    "authorId": "2362078",
                    "name": "Hajira Jabeen"
                },
                {
                    "authorId": "2008000176",
                    "name": "Janna Omeliyanenko"
                },
                {
                    "authorId": "2155281129",
                    "name": "Wen Zhang"
                },
                {
                    "authorId": "2574504",
                    "name": "Matteo Lissandrini"
                },
                {
                    "authorId": "51119656",
                    "name": "Russa Biswas"
                },
                {
                    "authorId": "144608002",
                    "name": "Gerard de Melo"
                },
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "2007891598",
                    "name": "Edlira Vakaj"
                },
                {
                    "authorId": "2346796",
                    "name": "M. Dragoni"
                },
                {
                    "authorId": "2235966",
                    "name": "D. Graux"
                }
            ]
        },
        {
            "paperId": "d7a439ddd76bbaa78873fa3c2a88c033e955ae06",
            "title": "Technical Perspective: Sortledton: a Universal Graph Data Structure",
            "abstract": "Graph processing is becoming ubiquitous due to the proliferation of interconnected data in several domains, including life sciences, social networks, cybersecurity, finance and logistics, to name a few. In parallel with the growth of the underlying graph data sources, a plethora of graph workloads have appeared, ranging from graph analytics to graph traversals and graph pattern matching. Graph systems executing both complex and simple graph workloads need to leverage adequate data structures for efficiently processing heterogeneous graph data. While the underlying graph data structures have been extensively studied for the static case, they are less understood for the dynamic case, with the data undergoing several updates per second. Moreover, the existing solutions suffer lack of generality, as they focus on one specific requirement and workload type at a time. Designing a universal data structure that adapts to several kinds of graph workloads in a dynamic setting and achieves significant efficiency on all of them is far from being trivial.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                }
            ]
        },
        {
            "paperId": "09b450206c6a8a3fbf68dc54bf18a7aefb039439",
            "title": "How Inclusive are We?",
            "abstract": "ACM SIGMOD, VLDB and other database organizations have committed to fostering an inclusive and diverse community, as do many other scientific organizations. Recently, different measures have been taken to advance these goals, especially for underrepresented groups. One possible measure is double-blind reviewing, which aims to hide gender, ethnicity, and other properties of the authors. We report the preliminary results of a gender diversity analysis of publications of the database community across several peer-reviewed venues, and also compare women's authorship percentages in both single-blind and double-blind venues along the years. We also obtained a cross comparison of the obtained results in data management with other relevant areas in Computer Science.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "2807081",
                    "name": "Michael J. Mior"
                },
                {
                    "authorId": "2260653015",
                    "name": "Felix Naumann"
                },
                {
                    "authorId": "50404914",
                    "name": "N. Noack"
                }
            ]
        },
        {
            "paperId": "0cc4b08210038013ba9daccad07308fb97b4a268",
            "title": "A Reachability Index for Recursive Label-Concatenated Graph Queries",
            "abstract": "Reachability queries checking the existence of a path from a source node to a target node are fundamental operators for querying and processing graph data. Current approaches for index-based evaluation of reachability queries either focus on plain reachability or constraint-based reachability with the alternation of edge labels only. In this paper, we study for the first time the problem of index-based processing for recursive label-concatenated reachability queries, referred to as RLC queries. These queries check the existence of a path that can satisfy the constraint defined by a concatenation of at most k edge labels under the Kleene plus. Many practical graph database and network analysis applications exhibit RLC queries. However, their evaluation remains prohibitive in current graph database engines.We introduce the RLC index, the first reachability index to efficiently process RLC queries. The RLC index checks whether the source vertex can reach an intermediate vertex that can also reach the target vertex under a recursive label-concatenated constraint. We propose an indexing algorithm to build the RLC index, which guarantees the soundness and the completeness of query execution and avoids recording redundant index entries. Comprehensive experiments on real-world graphs show that the RLC index can significantly reduce both the offline processing cost and the memory overhead of computing and storing transitive closure, while improving query processing up to six orders of magnitude over online traversals. Finally, our open-source implementation of the RLC index significantly outperforms current mainstream graph engines for evaluating RLC queries.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2152737229",
                    "name": "Chao Zhang"
                },
                {
                    "authorId": "1699192",
                    "name": "A. Bonifati"
                },
                {
                    "authorId": "2035501761",
                    "name": "Hugo Kapp"
                },
                {
                    "authorId": "1414522141",
                    "name": "V. Haprian"
                },
                {
                    "authorId": "2160840",
                    "name": "Jean-Pierre Lozi"
                }
            ]
        }
    ]
}