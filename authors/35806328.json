{
    "authorId": "35806328",
    "papers": [
        {
            "paperId": "918478ba11963d1e83ec77d29786df60a1ae9850",
            "title": "The 3rd International Workshop on Machine Learning on Graphs (MLoG)",
            "abstract": "Graphs, which encode pairwise relations between entities, are a kind of universal data structure for a lot of real-world data, including social networks, transportation networks, and chemical molecules. Many important applications on these data can be treated as computational tasks on graphs. Recently, machine learning techniques are widely developed and utilized to effectively tame graphs for discovering actionable patterns and harnessing them for advancing various graph-related computational tasks. Huge success has been achieved and numerous real-world applications have benefited from it. However, since in today's world, we are generating and gathering data in a much faster and more diverse way, real-world graphs are becoming increasingly large-scale and complex. More dedicated efforts are needed to propose more advanced machine learning techniques and properly deploy them for real-world applications in a scalable way. Thus, we organize The 3rd International Workshop on Machine Learning on Graphs (MLoG), held in conjunction with the 16th ACM Conference on Web Search and Data Mining (WSDM), which provides a venue to gather academia researchers and industry researchers/practitioners to present the recent progress on machine learning on graphs.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "12524628",
                    "name": "Tyler Derr"
                },
                {
                    "authorId": "47009435",
                    "name": "Yao Ma"
                },
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "2153429147",
                    "name": "Neil Shah"
                },
                {
                    "authorId": "2153326034",
                    "name": "Shirui Pan"
                }
            ]
        },
        {
            "paperId": "09c72d9d46f6750e487afdb5f7cae7693ffccc10",
            "title": "The Shapley Value in Machine Learning",
            "abstract": "Over the last few years, the Shapley value, a solution concept from cooperative game theory, has found numerous applications in machine learning. In this paper, we first discuss fundamental concepts of cooperative game theory and axiomatic properties of the Shapley value. Then we give an overview of the most important applications of the Shapley value in machine learning: feature selection, explainability, multi-agent reinforcement learning, ensemble pruning, and data valuation. We examine the most crucial limitations of the Shapley value and point out directions for future research.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "2058604454",
                    "name": "Lauren Watson"
                },
                {
                    "authorId": "2056355686",
                    "name": "P\u00e9ter Bayer"
                },
                {
                    "authorId": "2820299",
                    "name": "Hao-Tsung Yang"
                },
                {
                    "authorId": "104031520",
                    "name": "Oliver Kiss"
                },
                {
                    "authorId": "2136371907",
                    "name": "Sebastian Nilsson"
                },
                {
                    "authorId": "2056781762",
                    "name": "Rik Sarkar"
                }
            ]
        },
        {
            "paperId": "485869192ff43c24b8429502d8873c37cdd72eb4",
            "title": "PyTorch Geometric Signed Directed: A Software Package on Graph Neural Networks for Signed and Directed Graphs",
            "abstract": "Networks are ubiquitous in many real-world applications (e.g., social networks encoding trust/distrust relationships, correlation networks arising from time series data). While many networks are signed or directed, or both, there is a lack of unified software packages on graph neural networks (GNNs) specially designed for signed and directed networks. In this paper, we present PyTorch Geometric Signed Directed (PyGSD), a software package which fills this gap. Along the way, we evaluate the implemented methods with experiments with a view to providing insights into which method to choose for a given task. The deep learning framework consists of easy-to-use GNN models, synthetic and real-world data, as well as task-specific evaluation metrics and loss functions for signed and directed networks. As an extension library for PyG, our proposed software is maintained with open-source releases, detailed documentation, continuous integration, unit tests and code coverage checks. The GitHub repository of the library is https://github.com/SherylHYX/pytorch_geometric_signed_directed.",
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "authors": [
                {
                    "authorId": "2118917694",
                    "name": "Yixuan He"
                },
                {
                    "authorId": "2135478529",
                    "name": "Xitong Zhang"
                },
                {
                    "authorId": "47513427",
                    "name": "Junjie Huang"
                },
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "2264879492",
                    "name": "Mihai Cucuringu"
                },
                {
                    "authorId": "2666765",
                    "name": "G. Reinert"
                }
            ]
        },
        {
            "paperId": "66f4a44b99534e60ae8cfc4c9150f47359ee2034",
            "title": "Continual and Sliding Window Release for Private Empirical Risk Minimization",
            "abstract": "It is difficult to continually update private machine learning models with new data while maintaining privacy. Data incur increasing privacy loss -- as measured by differential privacy -- when they are used in repeated computations. In this paper, we describe regularized empirical risk minimization algorithms that continually release models for a recent window of data. One version of the algorithm uses the entire data history to improve the model for the recent window. The second version uses a sliding window of constant size to improve the model, ensuring more relevant models in case of evolving data. The algorithms operate in the framework of stochastic gradient descent. We prove that even with releasing a model at each time-step over an infinite time horizon, the privacy cost of any data point is bounded by a constant $\\epsilon$ differential privacy, and the accuracy of the output models are close to optimal. Experiments on MNIST and Arxiv publications data show results consistent with the theory.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2058604454",
                    "name": "Lauren Watson"
                },
                {
                    "authorId": "2110145065",
                    "name": "Abhirup Ghosh"
                },
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "2810893",
                    "name": "Rik Sarkar"
                }
            ]
        },
        {
            "paperId": "79847a6027001eddc19b7639d2660e6d50ec987c",
            "title": "Synthetic Graph Generation to Benchmark Graph Learning",
            "abstract": "Graph learning algorithms have attained state-of-the-art performance on many graph analysis tasks such as node classification, link prediction, and clustering. It has, however, become hard to track the field's burgeoning progress. One reason is due to the very small number of datasets used in practice to benchmark the performance of graph learning algorithms. This shockingly small sample size (~10) allows for only limited scientific insight into the problem. In this work, we aim to address this deficiency. We propose to generate synthetic graphs, and study the behaviour of graph learning algorithms in a controlled scenario. We develop a fully-featured synthetic graph generator that allows deep inspection of different models. We argue that synthetic graph generations allows for thorough investigation of algorithms and provides more insights than overfitting on three citation datasets. In the case study, we show how our framework provides insight into unsupervised and supervised graph neural network models.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40900939",
                    "name": "Anton Tsitsulin"
                },
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "1798404",
                    "name": "John Palowitch"
                },
                {
                    "authorId": "2271808",
                    "name": "Bryan Perozzi"
                }
            ]
        },
        {
            "paperId": "86860f06aa78ea05d46adbbf93e2da11035108b9",
            "title": "TigerLily: Finding drug interactions in silico with the Graph",
            "abstract": "Tigerlily is a TigerGraph based system designed to solve the drug interaction prediction task. In this machine learning task, we want to predict whether two drugs have an adverse interaction. Our framework allows us to solve this highly relevant real-world problem using graph mining techniques in these steps: (a) Using PyTigergraph we create a heterogeneous biological graph of drugs and proteins. (b) We calculate the personalized PageRank scores of drug nodes in the TigerGraph Cloud. (c) We embed the nodes using sparse non-negative matrix factorization of the personalized PageRank matrix. (d) Using the node embeddings we train a gradient boosting based drug interaction predictor.",
            "fieldsOfStudy": [
                "Computer Science",
                "Biology"
            ],
            "authors": [
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                }
            ]
        },
        {
            "paperId": "afc3d381385562b08d8a08c1bd254d372ae11329",
            "title": "OntoMerger: An Ontology Integration Library for Deduplicating and Connecting Knowledge Graph Nodes",
            "abstract": "Duplication of nodes 1 is a common problem encountered when building knowledge graphs (KGs) from heterogeneous datasets, where it is crucial to be able to merge nodes having the same meaning. OntoMerger is a Python ontology integration library whose functionality is to deduplicate KG nodes. Our approach takes a set of KG nodes, mappings and disconnected hierarchies and generates a set of merged nodes together with a connected hierarchy. In addition, the library provides analytic and data testing functionalities that can be used to fine-tune the inputs, further reducing duplication, and to increase connectivity of the output graph. OntoMerger can be applied to a wide variety of ontologies and KGs. In this paper we introduce OntoMerger and illustrate its functionality on a real-world biomedical KG. Integration Library Deduplicating Graph Proceedings of",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3203800",
                    "name": "D. Geleta"
                },
                {
                    "authorId": "1729747",
                    "name": "A. Nikolov"
                },
                {
                    "authorId": "2168256957",
                    "name": "Mark ODonoghue"
                },
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "10704441",
                    "name": "A. Gogleva"
                },
                {
                    "authorId": "1720276",
                    "name": "V. Tamma"
                },
                {
                    "authorId": "1740601",
                    "name": "T. Payne"
                }
            ]
        },
        {
            "paperId": "bdd717b3435087263579e11b2f84472d29705f27",
            "title": "ChemicalX: A Deep Learning Library for Drug Pair Scoring",
            "abstract": "In this paper, we introduce ChemicalX, a PyTorch-based deep learning library designed for providing a range of state of the art models to solve the drug pair scoring task. The primary objective of the library is to make deep drug pair scoring models accessible to machine learning researchers and practitioners in a streamlined framework. The design of ChemicalX reuses existing high level model training utilities, geometric deep learning, and deep chemistry layers from the PyTorch ecosystem. Our system provides neural network layers, custom pair scoring architectures, data loaders, and batch iterators for end users. We showcase these features with example code snippets and case studies to highlight the characteristics of ChemicalX. A range of experiments on real world drug-drug interaction, polypharmacy side effect, and combination synergy prediction tasks demonstrate that the models available in ChemicalX are effective at solving the pair scoring task. Finally, we show that ChemicalX could be used to train and score machine learning models on large drug pair datasets with hundreds of thousands of compounds on commodity hardware.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "35477117",
                    "name": "Charles Tapley Hoyt"
                },
                {
                    "authorId": "10704441",
                    "name": "A. Gogleva"
                },
                {
                    "authorId": "47347848",
                    "name": "Piotr Grabowski"
                },
                {
                    "authorId": "40689772",
                    "name": "Klas Karis"
                },
                {
                    "authorId": "72040847",
                    "name": "Andrej Lamov"
                },
                {
                    "authorId": "1729747",
                    "name": "A. Nikolov"
                },
                {
                    "authorId": "2136371907",
                    "name": "Sebastian Nilsson"
                },
                {
                    "authorId": "103405560",
                    "name": "M. Ughetto"
                },
                {
                    "authorId": "2153607948",
                    "name": "Yu Wang"
                },
                {
                    "authorId": "12524628",
                    "name": "Tyler Derr"
                },
                {
                    "authorId": "46221592",
                    "name": "Benjamin M. Gyori"
                }
            ]
        },
        {
            "paperId": "18046c8ecb6a626055207327b9099e241e12f5d9",
            "title": "The Shapley Value of Classifiers in Ensemble Games",
            "abstract": "What is the value of an individual model in an ensemble of binary classifiers? We answer this question by introducing a class of transferable utility cooperative games called ensemble games. In machine learning ensembles, pre-trained models cooperate to make classification decisions. To quantify the importance of models in these ensemble games, we define Troupe - an efficient algorithm that allocates payoffs based on approximate Shapley values of the classifiers. We argue that the Shapley value of models in these games is an effective decision metric for choosing a high-performing subset of models from the ensemble. Our analytical findings prove that our Shapley value estimation scheme is precise and scalable; its performance increases with the size of the dataset and ensemble. Empirical results on real-world graph classification tasks demonstrate that our algorithm produces high-quality estimates of the Shapley value. We find that Shapley values can be utilized for ensemble pruning and that adversarial models receive a low valuation. Complex classifiers are frequently found to be responsible for both correct and incorrect classification decisions.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "2810893",
                    "name": "Rik Sarkar"
                }
            ]
        },
        {
            "paperId": "1e7c244af866eef27739137f24a948e6de878c16",
            "title": "Chickenpox Cases in Hungary: a Benchmark Dataset for Spatiotemporal Signal Processing with Graph Neural Networks",
            "abstract": "Recurrent graph convolutional neural networks are highly effective machine learning techniques for spatiotemporal signal processing. Newly proposed graph neural network architectures are repetitively evaluated on standard tasks such as traffic or weather forecasting. In this paper, we propose the Chickenpox Cases in Hungary dataset as a new dataset for comparing graph neural network architectures. Our time series analysis and forecasting experiments demonstrate that the Chickenpox Cases in Hungary dataset is adequate for comparing the predictive performance and forecasting capabilities of novel recurrent graph neural network architectures.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "35806328",
                    "name": "Benedek Rozemberczki"
                },
                {
                    "authorId": "1397984251",
                    "name": "P. Scherer"
                },
                {
                    "authorId": "104031520",
                    "name": "Oliver Kiss"
                },
                {
                    "authorId": "2810893",
                    "name": "Rik Sarkar"
                },
                {
                    "authorId": "2142502304",
                    "name": "Tamas Ferenci"
                }
            ]
        }
    ]
}