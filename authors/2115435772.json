{
    "authorId": "2115435772",
    "papers": [
        {
            "paperId": "4e743c320e6ee407d9ae5fcc0894d0a7361f9c11",
            "title": "Semi-distributed Traffic Engineering for Elastic Flows in Software Defined Networks",
            "abstract": "Software-Defined Networking (SDN) is becoming the reference paradigm to provide advanced Traffic Engineering (TE) solutions for future networks. However, taking all TE decisions at the controller, in a centralized fashion, may require long delays to react to network changes. With the most recent advancements in SDN programmability some decisions can (and should indeed) be offloaded to switches.In this paper we present a model to route elastic demands in a general network topology adopting a semi-distributed approach of the control plane to deal with path congestion. Specifically, we envision a Stackelberg approach where the SDN controller takes the role of Leader, choosing the most appropriate subset of routing paths for the selfish users (network switches), which behave as Followers, making local routing decisions based on path congestion. To overcome the complexity of the problem and meet the time requirements of real-life settings, we propose effective heuristic procedures which take into accurate account traffic dynamics, considering a stochastic scenario where both the number and size of flows change over time. We test our framework with a custom-developed simulator in different network topologies and instance sizes. Numerical results show how our model and heuristics achieve the desired balance between making global decisions and reacting rapidly to congestion events.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2090511185",
                    "name": "Emmanuele Benedetto"
                },
                {
                    "authorId": "1708718",
                    "name": "I. Filippini"
                },
                {
                    "authorId": "144463439",
                    "name": "J. Elias"
                },
                {
                    "authorId": "1742341",
                    "name": "F. Martignon"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                }
            ]
        },
        {
            "paperId": "23d0aaedd6180df7edee247076f89dcbd9aa6312",
            "title": "AuTraScale: An Automated and Transfer Learning Solution for Streaming System Auto-Scaling",
            "abstract": "The complexity and variability of streaming data have brought a great challenge to the elasticity of the data processing systems. Streaming systems, such as Flink and Storm, need to adapt to the changes of workload with auto-scaling to meet the QoS requirements while saving resources. However, the accuracy of classical models (such as a queueing model) for QoS prediction decreases with the increase of the complexity and variability of streaming data and the resource interference. On the other hand, the indirect metrics used to optimize QoS may not accurately guide resource adjustment. Those problems can easily lead to waste of resources or QoS violation in practice. To solve the above problems, we propose AuTraScale, an automated and transfer learning auto-scaling solution, to determine the appropriate parallelism and resource allocation that meet the latency and throughput targets. AuTraScale uses Bayesian optimization to adapt to the complex relationship between resources and QoS, minimizing the impact of resource interference on the prediction accuracy, and a new metric that measures the performance of operators for accurate optimization. Even when the input data rate changes, it can quickly adjust the parallelism of each operator in response, with a transfer learning algorithm. We have implemented and evaluated AuTraScale on a Flink platform. The experimental results show that, compared with the state-of-the-art method like DRS and DS2, AuTraScale can reduce 66.6% and 36.7% resource consumption respectively in the scale-down and scale-up scenarios while ensuring QoS requirements, and save 13.5% resource on average when the input data rate changes.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2146642942",
                    "name": "Liang Zhang"
                },
                {
                    "authorId": "50010573",
                    "name": "Wenli Zheng"
                },
                {
                    "authorId": "46651954",
                    "name": "Chao Li"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "1697293",
                    "name": "M. Guo"
                }
            ]
        },
        {
            "paperId": "2706acba8e92ec4dd185a82ca5844fc10bc5a095",
            "title": "A dynamic network traffic classifier using supervised ML for a Docker-based SDN network",
            "abstract": "With the rapid technological growth in the last decades, the number of devices and users has drastically increased. Software-defined networking (SDN) with machine learning (ML) has become an emerging solution for network scheduling, quality of service (QoS), resource allocations, and security. This paper focuses on the implementation of a network traffic classifier using a novel Docker-based SDN network. ML offers good performance to real-time traffic solutions without depending on well-known TCP or UDP port numbers, IP addresses, or encrypted payloads. In this paper, using three ML techniques, we first classify network flows with 3, 5, and 7 parameters giving up to 97.14% accuracy. Additionally, we present a new performance accelerator algorithm (PAA), which incorporates these three ML classifiers and accelerates the overall performance significantly. We then propose a dynamic network classifier (DNC) generated from PAA over a novel Docker-based SDN network. Finally, we propose a new controller algorithm for Ryu platforms, which integrates the DNC and classifies both TCP and UDP flows in real-time. Based on the evaluations, an improvement in latency performance has been demonstrated, where analysing a packet, controller processing time takes on an average of 10\u2009\u00b5s. This study will certainly serve to further research on optimising SDN and QoS.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2070689827",
                    "name": "Pritom Kumar Mondal"
                },
                {
                    "authorId": "2123237416",
                    "name": "Lizeth Patricia Aguirre Sanchez"
                },
                {
                    "authorId": "2090511185",
                    "name": "Emmanuele Benedetto"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "1697293",
                    "name": "M. Guo"
                }
            ]
        },
        {
            "paperId": "e194fc8e1cd62bcf75a6b491d3790ee282689a76",
            "title": "Forecasting popularity of news article by title analyzing with BN-LSTM network",
            "abstract": "In recent years, predicting the popularity of articles in the news has become a more urgent task for authors, online resources and advertisers. In the order of this task, we propose a new method based on the Online Deep Neural network with Bottleneck compression, what predicts the article popularity with only its headline. The proposed methodology evaluated on the Chinese and Russian language-based datasets with over than 800 000 samples in total. We describe the challenges and solutions related to the popularity prediction and the headline analysis. We show that the provided method can reach acceptable results even with different languages, news source popularity dynamics.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2064382607",
                    "name": "Anton Voronov"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "2070689827",
                    "name": "Pritom Kumar Mondal"
                }
            ]
        },
        {
            "paperId": "e62d039b731f8d74f1798ebdc69effb3ea7cef85",
            "title": "DR Refresh: Releasing DRAM Potential by Enabling Read Accesses Under Refresh",
            "abstract": "Emerging data analytic workloads such as graph processing, neural network and edge data preprocesing desire efficient memory read operations. Unfortunately, due to the necessity of dynamic refresh, modern DRAM systems have to stall access during refresh cycles. As DRAM device density continues to grow, refresh operations can be a crucial throughput bottleneck. To fully unleash memory access performance, we revisit conventional refresh mechanism and DRAM architecture. We propose DR refresh, a specific refresh mechanism that enable read and refresh operations to be done simultaneously. We devise DR DRAM, a specific memory hardware system that can efficiently deploy DR refresh. Unlike traditional refresh, DR explores device refresh that only refreshes a designated device at a time. Meanwhile, DR increases read efficiency by recovering the inaccessible data that resides on a device under refreshing. We also propose Hybrid Refresh Main Memory (HRMM) which can designate refresh schemes (DR or traditional refresh) in a specific memory space. We expect that our design can benefit many real-life tasks such as SPEC CPU2006, CNN, LLT and PageRank.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "66689602",
                    "name": "Yuhai Cao"
                },
                {
                    "authorId": "46651954",
                    "name": "Chao Li"
                },
                {
                    "authorId": "2152447086",
                    "name": "Jing Wang"
                },
                {
                    "authorId": "39986347",
                    "name": "Wei-gong Zhang"
                },
                {
                    "authorId": "1596812259",
                    "name": "Quan Chen"
                },
                {
                    "authorId": "1831521",
                    "name": "Jingwen Leng"
                },
                {
                    "authorId": "144340823",
                    "name": "Bin Yao"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "1697293",
                    "name": "M. Guo"
                }
            ]
        },
        {
            "paperId": "50841809c5e8537174c6bc7ab72b71be2e297248",
            "title": "Bandwidth and Locality Aware Task-stealing for Manycore Architectures with Bandwidth-Asymmetric Memory",
            "abstract": "Parallel computers now start to adopt Bandwidth-Asymmetric Memory architecture that consists of traditional DRAM memory and new High Bandwidth Memory (HBM) for high memory bandwidth. However, existing task schedulers suffer from low bandwidth usage and poor data locality problems in bandwidth-asymmetric memory architectures. To solve the two problems, we propose a Bandwidth and Locality Aware Task-stealing (BATS) system, which consists of an HBM-aware data allocator, a bandwidth-aware traffic balancer, and a hierarchical task-stealing scheduler. Leveraging compile-time code transformation and run-time data distribution, the data allocator enables HBM usage automatically without user interference. According to data access hotness, the traffic balancer migrates data to balance memory traffic across memory nodes proportional to their bandwidth. The hierarchical scheduler improves data locality at runtime without a priori program knowledge. Experiments on an Intel Knights Landing server that adopts bandwidth-asymmetric memory show that BATS reduces the execution time of memory-bound programs up to 83.5% compared with traditional task-stealing schedulers.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2112674260",
                    "name": "Han Zhao"
                },
                {
                    "authorId": "1596812259",
                    "name": "Quan Chen"
                },
                {
                    "authorId": "67155695",
                    "name": "Yuxian Qiu"
                },
                {
                    "authorId": "145217421",
                    "name": "Ming Wu"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "1831521",
                    "name": "Jingwen Leng"
                },
                {
                    "authorId": "46651287",
                    "name": "C. Li"
                },
                {
                    "authorId": "1697293",
                    "name": "M. Guo"
                }
            ]
        },
        {
            "paperId": "3dd531dc9dbbe24d8f00765632e6544ea5828657",
            "title": "The effect of kernel size of CNNs for lung nodule classification",
            "abstract": "Early detection in lung nodule will be helpful for lung cancer diagnosis. Computer-aided detection (CAD) system to automatic detection of pulmonary nodules is one of the most effective methods to decrease the burden on radiologists where they have to analyze a huge number of thoracic Computed Tomography (CT) scans to find out suspicious nodules. Lung nodule classification is crucial to implement a trustable lung nodule detection system. With the rapid development of deep learning in the field of object recognition, good performance on lung nodules classification has been achieved with Convolutional Neural Network (CNN). In this study, we propose three CNN architectures which are adapted to represent small, normal and large networks. We implement different CNN architectures with various kernel sizes to compare the performances of different combinations of CNN architectures and convolution kernels. The method is evaluated on the public Lung Image Database Consortium (LIDC) dataset of 1018 patients scans. The experiment shows the relation of convolution layers and kernel size has affection on the sensitivity of result in our model. The proposed method achieved a sensitivity of 88.22%\u223c94.18%.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": null,
                    "name": "Jing Chen"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                }
            ]
        },
        {
            "paperId": "46af33d700b2a7de749775d5dea16f2d13f8e34b",
            "title": "Electro: Toward QoS-Aware Power Management for Latency-Critical Applications",
            "abstract": "Reducing the energy consumption of datacenters is critical for their scalability, sustainability, and affordability when hosting latency-critical applications. Prior work has focused on single-thread applications with a stable workload. Recently, multi-thread latency-sensitive services are widely used in current datacenters. However, the variability of user queries in these service makes existing schemes ineffective, leading to either QoS violations or higher energy consumption. In order to address this new problem, we propose Electro, a machine learning enhanced dynamic power management system. Electro consists of a query duration predictor and a query consolidating engine. The duration predictor can precisely predict the duration of each user query in different scenarios based on the pre- trained duration models. At runtime, according to the predicted duration, the query consolidating engine consolidates user queries accordingly to maximize the duration of the CPU idle states while guaranteeing the QoS. The longer each idle state is, the deeper low-power sleep states can the CPU enter. Our evaluation results on the latest Intel Xeon V4 CPU show that Electro reduces the energy consumption by 81.8% on average compared with the default OS scheduling, and by 14.4% on average compared with the state-of-the-art technique while achieving the 95%-ile latency target for latency-sensitive applications.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1785605",
                    "name": "Yanchao Lu"
                },
                {
                    "authorId": "1596812259",
                    "name": "Quan Chen"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "1697293",
                    "name": "M. Guo"
                }
            ]
        },
        {
            "paperId": "548b55d13ceebcb1fbe8fa48e4b220c67132d80b",
            "title": "VMR: Virtual Machine Replacement Algorithm for QoS and Energy-Awareness in Cloud Data Centers",
            "abstract": "Virtualization is an important feature for cloud computing which has recently attracted considerable attention. In this work, we de-sign an energy efficient approach which aims to minimize the energy consumption without reducing the Quality of Service (QoS) for user\u2019s deadline requirements in cloud data centers. We also propose a VM re-placement algorithm for QoS and energy-awareness in cloud data cen-ters. We experimentally compare the performance of our algorithm with other the state-of-the-art algorithms (i.e., the random algorithm and the first fit algorithm). The experimental results show that our solution im-proves first fit and random algorithms by twice and four times respec-tively, and is also very energy efficient with reliable QoS.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "16166450",
                    "name": "Riaz Ali"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "102337738",
                    "name": "Xiangwei Huang"
                },
                {
                    "authorId": "2108123073",
                    "name": "Jingyu Zhang"
                },
                {
                    "authorId": "48163540",
                    "name": "Ahmad Ali"
                }
            ]
        },
        {
            "paperId": "c78de82727b2de2527730aa1eebeb826d5f838bf",
            "title": "CDFS: A Centralized Dynamic Flow Scheduling Mechanism in Data Centers",
            "abstract": "This paper aims to present CDFS, a centralized, dynamic flow schedule mechanism to maximize network throughput and to minimize the conflict between elephant and mice flows. CDFS schedules elephant flows with a scalable \u201cMax-min Weight\u201d scheme, which is adaptive to the available bandwidth of links. Meanwhile, switches route mice flows with multipath routing method. Experiment results show that CDFS improves network throughput by 10% when mice flows dominate the network traffic, and reduces mice flow latency by at least 60% compared to the standard OpenFlow model.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2108930251",
                    "name": "Jiong-jiong Li"
                },
                {
                    "authorId": "2115435772",
                    "name": "Yao Shen"
                },
                {
                    "authorId": "16166450",
                    "name": "Riaz Ali"
                },
                {
                    "authorId": "2108123073",
                    "name": "Jingyu Zhang"
                },
                {
                    "authorId": "2108899296",
                    "name": "Yu-chen Wang"
                }
            ]
        }
    ]
}