{
    "authorId": "2005670",
    "papers": [
        {
            "paperId": "fee6a48e689c279e07cb433065f9b6b5be8f5899",
            "title": "Neurosymbolic Methods for Rule Mining",
            "abstract": "In this chapter, we address the problem of rule mining, beginning with essential background information, including measures of rule quality. We then explore various rule mining methodologies, categorized into three groups: inductive logic programming, path sampling and generalization, and linear programming. Following this, we delve into neurosymbolic methods, covering topics such as the integration of deep learning with rules, the use of embeddings for rule learning, and the application of large language models in rule learning.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2315929760",
                    "name": "Agnieszka Lawrynowicz"
                },
                {
                    "authorId": "2315927099",
                    "name": "Luis Galarraga"
                },
                {
                    "authorId": "2315926321",
                    "name": "Mehwish Alam"
                },
                {
                    "authorId": "2315926326",
                    "name": "Berenice Jaulmes"
                },
                {
                    "authorId": "2052490699",
                    "name": "V\u00e1clav Zeman"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                }
            ]
        },
        {
            "paperId": "1a1d0c3bf2853ae2d4bb6ce3ad9b693259f39a58",
            "title": "Apriori Modified for Action Rules Mining",
            "abstract": "Action rule mining is an extension of classification rule learning, in which an action rule provides information similar to that of a standard classification rule and also suggests a course of action. Action rules are used to obtain counterfactual explanations. Rule-based action rule mining involves two separate steps: mining classification rules, typically using the Apriori algorithm, and a user-set minimum support and confidence threshold. The second step involves forming action rules from the classification rules by utilizing a second set of user-set parameters including the desired and undesired values of the target attribute, a list of stable attributes, and a list of flexible attributes. This two-stage approach is inefficient as the first step tends to generate excessively many classification rules, most of which can never form an action rule meeting the second set of parameters. This paper describes a modified Apriori algorithm for action rule mining (Action-Apriori), which includes an enhanced version of downward closure that further reduces the space of possible candidates by checking whether the candidate itemsets also meet the second set of user-set parameters. The benchmarks show a consistent reduction in the learning time of the new algorithm compared to the state-of-the-art ARAS algorithm. This paper is supplemented by an open-source implementation.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2068416501",
                    "name": "Lukas Sykora"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                }
            ]
        },
        {
            "paperId": "2efee6e56e90c4536aeb4aa125417cfb6e2d26b3",
            "title": "Explainability of Text Clustering Visualizations\u2014Twitter Disinformation Case Study",
            "abstract": "While text clustering methods have been available for decades, there is a paucity of material that would help practitioners with the choice and configuration of suitable algorithms and visualizations. In this article, we present a case study analyzing two disinformation datasets composed of tweets from the era of the 2016 United States Presidential Election. We use this to demonstrate steps for selecting the best configuration of the clustering algorithm and consequently conduct a user experiment for evaluating the comprehensibility of three alternate visualizations. A supplementary GitHub repository contains source code with examples.",
            "fieldsOfStudy": [
                "Computer Science",
                "Medicine"
            ],
            "authors": [
                {
                    "authorId": "2176382507",
                    "name": "Jiri Zarsky"
                },
                {
                    "authorId": "2176384664",
                    "name": "Gaetan Lopez"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                },
                {
                    "authorId": "3209052",
                    "name": "M. Potel"
                }
            ]
        },
        {
            "paperId": "d04989f660a7b587cbe7b91675cdd4c99f00e48a",
            "title": "High-Utility Action Rules Mining",
            "abstract": "High-utility action rule mining is a data mining task that aims to generate rules that provide the user with information on which actions might be the most profitable. The actions correspond to proposed changes in attribute values that may move some instances originally predicted to belong to the undesirable class to the desirable class. Through a list of conditions on attribute values, an action rule delimits a set of instances to which the proposed action applies to. If this change is implemented, the action rule implies that the classification of a part of these instances will change. The profit of an action rule is calculated based on a user-set utility table specifying the costs of actions and the benefit of moving an instance to the desirable class. In this paper, we report on a new extension of the ActionRules package written in Python that implements high-utility action rule mining.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2068416501",
                    "name": "Lukas Sykora"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                },
                {
                    "authorId": "2187456358",
                    "name": "Katerina Hrudkov\u00e1"
                }
            ]
        },
        {
            "paperId": "4946bb076c12aaabd77aeffad82755f091a7e732",
            "title": "RDFRules: Making RDF rule mining easier and even more efficient",
            "abstract": "AMIE+ is a state-of-the-art algorithm for learning rules from RDF knowledge graphs (KGs). Based on association rule learning, AMIE+ constituted a breakthrough in terms of speed on large data compared to the previous generation of ILP-based systems. In this paper we present several algorithmic extensions to AMIE+, which make it faster, and the support for data pre-processing and model post-processing, which provides a more comprehensive coverage of the linked data mining process than does the original AMIE+ implementation. The main contributions are related to performance improvement: (1) the top-k approach, which addresses the problem of combinatorial explosion often resulting from a hand-set minimum support threshold, (2) a grammar that allows to define fine-grained patterns reducing the size of the search space, and (3) a faster projection binding reducing the number of repetitive calculations. Other enhancements include the possibility to mine across multiple graphs, the support for discretization of continuous values, and the selection of the most representative rules using proven rule pruning and clustering algorithms. Benchmarks show reductions in mining time of up to several orders of magnitude compared to AMIE+. An open-source implementation is available under the name RDFRules at https://github.com/propi/rdfrules.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2052490699",
                    "name": "V\u00e1clav Zeman"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                },
                {
                    "authorId": "1740821",
                    "name": "V. Sv\u00e1tek"
                }
            ]
        },
        {
            "paperId": "01b345307fffb8249ded5dd7e922d5ce002dcbf9",
            "title": "Action Rules: Counterfactual Explanations in Python",
            "abstract": ". Action rule mining is an extension of the widely used task of learning classi\ufb01cation rules. In addition to information expressed in a standard classi\ufb01cation rule, an action rule suggests a course of action. If performed, this action will increase the probability that the class of the instance will change to the desired value. Such rule can either be interpreted as a recommendation for an action, or as a counterfactual explanation for the class assigned to the instance. In this paper, we report on a new implementation of action rules discovery that is available in Python (ActionRules package) and on a new experimental method for learning action rules from large datasets (RandomForestRules package), which is based on extraction of classi\ufb01cation rules from Random Forests. The paper can serve as a manual for using the created packages or as a guide for researchers who would like to extend them, providing also guide to action rule discovery. The text also includes performance evaluation of reduction trees, which speed up the mining process.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2068416501",
                    "name": "Lukas Sykora"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                }
            ]
        },
        {
            "paperId": "716ac6fef87d047e8631de5b9d2babbd124a65d9",
            "title": "Advances in Machine Learning for the Behavioral Sciences",
            "abstract": "The areas of machine learning and knowledge discovery in databases have considerably matured in recent years. In this article, we briefly review recent developments as well as classical algorithms that stood the test of time. Our goal is to provide a general introduction into different tasks such as learning from tabular data, behavioral data, or textual data, with a particular focus on actual and potential applications in behavioral sciences. The supplemental appendix to the article also provides practical guidance for using the methods by pointing the reader to proven software implementations. The focus is on R, but we also cover some libraries in other programming languages as well as systems with easy-to-use graphical interfaces.",
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "authors": [
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                },
                {
                    "authorId": "5252377",
                    "name": "\u0160. Bahn\u00edk"
                },
                {
                    "authorId": "1747752",
                    "name": "Johannes F\u00fcrnkranz"
                }
            ]
        },
        {
            "paperId": "9b369a1107b996aa799d07b095ee0ae1c4b8067f",
            "title": "Tuning Hyperparameters of Classification Based on Associations (CBA)",
            "abstract": "Classification models composed of crisp rules provide excellent explainability. The limitation of many conventional rule learning algorithms is the separate-andconquer strategy, which may be slow on large data. Association Rule Classifiers (ARC) is an alternative approach that can be very fast on massive datasets but is highly susceptible to the correct choice of metaparameters. Most existing ARC algorithms use default thresholds of 50% for minimum confidence and 1% minimum support, which can result in excessively long rule generation or underperforming models. Due to the high-costs that can be associated with evaluation of single combination, it is impractical to use standard metaparameter optimization approaches. In this paper, we introduce two variant threshold tuning algorithms specifically designed for ARC. Evaluation on 22 standard UCI datasets shows promising results in terms of model size and accuracy in comparison with the default thresholds. The implementation of the proposed algorithms is made available in R packages rCBA and arc, which are available in the CRAN repository.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                },
                {
                    "authorId": "2736681",
                    "name": "Jaroslav Kucha\u0159"
                }
            ]
        },
        {
            "paperId": "a846307dd97f6e61fa362068857ee8ddaaec797b",
            "title": "PyIDS - Python Implementation of Interpretable Decision Sets Algorithm by Lakkaraju et al, 2016",
            "abstract": "Interpretable Decision Sets (IDS) by Lakkaraju et al, 2016 belongs to group of algorithms that perform classification based on association rules. Unlike most previous approaches, IDS provides means for balancing interpretability with prediction performance through user-set weights. Relying on submodular optimization, IDS is relatively computationally intensive. In this paper, we report on a new implementation of IDS, which is up to several orders of magnitude faster than the reference implementation released by Lakkaraju et al, 2016. The extensions to the reference implementation also include initial support for interoperability with other rule-based systems through the RuleML specification.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "34971901",
                    "name": "J. Filip"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                }
            ]
        },
        {
            "paperId": "d86355e3ac4d55301cdd5f3a3ed9114ad3298236",
            "title": "Associative Classification in R: arc, arulesCBA, and rCBA",
            "abstract": "Several methods for creating classifiers based on rules discovered via association rule mining have been proposed in the literature. These classifiers are called associative classifiers and the best-known algorithm is Classification Based on Associations (CBA). Interestingly, only very few implementations are available and, until recently, no implementation was available for R. Now, three packages provide CBA. This paper introduces associative classification, the CBA algorithm, and how it can be used in R. A comparison of the three packages is provided to give the potential user an idea about the advantages of each of the implementations. We also show how the packages are related to the existing infrastructure for association rule mining already available in R.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3351764",
                    "name": "Michael Hahsler"
                },
                {
                    "authorId": "2060080583",
                    "name": "I. Johnson"
                },
                {
                    "authorId": "2005670",
                    "name": "Tom\u00e1\u0161 Kliegr"
                },
                {
                    "authorId": "2736681",
                    "name": "Jaroslav Kucha\u0159"
                }
            ]
        }
    ]
}