{
    "authorId": "1928425942",
    "papers": [
        {
            "paperId": "1a6c3dfb4551e4af82a4138684df562bfca21f54",
            "title": "Generative AI-Based Effective Malware Detection for Embedded Computing Systems",
            "abstract": "One of the pivotal security threats for the embedded computing systems is malicious software a.k.a malware. With efficiency and efficacy, Machine Learning (ML) has been widely adopted for malware detection in recent times. Despite being efficient, the existing techniques require a tremendous number of benign and malware samples for training and modeling an efficient malware detector. Furthermore, such constraints limit the detection of emerging malware samples due to the lack of sufficient malware samples required for efficient training. To address such concerns, we introduce a code-aware data generation technique that generates multiple mutated samples of the limitedly seen malware by the devices. Loss minimization ensures that the generated samples closely mimic the limitedly seen malware and mitigate the impractical samples. Such developed malware is further incorporated into the training set to formulate the model that can efficiently detect the emerging malware despite having limited exposure. The experimental results demonstrates that the proposed technique achieves an accuracy of 90% in detecting limitedly seen malware, which is approximately 3x more than the accuracy attained by state-of-the-art techniques.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2114853982",
                    "name": "Sreenitha Kasarapu"
                },
                {
                    "authorId": "1474544063",
                    "name": "Sanket Shukla"
                },
                {
                    "authorId": "1474539078",
                    "name": "Rakibul Hassan"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "2389278",
                    "name": "Sai Manoj Pudukotai Dinakarrao"
                }
            ]
        },
        {
            "paperId": "263d90a9a2aca3ebc5ec7b8af91cee2a843fff33",
            "title": "Automated Hardware Logic Obfuscation Framework Using GPT",
            "abstract": "Obfuscation stands as a promising solution for safe-guarding hardware intellectual property (IP) against a spectrum of threats including reverse engineering, IP piracy, and tampering. In this paper, we introduce Obfus-chat, a novel framework leveraging Generative Pre-trained Transformer (GPT) models to automate the obfuscation process. The proposed framework accepts hardware design netlists and key sizes as inputs, and autonomously generates obfuscated code tailored to enhance security. To evaluate the effectiveness of our approach, we employ the Trust-Hub Obfuscation Benchmark for comparative analysis. We employed SAT attacks to assess the security of the design, along with functional verification procedures to ensure that the obfuscated design remains consistent with the original. Our results demonstrate the efficacy and efficiency of the proposed framework in fortifying hardware IP against potential threats, thus providing a valuable contribution to the field of hardware security.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2161966302",
                    "name": "B. S. Latibari"
                },
                {
                    "authorId": "2302322223",
                    "name": "Sujan Ghimire"
                },
                {
                    "authorId": "2000958833",
                    "name": "Muhtasim Alam Chowdhury"
                },
                {
                    "authorId": "12539086",
                    "name": "Najmeh Nazari"
                },
                {
                    "authorId": "2167580607",
                    "name": "Kevin Immanuel Gubbi"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "2276023224",
                    "name": "Soheil Salehi"
                }
            ]
        },
        {
            "paperId": "2b7c43c12f3a6024f2e8d6dfea597ef7f830d61e",
            "title": "Securing On-Chip Learning: Navigating Vulnerabilities and Potential Safeguards in Spiking Neural Network Architectures",
            "abstract": "On-chip learning is the process of training or updating machine learning models directly on specialized hardware. This approach differs from traditional machine learning, which typically conducts training on external computing resources like Central Processing Units (CPUs) or Graphics Processing Units (GPUs). On-chip learning offers several advantages, including reduced latency, improved energy efficiency, enhanced privacy, and adaptability. Consequently, it holds great promise for enabling intelligent decision-making and adaptability in resource-constrained edge and IoT devices while addressing privacy concerns. In Spiking Neural Network (SNN), on-chip learning is enabled by adjusting synaptic weights, allowing the network\u2019s behavior to dynamically align with desired outcomes. However, this adaptability may introduce potential security vulnerabilities. Unmitigated security risks in on-chip learning can lead to various threats, including data leaks, unauthorized access, and even adversarial manipulation of the learning process. This manuscript aims to provide a comprehensive overview of the security risks associated with on-chip learning, with a focus on potential vulnerabilities within the SNN architecture. We will explore real-world scenarios where these vulnerabilities can be exploited and outline protective measures and mitigation strategies to address these security concerns.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "12539086",
                    "name": "Najmeh Nazari"
                },
                {
                    "authorId": "2167580607",
                    "name": "Kevin Immanuel Gubbi"
                },
                {
                    "authorId": "2161966302",
                    "name": "B. S. Latibari"
                },
                {
                    "authorId": "2000958833",
                    "name": "Muhtasim Alam Chowdhury"
                },
                {
                    "authorId": "65927400",
                    "name": "Chongzhou Fang"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "2951001",
                    "name": "S. Rafatirad"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "2276023224",
                    "name": "Soheil Salehi"
                }
            ]
        },
        {
            "paperId": "84e97bfb233d2938d988339e9185429bb5a85d40",
            "title": "SpecScope: Automating Discovery of Exploitable Spectre Gadgets on Black-Box Microarchitectures",
            "abstract": "Transient execution attacks pose information leakage risks in current systems. Disabling speculative execution, though mitigating the issue, results in significant performance loss. Accurate identification of vulnerable gadgets is essential for balancing security and performance. However, uncovering all covert channels is challenging due to complex microarchitectural analysis. This paper introduces SpecScope, a framework for automating the detection of Spectre gadgets in code using a black-box microarchitecture approach. SpecScope focuses on contention between transient and non-transient instructions to precisely identify and reduce false-positive Spectre gadgets, minimizing mitigation overhead. Tested on public libraries, SpecScope outperforms existing methods, reducing False-Positive rates by 8.9% and increasing True-Positive rates by 10.4%.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "12539086",
                    "name": "Najmeh Nazari"
                },
                {
                    "authorId": "2091864570",
                    "name": "Behnam Omidi"
                },
                {
                    "authorId": "65927400",
                    "name": "Chongzhou Fang"
                },
                {
                    "authorId": "30521811",
                    "name": "Hosein Mohammadi Makrani"
                },
                {
                    "authorId": "2951001",
                    "name": "S. Rafatirad"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "2874577",
                    "name": "Khaled N. Khasawneh"
                }
            ]
        },
        {
            "paperId": "c5bdf8ab7021d65a8c8706c7a3921c2b52118aac",
            "title": "IRET: Incremental Resolution Enhancing Transformer",
            "abstract": "In our research paper, we introduce a revolutionary approach to designing energy-aware dynamically prunable Vision Transformers for use in edge applications. Our solution denoted as Incremental Resolution Enhancing Transformer (IRET), works by the sequential sampling of the input image. However, in our case, the embedding size of input tokens is considerably smaller than prior-art solutions. This embedding is used in the first few layers of the IRET vision transformer until a reliable attention matrix is formed. Then the attention matrix is used to sample additional information using a learnable 2D lifting scheme only for important tokens and IRET drops the tokens receiving low attention scores. Hence, as the model pays more attention to a subset of tokens for its task, its focus and resolution also increase. This incremental attention-guided sampling of input and dropping of unattended tokens allow IRET to significantly prune its computation tree on demand. By controlling the threshold for dropping unattended tokens and increasing the focus of attended ones, we can train a model that dynamically trades off complexity for accuracy. This is especially useful for edge devices, where accuracy and complexity could be dynamically traded based on factors such as battery life, reliability, etc.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2220651224",
                    "name": "Banafsheh Saber Latibari"
                },
                {
                    "authorId": "2276023224",
                    "name": "Soheil Salehi"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                }
            ]
        },
        {
            "paperId": "d6fa21b0b8ce6d484a0c614897e489c7d5b304ac",
            "title": "Optimized and Automated Secure IC Design Flow: A Defense-in-Depth Approach",
            "abstract": "The globalization of the manufacturing process and the supply chain for electronic hardware has been driven by the need to maximize profitability while lowering risk in a technologically advanced silicon sector. However, many hardware IPs\u2019 security features have been broken because of the rise in successful hardware attacks. Existing security efforts frequently ignore numerous dangers in favor of fixing a particular vulnerability. This inspired the development of a unique method that uses emerging spin-based devices to obfuscate circuitry to secure hardware intellectual property (IP) during fabrication and the supply chain. We propose an Optimized and Automated Secure IC (OASIC) Design Flow, a defense-in-depth approach that can minimize overhead while maximizing security. Our EDA tool flow uses a dynamic obfuscation method that employs dynamic lockboxes, which include switch boxes and magnetic random access memory (MRAM)-based look-up tables (LUT) while offering minimal overhead and being flexible and resilient against modern SAT-based attacks and power side-channel attacks. An EDA tool flow for optimized lockbox insertion is also developed to generate SAT-resilient design netlists with the least power and area overhead. PPA metrics and security (SAT attack time) are provided to the designer for each lockbox insertion run. A verification methodology is provided to verify locked and unlocked designs for functional correctness. Finally, we use ISCAS\u201985 benchmarks to show that the EDA tool flow provides a secure hardware netlist with maximum security while considering power and area constraints. Our results indicate that the proposed OASIC design flow can maximize security while incurring less than 15% area overhead and maintaining a similar power footprint compared to the original design. OASIC design flow demonstrates improved performance as design size increases, which demonstrates the scalability of the proposed approach.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2167580607",
                    "name": "Kevin Immanuel Gubbi"
                },
                {
                    "authorId": "2161966302",
                    "name": "B. S. Latibari"
                },
                {
                    "authorId": "2000958833",
                    "name": "Muhtasim Alam Chowdhury"
                },
                {
                    "authorId": "145298683",
                    "name": "A. Jalilzadeh"
                },
                {
                    "authorId": "7783772",
                    "name": "E. Y. Hamedani"
                },
                {
                    "authorId": "2201322543",
                    "name": "Satareh Rafatirad"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "2276023224",
                    "name": "Soheil Salehi"
                }
            ]
        },
        {
            "paperId": "ffe06d308ab1df385d949c9a8554ed7000ae7a47",
            "title": "FFCL: Forward-Forward Net with Cortical Loops, Training and Inference on Edge Without Backpropogation",
            "abstract": "The Forward-Forward Learning (FFL) algorithm is a recently proposed solution for training neural networks without needing memory-intensive backpropagation. During training, labels accompany input data, classifying them as positive or negative inputs. Each layer learns its response to these inputs independently. In this study, we enhance the FFL with the following contributions: 1) We optimize label processing by segregating label and feature forwarding between layers, enhancing learning performance. 2) By revising label integration, we enhance the inference process, reduce computational complexity, and improve performance. 3) We introduce feedback loops akin to cortical loops in the brain, where information cycles through and returns to earlier neurons, enabling layers to combine complex features from previous layers with lower-level features, enhancing learning efficiency.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2213565909",
                    "name": "Ali Karkehabadi"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                }
            ]
        },
        {
            "paperId": "3b49d2b59b7f2a486c4d1d9918cb0d6b8174ff00",
            "title": "Securing AI Hardware: Challenges in Detecting and Mitigating Hardware Trojans in ML Accelerators",
            "abstract": "Artificial Intelligence (AI) has transformed multiple industries, creating specialized hardware for AI/Machine Learning (ML) workloads. These hardware accelerators have become prevalent in healthcare, scientific computing, space ex-ploration, the military, and consumer electronics. However, using AI hardware in critical systems can pose a significant risk due to potential attack vectors that malicious entities can exploit. One such vulnerability is the insertion of Hardware Trojans (HT) into an Integrated Circuit (IC), which can result in catastrophic consequences. Detecting and mitigating HTs in AI hardware can be a challenge due to the complexity of the hardware and ML algorithms. Moreover, adversarial HT attacks can also degrade model accuracy, and detecting the cause of model accuracy loss is difficult. Thus, developing effective techniques to detect and mitigate HT attacks in AI hardware is crucial. With the added risk of HT insertion by unknown attack vectors, addressing the challenge of mitigating HTs in AI hardware is vital. This paper presents a comprehensive review of the potential threat of Hardware Trojans (HTs) in AI/ML hardware accelerators, provides potential mitigation approaches for securing AI/ML accelerators, and highlights open challenges in this field.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2167580607",
                    "name": "Kevin Immanuel Gubbi"
                },
                {
                    "authorId": "2282000891",
                    "name": "Inderpreet Kaur"
                },
                {
                    "authorId": "2281994702",
                    "name": "Abdallah Hashem"
                },
                {
                    "authorId": "2389278",
                    "name": "Sai Manoj Pudukotai Dinakarrao"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "2276023224",
                    "name": "Soheil Salehi"
                }
            ]
        },
        {
            "paperId": "49cc1b02f059a788ad5cf830cced814cf868409f",
            "title": "Hardware Trojan Detection Using Machine Learning: A Tutorial",
            "abstract": "With the growth and globalization of IC design and development, there is an increase in the number of Designers and Design houses. As setting up a fabrication facility may easily cost upwards of $20 billion, costs for advanced nodes may be even greater. IC design houses that cannot produce their chips in-house have no option but to use external foundries that are often in other countries. Establishing trust with these external foundries can be a challenge, and these foundries are assumed to be untrusted. The use of these untrusted foundries in the global semiconductor supply chain has raised concerns about the security of the fabricated ICs targeted for sensitive applications. One of these security threats is the adversarial infestation of fabricated ICs with a Hardware Trojan (HT). An HT can be broadly described as a malicious modification to a circuit to control, modify, disable, or monitor its logic. Conventional VLSI manufacturing tests and verification methods fail to detect HT due to the different and un-modeled nature of these malicious modifications. Current state-of-the-art HT detection methods utilize statistical analysis of various side-channel information collected from ICs, such as power analysis, power supply transient analysis, regional supply current analysis, temperature analysis, wireless transmission power analysis, and delay analysis. To detect HTs, most methods require a Trojan-free reference golden IC. A signature from these golden ICs is extracted and used to detect ICs with HTs. However, access to a golden IC is not always feasible. Thus, a mechanism for HT detection is sought that does not require the golden IC. Machine Learning (ML) approaches have emerged to be extremely useful in helping eliminate the need for a golden IC. Recent works on utilizing ML for HT detection have been shown to be promising in achieving this goal. Thus, in this tutorial, we will explain utilizing ML as a solution to the challenge of HT detection. Additionally, we will describe the Electronic Design Automation (EDA) tool flow for automating ML-assisted HT detection. Moreover, to further discuss the benefits of ML-assisted HT detection solutions, we will demonstrate a Neural Network (NN)-assisted timing profiling method for HT detection. Finally, we will discuss the shortcomings and open challenges of ML-assisted HT detection methods.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2167580607",
                    "name": "Kevin Immanuel Gubbi"
                },
                {
                    "authorId": "2220651224",
                    "name": "Banafsheh Saber Latibari"
                },
                {
                    "authorId": "146196900",
                    "name": "A. Srikanth"
                },
                {
                    "authorId": "46205657",
                    "name": "T. Sheaves"
                },
                {
                    "authorId": "2201331702",
                    "name": "Sayed Arash Beheshti-Shirazi"
                },
                {
                    "authorId": "2201329909",
                    "name": "S. Pd"
                },
                {
                    "authorId": "2201322543",
                    "name": "Satareh Rafatirad"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "39754382",
                    "name": "Soheil Salehi"
                }
            ]
        },
        {
            "paperId": "52e02f06cda5fde696bf76494f9b8655cfeff574",
            "title": "Advanced Reinforcement Learning Solution for Clock Skew Engineering: Modified Q-Table Update Technique for Peak Current and IR Drop Minimization",
            "abstract": "This paper discloses a Reinforcement Learning (RL) solution implemented to decrease the peak current by alteration of the clock skews. Clock skews are elements of the clock network calculated throughout the Clock Tree Synthesis (CTS) phase of physical design. Initially, the physical design tools targeted obtaining a balanced clock tree and decreasing the clock skew as low as possible. The resulting zero-skew clock tree caused a drastic increase in the current demand for the battery. The proposed solutions in this paper comprise a Reinforcement Learning agent that maneuvers throughout the design and updates the clock arrival time of each register by either adding, removing, or not changing it. The agent\u2019s end game is to maximize the clock arrival distribution of the design. The Reinforcement learning solution allows the exploration and optimization of the clock tree synthesis process beyond the heuristic algorithms employed by traditional Electronic Design Automation (EDA) tools. This paper contains two experiments using the Reinforcement Learning algorithm. The first experiment results indicate a 35% reduction in peak current and a significant reduction in IR decrease (from package to transistor) in the chosen benchmarks. The second experiment modified the Q-table renewing technique, which resulted in another additional 10% improvement compared to the first experiment. In both experiments, the agent traverses the environment and explores different options despite creating timing violations and obtaining a substantial negative feedback reward for the actions taken. However, the timing violation fixed later results in the agent obtaining a future reward for modifying the clock arrival time of other registers. The overall process resulted in the broader spread of clock arrival distribution.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2113627697",
                    "name": "Sayed Aresh Beheshti-Shirazi"
                },
                {
                    "authorId": "12539086",
                    "name": "Najmeh Nazari"
                },
                {
                    "authorId": "2167580607",
                    "name": "Kevin Immanuel Gubbi"
                },
                {
                    "authorId": "2161966302",
                    "name": "B. S. Latibari"
                },
                {
                    "authorId": "2951001",
                    "name": "S. Rafatirad"
                },
                {
                    "authorId": "1747542",
                    "name": "H. Homayoun"
                },
                {
                    "authorId": "1928425942",
                    "name": "Avesta Sasan"
                },
                {
                    "authorId": "2389278",
                    "name": "Sai Manoj Pudukotai Dinakarrao"
                }
            ]
        }
    ]
}