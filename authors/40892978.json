{
    "authorId": "40892978",
    "papers": [
        {
            "paperId": "19c83d5ad06904b182f1aa215dcd4b4c5b1a619c",
            "title": "Finding Densest Subgraphs with Edge-Color Constraints",
            "abstract": "We consider a variant of the densest subgraph problem in networks with single or multiple edge attributes. For example, in a social network, the edge attributes may describe the type of relationship between users, such as friends, family, or acquaintances, or different types of communication. For conceptual simplicity, we view the attributes as edge colors. The new problem we address is to find a diverse densest subgraph that fulfills given requirements on the numbers of edges of specific colors. When searching for a dense social network community, our problem will enforce the requirement that the community is diverse according to criteria specified by the edge attributes. We show that the decision versions for finding exactly, at most, and at least h colored edges densest subgraph, where h is a vector of color requirements, are NP-complete, for already two colors. For the problem of finding a densest subgraph with at least h colored edges, we provide a linear-time constant-factor approximation algorithm when the input graph is sparse. On the way, we introduce the related at least h (non-colored) edges densest subgraph problem, show its hardness, and also provide a linear-time constant-factor approximation. In our experiments, we demonstrate the efficacy and efficiency of our new algorithms.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "2284134705",
                    "name": "Honglian Wang"
                },
                {
                    "authorId": "1682878",
                    "name": "A. Gionis"
                }
            ]
        },
        {
            "paperId": "5743e30083a80fbb48bc3088f963920ef31ccde1",
            "title": "Mining Temporal Networks",
            "abstract": "In World Wide Web (WWW) systems, networks (or graphs) serve as a fundamental tool for representing, analyzing, and understanding linked data, providing significant insights into the underlying systems. Naturally, most real-world systems have inherent temporal information, e.g., interactions in social networks occur at specific moments in time and last for a certain period. Temporal networks, i.e., network data modeling temporal information, enable novel and fundamental discoveries about the underlying systems they model, otherwise not captured by static networks that ignore such temporal information. In this tutorial, we present state-of-the-art models and algorithmic techniques for mining temporal networks that can provide precious insights into a plethora of web-related applications. We present how temporal networks can be used to extract novel information, especially in web-related network data, and highlight the challenges that arise when modeling temporal information compared to traditional static network-based approaches. We first overview different temporal network models. We then show how such powerful models can be leveraged to extract novel insights through suitable mining primitives. In particular, we present recent advances addressing most foundational problems for temporal network mining---ranging from the computation of temporal centrality measures, temporal motif counting, and temporal communities to bursty events and anomaly detection.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1682878",
                    "name": "A. Gionis"
                },
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "1581930800",
                    "name": "Ilie Sarpe"
                }
            ]
        },
        {
            "paperId": "5c3ffaca2eb04c5b95e728cf939d1173b0ba13c1",
            "title": "Consistent Strong Triadic Closure in Multilayer Networks",
            "abstract": "Social network users are commonly connected to hundreds or even thousands of other users. However, these ties are not all of equal strength; for example, we often are connected to good friends or family members as well as acquaintances. Inferring the tie strengths is an essential task in social network analysis. Common approaches classify the ties into strong and weak edges based on the network topology using the strong triadic closure (STC). The STC states that if for three nodes, $\\textit{A}$, $\\textit{B}$, and $\\textit{C}$, there are strong ties between $\\textit{A}$ and $\\textit{B}$, as well as $\\textit{A}$ and $\\textit{C}$, there has to be a (weak or strong) tie between $\\textit{B}$ and $\\textit{C}$. Moreover, a variant of the STC called STC+ allows adding new weak edges to obtain improved solutions. Recently, the focus of social network analysis has been shifting from single-layer to multilayer networks due to their ability to represent complex systems with multiple types of interactions or relationships in multiple social network platforms like Facebook, LinkedIn, or X (formerly Twitter). However, straightforwardly applying the STC separately to each layer of multilayer networks usually leads to inconsistent labelings between layers. Avoiding such inconsistencies is essential as they contradict the idea that tie strengths represent underlying, consistent truths about the relationships between users. Therefore, we adapt the definitions of the STC and STC+ for multilayer networks and provide ILP formulations to solve the problems exactly. Solving the ILPs is computationally costly; hence, we additionally provide an efficient 2-approximation for the STC and a 6-approximation for the STC+ minimization variants. The experiments show that, unlike standard approaches, our new highly efficient algorithms lead to consistent strong/weak labelings of the multilayer network edges.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "2243335277",
                    "name": "Athanasios L. Konstantinidis"
                },
                {
                    "authorId": "2321179314",
                    "name": "Fariba Ranjbar"
                },
                {
                    "authorId": "1688493",
                    "name": "G. Italiano"
                }
            ]
        },
        {
            "paperId": "600590567aff75a7348a9509dc8ef65d912fe846",
            "title": "A Higher-Order Temporal H-Index for Evolving Networks",
            "abstract": "The H-index of a node in a static network is the maximum value h such that at least h of its neighbors have a degree of at least h. Recently, a generalized version, the n-th order H-index, was introduced, allowing to relate degree centrality, H-index, and the k-core of a node. We extend the n-th order H-index to temporal networks and define corresponding temporal centrality measures and temporal core decompositions. Our n-th order temporal H-index respects the reachability in temporal networks leading to node rankings, which reflect the importance of nodes in spreading processes. We derive natural decompositions of temporal networks into subgraphs with strong temporal coherence. We analyze a recursive computation scheme and develop a highly scalable streaming algorithm. Our experimental evaluation demonstrates the efficiency of our algorithms and the conceptional validity of our approach. Specifically, we show that the n-th order temporal H-index is a strong heuristic for identifying possible super-spreaders in evolving social networks and detects temporally well-connected components.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "1810077",
                    "name": "Nils M. Kriege"
                },
                {
                    "authorId": "1724469",
                    "name": "Petra Mutzel"
                }
            ]
        },
        {
            "paperId": "e0008177cf5d78a9a231e98723823c169f517400",
            "title": "Temporal Network Core Decomposition and Community Search",
            "abstract": "We introduce a new generalization of the $k$-core decomposition for temporal networks that respects temporal dynamics. In contrast to the standard definition and previous core-like decompositions for temporal graphs, our $(k,\\Delta)$-core decomposition is an edge-based decomposition founded on the new notion of $\\Delta$-degree. The $\\Delta$-degree of an edge is defined as the minimum number of edges incident to one of its endpoints that have a temporal distance of at most~$\\Delta$. Moreover, we define a new notion of temporal connectedness leading to an efficiently computable equivalence relation between so-called $\\Delta$-connected components of the temporal network. We provide efficient algorithms for the $(k,\\Delta)$-core decomposition and $\\Delta$-connectedness, and apply them to solve community search problems, where we are given a query node and want to find a densely connected community containing the query node. Such a community is an edge-induced temporal subgraph representing densely connected groups of nodes with frequent interactions, which also captures changes over time. We provide an efficient algorithm for community search for the case without restricting the number of nodes. If the number of nodes is restricted, we show that the decision version is NP-complete. In our evaluation, we show how in a real-world social network, the inner $(k,\\Delta)$-cores contain only the spreading of misinformation and that the $\\Delta$-connected components of the cores are highly edge-homophilic, i.e., the majorities of the edges in the $\\Delta$-connected components represent either misinformation or fact-checking. Moreover, we demonstrate how our algorithms for $\\Delta$-community search successfully and efficiently identify informative structures in collaboration networks.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "2243335277",
                    "name": "Athanasios L. Konstantinidis"
                },
                {
                    "authorId": "1688493",
                    "name": "G. Italiano"
                }
            ]
        },
        {
            "paperId": "36ee94a58e58621b21414c6dfdfa65a18b924efa",
            "title": "Inferring Tie Strength in Temporal Networks",
            "abstract": "Inferring tie strengths in social networks is an essential task in social network analysis. Common approaches classify the ties as wea} and strong ties based on the strong triadic closure (STC). The STC states that if for three nodes, $A$, $B$, and $C$, there are strong ties between $A$ and $B$, as well as $A$ and $C$, there has to be a (weak or strong) tie between $B$ and $C$. A variant of the STC called STC+ allows adding a few new weak edges to obtain improved solutions. So far, most works discuss the STC or STC+ in static networks. However, modern large-scale social networks are usually highly dynamic, providing user contacts and communications as streams of edge updates. Temporal networks capture these dynamics. To apply the STC to temporal networks, we first generalize the STC and introduce a weighted version such that empirical a priori knowledge given in the form of edge weights is respected by the STC. Similarly, we introduce a generalized weighted version of the STC+. The weighted STC is hard to compute, and our main contribution is an efficient 2-approximation (resp. 3-approximation) streaming algorithm for the weighted STC (resp. STC+) in temporal networks. As a technical contribution, we introduce a fully dynamic $k$-approximation for the minimum weighted vertex cover problem in hypergraphs with edges of size $k$, which is a crucial component of our streaming algorithms. An empirical evaluation shows that the weighted STC leads to solutions that better capture the a priori knowledge given by the edge weights than the non-weighted STC. Moreover, we show that our streaming algorithm efficiently approximates the weighted STC in real-world large-scale social networks.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "38685168",
                    "name": "A. Konstantinidis"
                },
                {
                    "authorId": "1688493",
                    "name": "G. Italiano"
                }
            ]
        },
        {
            "paperId": "51703680b994673c830ea6f6fa03a833df45b83a",
            "title": "TGLib: An Open-Source Library for Temporal Graph Analysis",
            "abstract": "We initiate an open-source library for the efficient analysis of temporal graphs. We consider one of the standard models of dynamic networks in which each edge has a discrete timestamp and transition time. Recently there has been a massive interest in analyzing such temporal graphs. Common computational data mining and analysis tasks include the computation of temporal distances, centrality measures, and network statistics like topological overlap, burstiness, or temporal diameter. To fulfill the increasing demand for efficient and easy-to-use imple-mentations of temporal graph algorithms, we introduce the open-source library Tglib,which integrates efficient data structures and algorithms for temporal graph analysis. Tglibis highly efficient and versatile, providing simple and convenient C++ and Python interfaces, targeting computer scientists, practitioners, students, and the (temporal) network research community.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "1724469",
                    "name": "Petra Mutzel"
                }
            ]
        },
        {
            "paperId": "a04a24ba24818215e06586c7d0a216808e8e65ba",
            "title": "A Temporal Graphlet Kernel for Classifying Dissemination in Evolving Networks",
            "abstract": "We introduce the \\emph{temporal graphlet kernel} for classifying dissemination processes in labeled temporal graphs. Such dissemination processes can be spreading (fake) news, infectious diseases, or computer viruses in dynamic networks. The networks are modeled as labeled temporal graphs, in which the edges exist at specific points in time, and node labels change over time. The classification problem asks to discriminate dissemination processes of different origins or parameters, e.g., infectious diseases with different infection probabilities. Our new kernel represents labeled temporal graphs in the feature space of temporal graphlets, i.e., small subgraphs distinguished by their structure, time-dependent node labels, and chronological order of edges. We introduce variants of our kernel based on classes of graphlets that are efficiently countable. For the case of temporal wedges, we propose a highly efficient approximative kernel with low error in expectation. We show that our kernels are faster to compute and provide better accuracy than state-of-the-art methods.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "1810077",
                    "name": "Nils M. Kriege"
                },
                {
                    "authorId": "2082438098",
                    "name": "Claudeth Jordan"
                },
                {
                    "authorId": "1724469",
                    "name": "Petra Mutzel"
                }
            ]
        },
        {
            "paperId": "e938ec0f8f90819dd4f38ac31b7fc3d9fa7b92e8",
            "title": "Temporal Walk Centrality: Ranking Nodes in Evolving Networks",
            "abstract": "We propose the Temporal Walk Centrality, which quantifies the importance of a node by measuring its ability to obtain and distribute information in a temporal network. In contrast to the widely-used betweenness centrality, we assume that information does not necessarily spread on shortest paths but on temporal random walks that satisfy the time constraints of the network. We show that temporal walk centrality can identify nodes playing central roles in dissemination processes that might not be detected by related betweenness concepts and other common static and temporal centrality measures. We propose exact and approximation algorithms with different running times depending on the properties of the temporal network and parameters of our new centrality measure. A technical contribution is a general approach to lift existing algebraic methods for counting walks in static networks to temporal networks. Our experiments on real-world temporal networks show the efficiency and accuracy of our algorithms. Finally, we demonstrate that the rankings by temporal walk centrality often differ significantly from those of other state-of-the-art temporal centralities.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "1724469",
                    "name": "Petra Mutzel"
                },
                {
                    "authorId": "1810077",
                    "name": "Nils M. Kriege"
                }
            ]
        },
        {
            "paperId": "7c27c0f4c9598b9c1d05e26acbced8cd78ecb37a",
            "title": "An Index for Single Source All Destinations Distance Queries in Temporal Graphs",
            "abstract": "Temporal closeness is a generalization of the classical closeness centrality measure for analyzing evolving networks. The temporal closeness of a vertex v is de\ufb01ned as the sum of the reciprocals of the temporal distances to the other vertices. Ranking all vertices of a network according to the temporal closeness is computationally expensive as it leads to a single-source-all-destination (SSAD) temporal distance query starting from each vertex of the graph. To reduce the running time of temporal closeness computations, we introduce an index to speed up SSAD temporal distance queries called Substream index. We show that deciding if a Substream index of a given size exists is NP-complete and provide an e\ufb03cient greedy approximation. Moreover, we improve the running time of the approximation using min-hashing and parallelization. Our evaluation with real-world temporal networks shows a running time improvement of up to one order of magnitude compared to the state-of-the-art temporal closeness ranking algorithms.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "40892978",
                    "name": "Lutz Oettershagen"
                },
                {
                    "authorId": "1724469",
                    "name": "Petra Mutzel"
                }
            ]
        }
    ]
}