{
    "authorId": "145750056",
    "papers": [
        {
            "paperId": "5eea26d5e9add1007d1a029e5ff4fae80b4c111a",
            "title": "Community Deception From a Node-Centric Perspective",
            "abstract": "Community deception is about concealing the members of a community <inline-formula><tex-math notation=\"LaTeX\">$\\mathscr {C}$</tex-math></inline-formula> within a community structure (set of communities) discovered by a community detection algorithm. This issue has only been studied from an edge-centric standpoint. This article introduces <monospace>nDec</monospace>, a node-centric community deception approach that can directly influence where <inline-formula><tex-math notation=\"LaTeX\">$\\mathscr {C}$</tex-math></inline-formula>\u2019s members are placed. Indeed, <monospace>nDec</monospace> considers how nodes can be moved between communities and analyzes the most profitable <inline-formula><tex-math notation=\"LaTeX\">$\\mathscr {C}$</tex-math></inline-formula>\u2019s node removals and additions. <monospace>nDec</monospace> is built around a node-centric view optimization function based on modularity, a well-known cluster quality metric. We discovered that rather than blindly minimizing modularity as edge-centric approaches do, it is possible to devise a strategy appealing to detection algorithms while improving the level of concealment of <inline-formula><tex-math notation=\"LaTeX\">$\\mathscr {C}$</tex-math></inline-formula>. Based on a thorough evaluation and comparison with the state-of-the-art, we conclude that node-centric deception provides a more comprehensive and flexible strategy than the edge-centric state-of-the-art.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "e901c922158bf7f37235090e61e7275355ba9e4b",
            "title": "Node-Centric Community Deception Based on Safeness",
            "abstract": "Recent research has highlighted the importance of maintaining user privacy on online social networks. Specifically, despite their appealing applications, community detection algorithms expose personal relationships that might be misused against social network members. This concern has opened a new research area called community deception, which is about hiding the members of a target community from community detection algorithms. State-of-the-art deception methods only look at how community members must perform edge updates to guarantee some level of hiding. This article introduces node-centric deception, a novel approach considering nodes entering and leaving a target community. We theoretically study the effect of node updates by leveraging node safeness as a deception optimization function. Based on this analysis, we present an effective heuristic capable of hiding the target community with minimal node operations. We evaluated our approach against several community detection algorithms and compared it with state-of-the-art deception algorithms with encouraging results.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2175129853",
                    "name": "Saif Aldeen Madi"
                },
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "f927376b691b64b91eeb3a6bc142de5aa69b1e58",
            "title": "Community Deception in Attributed Networks",
            "abstract": "Community detection algorithms that analyze networks to identify communities of nodes are an essential part of the network analysis toolkit used daily by different analysts (e.g., data scientists and law enforcement). However, there is not enough awareness that members of a community $\\mathscr {C}$ (either revealed or not) inside a network $G$ could act strategically to evade such tools either for legitimate (e.g., activist groups in authoritarian regimes) or malicious (e.g., terrorists) purpose. Community deception offers this possibility. By identifying a certain number of $\\mathscr {C}$ \u2019s member connections to be rewired, community deception algorithms can successfully hide a community that wants to stay below the radar of detection techniques. However, the state-of-the-art deception approaches have focused on networks without attributes, although real-world networks (e.g., Facebook) include attributes (e.g., age and sex) that play a central role in detecting more accurate communities. This article faces three novel challenges introduced when designing deception techniques for networks with attributes. The first concerns how to model and encode attributes most flexibly. The second is about framing attribute-aware community deception as an optimization problem. Finally, the challenge of solving the optimization problem by leveraging network topology and attributes also arises. We leverage a simple way to model network attributes as edge weights, a novel optimization function called community diffusion, and Diffuser a greedy algorithm to optimize diffusion, to solve the above challenges. We evaluated Diffuser against several community detection algorithms and compared it with state-of-the-art deception approaches on various real-world networks. From the evaluation, we can draw two main observations. First, adopting attribute-oblivious deception techniques leads to unsatisfactory results. Second, community diffusion as an optimization function specific to attributed networks is preferred to community safeness, the state-of-the-art deception optimization function, even when recasting the latter as an attribute-aware function.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1705291",
                    "name": "Valeria Fionda"
                },
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "08f7257ed71df2c43d544bfa5fca376e7c2ef567",
            "title": "Edge-centric network analysis",
            "abstract": "Most of the existing deep-learning-based network analysis techniques focus on the problem of learning low-dimensional node representations. However, networks can also be seen in the light of edges interlinking pairs of nodes. The broad goal of this paper is to introduce a deep-learning framework focused on computing edge-centric network embeddings. We present a novel approach called ECNE, which instead of computing edge embeddings by aggregating node embeddings, computes them directly. ECNE leverages the notion of line graph of a graph coupled with an edge weighting mechanism to preserve the dynamic of the original graph in the line graph. We show that ECNE brings benefits wrt the state-of-the-art.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "592338444e0288ee08b11d0dbb9e9bfcfb9934d2",
            "title": "From Node Embeddings to Triple Embeddings",
            "abstract": "An extended version of this paper has been published at the the 34th AAAI Conference on Artificial Intelligence (AAAI) with the title \u201cLearning Triple Embeddings from Knowledge Graphs\u201d. Graph embedding techniques allow to learn high-quality low-dimensional graph representations useful in various tasks, from node classification to clustering. Knowledge graphs are particular types of graphs characterized by several distinct types of nodes and edges. Existing knowledge graph embedding approaches have only focused on learning embeddings of nodes and predicates. However, the basic piece of information stored in knowledge graphs are triples and thus, an interesting problem is that of learning embeddings of triples as a whole. In this paper we report on Triple2Vec , a new technique to directly compute triple embeddings in knowledge graphs. Triple2Vec leverages the idea of line graph and extends it to the context of knowledge graphs. Embeddings are then generated by adopting the SkipGram model, where sentences are replaced with walks on a wighted version of the line graph.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1705291",
                    "name": "Valeria Fionda"
                },
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "6e4f3116d1c9516a4120d15ce4bb8a90cc6fbaa1",
            "title": "Community deception in weighted networks",
            "abstract": "Techniques to hide a community from community detection algorithms are emerging as a new way to protect the privacy of users. Existing techniques either adapt optimization criteria derived from community detection (e.g., minimizing instead of maximizing modularity) or define new ones (e.g., community safeness) to identify a set of updates (e.g., edge addition/deletions) that deceive community detection algorithms from recovering the original structure of a target community C. However, all existing approaches do not take into account the fact that network's edges can be weighted to take into account node similarity or relation strength. The goal of this paper is to present SECRETORUM, a novel community deception approach for community deception in weighted networks.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1705291",
                    "name": "Valeria Fionda"
                },
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "1382c2481fef65ddda60fb67420f0ce037aebbea",
            "title": "Learning Triple Embeddings from Knowledge Graphs",
            "abstract": "Graph embedding techniques allow to learn high-quality feature vectors from graph structures and are useful in a variety of tasks, from node classification to clustering. Existing approaches have only focused on learning feature vectors for the nodes and predicates in a knowledge graph. To the best of our knowledge, none of them has tackled the problem of directly learning triple embeddings. The approaches that are closer to this task have focused on homogeneous graphs involving only one type of edge and obtain edge embeddings by applying some operation (e.g., average) on the embeddings of the endpoint nodes. The goal of this paper is to introduce Triple2Vec, a new technique to directly embed knowledge graph triples. We leverage the idea of line graph of a graph and extend it to the context of knowledge graphs. We introduce an edge weighting mechanism for the line graph based on semantic proximity. Embeddings are finally generated by adopting the SkipGram model, where sentences are replaced with graph walks. We evaluate our approach on different real-world knowledge graphs and compared it with related work. We also show an application of triple embeddings in the context of user-item recommendations.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1705291",
                    "name": "Valeria Fionda"
                },
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "ab371d0e24e26586c3ccd12435eca9cff13ccdd2",
            "title": "Relatedness and TBox-Driven Rule Learning in Large Knowledge Bases",
            "abstract": "We present RARL, an approach to discover rules of the form body \u21d2 head in large knowledge bases (KBs) that typically include a set of terminological facts (TBox) and a set of TBox-compliant assertional facts (ABox). RARL's main intuition is to learn rules by leveraging TBox-information and the semantic relatedness between the predicate(s) in the atoms of the body and the predicate in the head. RARL uses an efficient relatedness-driven TBox traversal algorithm, which given an input rule head, generates the set of most semantically related candidate rule bodies. Then, rule confidence is computed in the ABox based on a set of positive and negative examples. Decoupling candidate generation and rule quality assessment offers greater flexibility than previous work.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "d4255b53aa2f52296e3bcd0eaf903e5e000bdccd",
            "title": "Fact-checking via Path Embedding and Aggregation",
            "abstract": "Knowledge graphs (KGs) are a useful source of background knowledge to (dis)prove facts of the form (s, p, o). Finding paths between s and o is the cornerstone of several fact-checking approaches. While paths are useful to (visually) explain why a given fact is true or false, it is not completely clear how to identify paths that are most relevant to a fact, encode them and weigh their importance. The goal of this paper is to present the Fact Checking via path Embedding and Aggregation (FEA) system. FEA starts by carefully collecting the paths between s and o that are most semantically related to the domain of p. However, instead of directly working with this subset of all paths, it learns vectorized path representations, aggregates them according to different strategies, and use them to finally (dis)prove a fact. We conducted a large set of experiments on a variety of KGs and found that our hybrid solution brings some benefits in terms of performance.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        },
        {
            "paperId": "fccb5f573fc5d9f8e2b4df74fdb77caef6f782af",
            "title": "Toward Edge-Centric Network Embeddings",
            "abstract": "Existing network embedding approaches tackle the problem of learning low-dimensional node representations. However, networks can also be seen in the light of edges interlinking pairs of nodes. The broad goal of this paper is to introduce edge-centric network embeddings. We present an approach called ECNE, which instead of computing node embeddings directly, computes edge embeddings by relying on the notion of line graph coupled with an edge weighting mechanism to preserve the dynamic of the original graph in the line graph. We also present a link prediction framework called ECNE-LP, which given a target link (u,v) first collects paths between nodes u and v, then directly embeds the edges in these paths, and finally aggregates them toward predicting the existence of a link. We show that both ECNE and ECNE-LP bring benefit wrt the state-of-the-art.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "145750056",
                    "name": "G. Pirr\u00f2"
                }
            ]
        }
    ]
}