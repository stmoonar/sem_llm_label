{
    "authorId": "3445802",
    "papers": [
        {
            "paperId": "2d29b15f62aa5b92f1156ed6f378f487ee1247ec",
            "title": "GoSpeech Less: Interoperable Serverless ML-Based Cloud Services",
            "abstract": "Recently, Backend-as-a-Service (BaaS)-enabled serverless functions have been rapidly gaining traction. However, the dependence on specific provider features and configurations still leads to challenges in terms of portability, underlying platform heterogeneity, and vendor lock-in. To bridge this gap, this paper introduces GoSpeechLess11https://github.com/FaaSTools/GoText2Speech, a GoLang library for serverless functions that allows developers to code serverless functions with interoperable BaaS services in a uniform manner. GoSpeechLess thereby is able to reduce development effort by improving the maintainability index by up to 23.53 % and reducing LOC by up to 59.4 %. The trade-off is up to 9.21 % higher runtime overhead.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "2188285104",
                    "name": "Philipp Gritsch"
                },
                {
                    "authorId": "2302859313",
                    "name": "David Meyer"
                },
                {
                    "authorId": "2268279248",
                    "name": "Michael Felderer"
                }
            ]
        },
        {
            "paperId": "8dcfe05504f5791f6c7598ac3c18ac70522f9375",
            "title": "Peeking Behind the Serverless Implementations and Deployments of the Montage Workflow",
            "abstract": "The development of serverless scientific workflows is a complex and tedious procedure and opens several challenges in how to compose workflow processing steps as serverless functions and how much memory to assign to each serverless function, which affects not only the computing resources, but also the networking communication to the cloud storage. Merging multiple processing steps into a single serverless function (fusion) reduces the number of invocations, but restricts the developer to assign the maximum required memory of all fused processing steps, which may increase the overall costs. In this paper, we address the aforementioned challenges for the widely used Montage workflow. We created three different workflow implementations (fine, medium, and coarse) for two cloud providers AWS and GCP and deployed workflow functions with different memory assignments 135 MB, 512 MB, and 1 GB (function deployments). Our experiments show that many Montage functions run cheaper and faster with more memory on both providers. Consequently, selecting the most cost-effective memory configuration, as opposed to the minimal memory, resulted in a reduction of the makespan by 67.27% on AWS and 10.93% on GCP. Applying the same to workflow implementations with fewer functions (coarse) led to a further reduction in the makespan by 24.98% on AWS and 12.96% on GCP, while simultaneously reducing the total cost by 5.33% and 1.99%, respectively. Surprisingly, the fastest implementation was the medium implementation executed on AWS.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2300291327",
                    "name": "Simon Triendl"
                },
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                }
            ]
        },
        {
            "paperId": "900eb64aae3a0f4149cbb822b7f5ea963420e34e",
            "title": "Engineering Serverless Application Life-cycles in Federated Serverless Infrastructures",
            "abstract": "The top cloud providers offer more than a hundred serverless services, such as Function-as-a-Service and various ML-based Services speech to text, text to speech, or translation. Unfortunately, while the cloud provider SDKs simplify the usage of serverless services, they also lock the users to use services of the respective provider only. Moreover, the dynamic and heterogeneous nature of the underlying serverless infrastructure introduces other deficiencies for agile development, automated deployment, and efficient and effective execution of serverless workflow applications. opment, modeling, and running serverless workflow applications that use various serverless managed services in federated serverless infrastructures. The main goal is to follow the approach \"Code Once Run Everywhere\" where the developers code their \"intents\" and the runtime system then selects the specific deployment of end-point managed cloud services.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                }
            ]
        },
        {
            "paperId": "43f0edb270b15e18ff69fba545d05ed400fc3c92",
            "title": "Scale Composite BaaS Services With AFCL Workflows",
            "abstract": "Due to various restrictions in serverless computing, developers face significant challenges to pipeline multiple Backend-as-a-Service (BaaS) services, which is restricted by the maximum size of the serverless function\u2019s deployment package, or by throughput and concurrency restrictions for functions and BaaS services. To bridge this gap, we introduce a methodology how to code scalable and composite BaaS services in form of serverless workflows. Using the Abstract Function Choreography Language (AFCL), we develop and characterize two scalable and composite BaaS services (i) pdf2SpeechDE, which translates a pdf file written in English and converts the extracted text into audio file in German; and (ii) Speech2SpeechDE, which translates audio files from English into a single audio file in German. We composed pdf2SpeechDE and speech2SpeechDE as a sequence of three BaaS services each, including split-merge functions for scalability. The characterization showed that there is no dominating provider for individual BaaS services.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2266398818",
                    "name": "Thomas Larcher"
                },
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                }
            ]
        },
        {
            "paperId": "5549ceb108ef5980c06d484ca2ff87b31da88f79",
            "title": "Large-scale Graph Processing and Simulation with Serverless Workflows in Federated FaaS",
            "abstract": "Serverless computing offers an affordable and easy way to code lightweight functions that can be invoked based on some events to perform simple tasks. For more complicated processing, multiple serverless functions can be orchestrated as a directed acyclic graph to form a serverless workflow, so-called function choreography (FC). Although most famous cloud providers offer FC management systems such as AWS Step Functions, and there are also several open-source FC management systems (e.g., Apache OpenWhisk), their primary focus is on describing the control flow and data flow between serverless functions in the FC. Moreover, the existing FC management systems rarely consider the processed data, which is commonly represented in a graph format. In this paper, we review the capabilities of the existing FC management systems in supporting graph processing applications. We also raise two key research questions related to large-scale graph processing using serverless computing in federated Function-as-a-Service (FaaS). As part of the Graph-Massivizer project, funded by the Horizon Europe research and innovation program, we will research and develop (prototype) solutions that will address these challenges.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "101707848",
                    "name": "Reza Farahani"
                },
                {
                    "authorId": "100533173",
                    "name": "R.-C. Prodan"
                }
            ]
        },
        {
            "paperId": "6406b7220ea0ba742fc53256d540b402df689cd5",
            "title": "Towards Sustainable Serverless Processing of Massive Graphs on the Computing Continuum",
            "abstract": "With the ever-increasing volume of data and the demand to analyze and comprehend it, graph processing has become an essential approach for solving complex problems in various domains, like social networks, bioinformatics, and finance. Despite the potential benefits of current graph processing platforms, they often encounter difficulties supporting diverse workloads, models, and languages. Moreover, existing platforms suffer from limited portability and interoperability, resulting in redundant efforts and inefficient resource and energy utilization due to vendor and even platform lock-in. To bridge the aforementioned gaps, the Graph-Massivizer project, funded by the Horizon Europe research and innovation program, conducts research and develops a high-performance, scalable, and sustainable platform for information processing and reasoning based on the massive graph (MG) representation of extreme data. In this paper, we briefly introduce the Graph-Massivizer platform. We explore how the emerging serverless computing paradigm can be leveraged to devise a scalable graph analytics tool over a codesigned computing continuum infrastructure. Finally, we sketch seven crucial research questions in our design and outline three ongoing and future research directions for addressing them.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "101707848",
                    "name": "Reza Farahani"
                },
                {
                    "authorId": "1887201",
                    "name": "Dragi Kimovski"
                },
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "1760940",
                    "name": "A. Iosup"
                },
                {
                    "authorId": "100533173",
                    "name": "R.-C. Prodan"
                }
            ]
        },
        {
            "paperId": "794ba58adbce4d1630bbf3e3001347c2643f9a65",
            "title": "Workflows Community Summit 2022: A Roadmap Revolution",
            "abstract": "Scientific workflows have become integral tools in broad scientific computing use cases. Science discovery is increasingly dependent on workflows to orchestrate large and complex scientific experiments that range from execution of a cloud-based data preprocessing pipeline to multi-facility instrument-to-edge-to-HPC computational workflows. Given the changing landscape of scientific computing and the evolving needs of emerging scientific applications, it is paramount that the development of novel scientific workflows and system functionalities seek to increase the efficiency, resilience, and pervasiveness of existing systems and applications. Specifically, the proliferation of machine learning/artificial intelligence (ML/AI) workflows, need for processing large scale datasets produced by instruments at the edge, intensification of near real-time data processing, support for long-term experiment campaigns, and emergence of quantum computing as an adjunct to HPC, have significantly changed the functional and operational requirements of workflow systems. Workflow systems now need to, for example, support data streams from the edge-to-cloud-to-HPC enable the management of many small-sized files, allow data reduction while ensuring high accuracy, orchestrate distributed services (workflows, instruments, data movement, provenance, publication, etc.) across computing and user facilities, among others. Further, to accelerate science, it is also necessary that these systems implement specifications/standards and APIs for seamless (horizontal and vertical) integration between systems and applications, as well as enabling the publication of workflows and their associated products according to the FAIR principles. This document reports on discussions and findings from the 2022 international edition of the Workflows Community Summit that took place on November 29 and 30, 2022.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2140039842",
                    "name": "Rafael Ferreira da Silva"
                },
                {
                    "authorId": "1799983",
                    "name": "Rosa M. Badia"
                },
                {
                    "authorId": "2213299279",
                    "name": "Venkat Bala"
                },
                {
                    "authorId": "152409031",
                    "name": "Deborah Bard"
                },
                {
                    "authorId": "145466013",
                    "name": "P. Bremer"
                },
                {
                    "authorId": "2213305232",
                    "name": "Ian Buckley"
                },
                {
                    "authorId": "2304561021",
                    "name": "Silvina Ca\u00edno-Lores"
                },
                {
                    "authorId": "3091414",
                    "name": "K. Chard"
                },
                {
                    "authorId": "46555127",
                    "name": "C. Goble"
                },
                {
                    "authorId": "1693678",
                    "name": "S. Jha"
                },
                {
                    "authorId": "2059296518",
                    "name": "D. Katz"
                },
                {
                    "authorId": "33947553",
                    "name": "D. Laney"
                },
                {
                    "authorId": "145203664",
                    "name": "M. Parashar"
                },
                {
                    "authorId": "35531371",
                    "name": "F. Suter"
                },
                {
                    "authorId": "50329328",
                    "name": "N. Tyler"
                },
                {
                    "authorId": "2066071",
                    "name": "T. Uram"
                },
                {
                    "authorId": "1729053",
                    "name": "I. Altintas"
                },
                {
                    "authorId": "121299213",
                    "name": "S. Andersson"
                },
                {
                    "authorId": "144110414",
                    "name": "W. Arndt"
                },
                {
                    "authorId": "2057561277",
                    "name": "J. Aznar"
                },
                {
                    "authorId": "2062906007",
                    "name": "Jonathan Bader"
                },
                {
                    "authorId": "1960359",
                    "name": "B. Bali\u015b"
                },
                {
                    "authorId": "108377253",
                    "name": "Chris E. Blanton"
                },
                {
                    "authorId": "2199664",
                    "name": "K. Braghetto"
                },
                {
                    "authorId": "2651403",
                    "name": "Aharon Brodutch"
                },
                {
                    "authorId": "2213427261",
                    "name": "Paul Brunk"
                },
                {
                    "authorId": "1707417",
                    "name": "H. Casanova"
                },
                {
                    "authorId": "104449865",
                    "name": "Alba Cervera Lierta"
                },
                {
                    "authorId": "2213298896",
                    "name": "Justin Chigu"
                },
                {
                    "authorId": "1572245697",
                    "name": "T. Coleman"
                },
                {
                    "authorId": "2065988217",
                    "name": "Nick Collier"
                },
                {
                    "authorId": "2120657141",
                    "name": "Iacopo Colonnelli"
                },
                {
                    "authorId": "144108029",
                    "name": "Frederik Coppens"
                },
                {
                    "authorId": "144361904",
                    "name": "M. Crusoe"
                },
                {
                    "authorId": "2058475897",
                    "name": "W. Cunningham"
                },
                {
                    "authorId": "3362335",
                    "name": "B. Kinoshita"
                },
                {
                    "authorId": "3062856",
                    "name": "Paolo Di Tommaso"
                },
                {
                    "authorId": "2802678",
                    "name": "C. Doutriaux"
                },
                {
                    "authorId": "143916458",
                    "name": "M. Downton"
                },
                {
                    "authorId": "1799299",
                    "name": "W. Elwasif"
                },
                {
                    "authorId": "144504471",
                    "name": "B. Enders"
                },
                {
                    "authorId": "17606192",
                    "name": "Chris Erdmann"
                },
                {
                    "authorId": "1719226",
                    "name": "T. Fahringer"
                },
                {
                    "authorId": "84336109",
                    "name": "Ludmilla Figueiredo"
                },
                {
                    "authorId": "1698908",
                    "name": "Rosa Filgueira"
                },
                {
                    "authorId": "1443779643",
                    "name": "M. Foltin"
                },
                {
                    "authorId": "2850787",
                    "name": "A. Fouilloux"
                },
                {
                    "authorId": "2811678",
                    "name": "Luiz M. R. Gadelha"
                },
                {
                    "authorId": "2053600243",
                    "name": "Andrew Gallo"
                },
                {
                    "authorId": "2079451840",
                    "name": "A. G. Saez"
                },
                {
                    "authorId": "1398926410",
                    "name": "D. Garijo"
                },
                {
                    "authorId": "2027553659",
                    "name": "R. Gerlach"
                },
                {
                    "authorId": "2072840094",
                    "name": "Ryan E. Grant"
                },
                {
                    "authorId": "51124744",
                    "name": "Samuel Grayson"
                },
                {
                    "authorId": "2923900",
                    "name": "Patricia A. Grubel"
                },
                {
                    "authorId": "48985473",
                    "name": "Johan O. R. Gustafsson"
                },
                {
                    "authorId": "2308097253",
                    "name": "Val\u00e9rie Hayot-Sasson"
                },
                {
                    "authorId": "2053161325",
                    "name": "Oscar R. Hernandez"
                },
                {
                    "authorId": "1967862",
                    "name": "Marcus Hilbrich"
                },
                {
                    "authorId": "2205970689",
                    "name": "Annmary Justine"
                },
                {
                    "authorId": "152142617",
                    "name": "I. Laflotte"
                },
                {
                    "authorId": "151494370",
                    "name": "Fabian Lehmann"
                },
                {
                    "authorId": "50631038",
                    "name": "Andr\u00e9 Luckow"
                },
                {
                    "authorId": "2086648690",
                    "name": "Jakob Luettgau"
                },
                {
                    "authorId": "145341601",
                    "name": "K. Maheshwari"
                },
                {
                    "authorId": "3299313",
                    "name": "Motohiko Matsuda"
                },
                {
                    "authorId": "3421209",
                    "name": "Doriana Medic"
                },
                {
                    "authorId": "102153641",
                    "name": "P. Mendygral"
                },
                {
                    "authorId": "32733424",
                    "name": "M. Michalewicz"
                },
                {
                    "authorId": "2489735",
                    "name": "J. Nonaka"
                },
                {
                    "authorId": "40258733",
                    "name": "Maciej Pawlik"
                },
                {
                    "authorId": "34635073",
                    "name": "L. Pottier"
                },
                {
                    "authorId": "32809071",
                    "name": "Line C. Pouchard"
                },
                {
                    "authorId": "2213308235",
                    "name": "Mathias Putz"
                },
                {
                    "authorId": "46254996",
                    "name": "Santosh Kumar Radha"
                },
                {
                    "authorId": "1792683",
                    "name": "L. Ramakrishnan"
                },
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "1961788",
                    "name": "P. Romano"
                },
                {
                    "authorId": "21168032",
                    "name": "Daniel Rosendo"
                },
                {
                    "authorId": "3493555",
                    "name": "M. Ruefenacht"
                },
                {
                    "authorId": "2771040",
                    "name": "Katarzyna Rycerz"
                },
                {
                    "authorId": "2653506",
                    "name": "Nishant Saurabh"
                },
                {
                    "authorId": "144276915",
                    "name": "V. Savchenko"
                },
                {
                    "authorId": "2057456497",
                    "name": "Martin Schulz"
                },
                {
                    "authorId": "2037776232",
                    "name": "C. Simpson"
                },
                {
                    "authorId": "66188222",
                    "name": "R. Sirvent"
                },
                {
                    "authorId": "8884013",
                    "name": "Tyler J. Skluzacek"
                },
                {
                    "authorId": "1399487720",
                    "name": "S. Soiland-Reyes"
                },
                {
                    "authorId": "144712722",
                    "name": "Renan Souza"
                },
                {
                    "authorId": "1750800",
                    "name": "S. Sukumar"
                },
                {
                    "authorId": "48064827",
                    "name": "Ziheng Sun"
                },
                {
                    "authorId": "1746329",
                    "name": "A. Sussman"
                },
                {
                    "authorId": "1686699",
                    "name": "D. Thain"
                },
                {
                    "authorId": "2072191295",
                    "name": "Mikhail Titov"
                },
                {
                    "authorId": "50883695",
                    "name": "Benjam\u00edn Tovar"
                },
                {
                    "authorId": "2643562",
                    "name": "Aalap Tripathy"
                },
                {
                    "authorId": "1840916",
                    "name": "M. Turilli"
                },
                {
                    "authorId": "2165288240",
                    "name": "Bartosz Tuznik"
                },
                {
                    "authorId": "1942636",
                    "name": "H. V. Dam"
                },
                {
                    "authorId": "2006915860",
                    "name": "Aurelio Vivas"
                },
                {
                    "authorId": "47766095",
                    "name": "Logan T. Ward"
                },
                {
                    "authorId": "2946172",
                    "name": "Patrick M. Widener"
                },
                {
                    "authorId": "153569593",
                    "name": "Sean R. Wilkinson"
                },
                {
                    "authorId": "2169430585",
                    "name": "Justyna Zawalska"
                },
                {
                    "authorId": "2065914488",
                    "name": "M. Zulfiqar"
                }
            ]
        },
        {
            "paperId": "cfe8dfffa2b5b8a1c72be57f850832873b7d83e9",
            "title": "Serverless Electrocardiogram Stream Processing in Federated Clouds With Lambda Architecture",
            "abstract": "In this article, we explore a novel architecture for distributing health monitoring computations over distributed cloud regions, both for constantly online patients and offline for several hours daily. We propose a conceptual architecture for a use-case example capable of processing thousands of simultaneous incoming streams with electrocardiogram signals.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "2148303546",
                    "name": "Marjan Gusev"
                },
                {
                    "authorId": "2202593309",
                    "name": "Armin Hohenegger"
                },
                {
                    "authorId": "100533173",
                    "name": "R.-C. Prodan"
                },
                {
                    "authorId": "2140652289",
                    "name": "D. Mileski"
                },
                {
                    "authorId": "2682859",
                    "name": "Pano Gushev"
                },
                {
                    "authorId": "2046957673",
                    "name": "G. Temelkov"
                }
            ]
        },
        {
            "paperId": "9d7dfb6af2d6f47c1911eafbdd59980840804bd0",
            "title": "GoDeploy: Portable Deployment of Serverless Functions in Federated FaaS",
            "abstract": "Federated Function-as-a-Service (FaaS) offers higher scalability, better resilience and cost-performance trade-off than running serverless applications in a single cloud region. However, existing Infrastructure-as-Code (IaC) tools are mainly focused on the FaaS provider, rather than on applications, which increases developer effort to code multiple times the same data in order to deploy a serverless function on various cloud regions in federated FaaS. To bridge this gap, this paper introduces GoDeploy, a framework that simplifies coding the deployment of serverless functions in Federated FaaS. Using the design principle \u201ccode once, deploy everywhere\u201d, GoDeploy offers developers a domain-specific language, which introduces a three-levels hierarchy serverless function \u2192 FaaS providers \u2192cloud regions of FaaS provider, rather than existing either the two-levels hierarchy FaaS provider \u2192 serverless functions or flat horizontal structure. Moreover, GoDeploy hides the complexity and requirements of each FaaS provider to store deployment packages (zip) of serverless functions on their storages. With this approach, GoDeploy reduces deployment script length measured in lines of code (LoC) compared to the recent FaaSifier M2FaaS by up to 33.33% for deployment on three cloud regions of AWS. When deploying a single function on three cloud regions of each of three FaaS providers AWS, IBM, Google, LoC are reduced by up to 72.34% compared to the state-of-the-art IaC tool Terraform. The improvement is higher when a serverless function needs to be deployed on multiple cloud regions because GoDeploy's three-level hierarchy requires a single LoC per cloud region, compared to multiple LoC in Terraform's and M2FaaS DSLs.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "2196943709",
                    "name": "Simon Brandacher"
                },
                {
                    "authorId": "1955934",
                    "name": "M. Felderer"
                },
                {
                    "authorId": "1778015",
                    "name": "R. Breu"
                }
            ]
        },
        {
            "paperId": "ab5572c52a529304953f2c715813364493447c8e",
            "title": "FaaSt: Optimize makespan of serverless workflows in federated commercial FaaS",
            "abstract": "Nowadays, scientists migrate workflow applications on serverless Function-as-a-Service (FaaS) platforms in a form of so called function choreographies (FCs) to benefit from FaaS high elasticity and instantly spawning numerous functions. How-ever, the heterogeneous nature of federated FaaS overburdens decisions for the most appropriate configuration setup. Unfor-tunately, related work mainly support either (i) scheduling of serverful workflow applications that run on virtual machines or (ii) container-based algorithms to schedule individual functions on specific container (executor). Either approach is hard to implement for FCs in federated FaaS; the former due to specifics of the FaaS deployment model, while the latter because they are primarily focused on bag of functions and reducing startup latency down to microseconds. Such optimization is negligible for scientific FCs whose functions may run hundreds of seconds due to enormous compute and I/O operations to distributed cloud storage. Instead, scientific FCs would benefit from schedulers that select the appropriate FaaS provider, cloud region, and memory settings. To bridge this gap in scheduling scientific FCs, this paper introduces FaaSt, a novel list-based FC scheduler that optimizes makespan of an FC that runs functions in federated FaaS. The evaluation with three other schedulers showed that FaaSt overcomes limitations of a single FaaS region and generates speedup of up to 2.82\u00d7 when running FCs across four cloud regions compared to a single region. Moreover, FaaSt achieves speedup of up to 1.74 \u00d7 compared to the other state-of-the-art FC schedulers across the same four regions.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3445802",
                    "name": "S. Ristov"
                },
                {
                    "authorId": "2188285104",
                    "name": "Philipp Gritsch"
                }
            ]
        }
    ]
}