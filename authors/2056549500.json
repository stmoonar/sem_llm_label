{
    "authorId": "2056549500",
    "papers": [
        {
            "paperId": "77ade26f65ed14d6bc590d90dfdfcec133b0ae01",
            "title": "InfoMoD: Information-theoretic Model Diagnostics",
            "abstract": "Validating and debugging machine learning models is done by testing them on unseen data. Analyzing model performance on various subsets of the data is critical for fairness, trust, bias detection and explainablility. In this paper, we describe a new way to do this. Our solution, called InfoMoD, applies recent work in information-theoretic data summarization to the problem of model diagnostics. Using real-life datasets, we show how InfoMod concisely describes how a model performs across different subsets of the data and produces expected performance indicators for individual test instances.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "2285679188",
                    "name": "Lukasz Golab"
                },
                {
                    "authorId": "1731110",
                    "name": "K. Taghva"
                }
            ]
        },
        {
            "paperId": "65a4723b9980d99b1fdd1e03eba69953cd6af958",
            "title": "Graph Attention Neural Network Distributed Model Training",
            "abstract": "The scale of neural language models has been increasing significantly over recent years. As a result, the time complexity of training larger language models and resource utilization has been increasing at a higher rate as well. In this research, we propose a distributed implementation of a Graph Attention Neural Network model with 120 million parameters and train it on a cluster of eight GPUs. We demonstrate three times speedup in model training while keeping the stability of accuracy and loss rates during training and testing compared to single GPU instance training.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "2130201157",
                    "name": "Mina Esmail Zadeh Nojoo Kambar"
                },
                {
                    "authorId": "2023178116",
                    "name": "Maryam Heidari"
                }
            ]
        },
        {
            "paperId": "81d481e2ea2bf27430c523607a958da3acdc3303",
            "title": "A Survey on Deep Learning Techniques for Joint Named Entities and Relation Extraction",
            "abstract": "Named Entity Recognition (NER) and Relation Extraction (RE) are two principal subtasks of knowledge-based systems that extract meaningful information from unstructured text. With Recent advances in Deep Learning techniques, new models use Joint Named Entities and Relation Extraction (JNERE) techniques that simultaneously accomplish NER and RE subtasks. These models avoid the drawbacks of using the traditional pipeline method. As contributions of our study to the other related works, we specifically survey JNERE techniques. The reason for not focusing on pipeline methods or other older techniques is the recent advances of JNERE methods in achieving the state-of-art results for most databases. Additionally, we provide a comprehensive report on the embedding techniques and datasets available for this task. Finally, we discuss the approaches and how they imnpoved the results.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2130201157",
                    "name": "Mina Esmail Zadeh Nojoo Kambar"
                },
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "2023178116",
                    "name": "Maryam Heidari"
                }
            ]
        },
        {
            "paperId": "9452d40ccb84606981b1cadf0b6cc926bf819a98",
            "title": "Offensive Language Detection on Social Media Based on Text Classification",
            "abstract": "There is a concerning rise of offensive language on the content generated by the crowd over various social platforms. Such language might bully or hurt the feelings of an individual or a community. Recently, the research community has investigated and developed different supervised approaches and training datasets to detect or prevent offensive monologues or dialogues automatically. In this study, we propose a model for text classification consisting of modular cleaning phase and tokenizer, three embedding methods, and eight classifiers. Our experiments shows a promising result for detection of offensive language on our dataset obtained from Twitter. Considering hyperparameter optimization, three methods of AdaBoost, SVM and MLP had highest average of F1-score on popular embedding method of TF-IDF.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2037676113",
                    "name": "P. Hajibabaee"
                },
                {
                    "authorId": "2143337352",
                    "name": "Masoud Malekzadeh"
                },
                {
                    "authorId": "32140952",
                    "name": "Mohsen Ahmadi"
                },
                {
                    "authorId": "2023178116",
                    "name": "Maryam Heidari"
                },
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "1805958417",
                    "name": "Reyhaneh Abdolazimi"
                },
                {
                    "authorId": "25158823",
                    "name": "James H. Jones"
                }
            ]
        },
        {
            "paperId": "c6af8be79606fe047f49708cc6f35a7cf39174e7",
            "title": "Efficient Large Scale NLP Feature Engineering with Apache Spark",
            "abstract": "Feature engineering is a computationally time-consuming process in the end-to-end machine learning pipeline. Large amounts of text data are being generated on many heterogeneous sources and platforms on the internet. The compute resources needed to extract valuable features from these big datasets are increasing significantly. In this research, we evaluate the runtime of the RDD and the Spark-SQL APIs of the Apache Spark framework to extract text features from the corpus of english Wikipedia. As a result, we demonstrate the significant runtime performance of the SparkSQL compared to RDD API.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "2023178116",
                    "name": "Maryam Heidari"
                },
                {
                    "authorId": "1805958417",
                    "name": "Reyhaneh Abdolazimi"
                },
                {
                    "authorId": "2037676113",
                    "name": "P. Hajibabaee"
                },
                {
                    "authorId": "2143337352",
                    "name": "Masoud Malekzadeh"
                }
            ]
        },
        {
            "paperId": "f12b90891ea4d34992115e93d596171de198861f",
            "title": "A Survey on Mobile Malware Detection Methods using Machine Learning",
            "abstract": "The prevalence of mobile devices (smartphones) along with the availability of high-speed internet access world-wide resulted in a wide variety of mobile applications that carry a large amount of confidential information. Although popular mobile operating systems such as iOS and Android constantly increase their defenses methods, data shows that the number of intrusions and attacks using mobile applications is rising continuously. Experts use techniques to detect malware before the malicious application gets installed, during the runtime or by the network traffic analysis. In this paper, we first present the information about different categories of mobile malware and threats; then, we classify the recent research methods on mobile malware traffic detection.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2130201157",
                    "name": "Mina Esmail Zadeh Nojoo Kambar"
                },
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "2005619",
                    "name": "Yoohwan Kim"
                },
                {
                    "authorId": "1731110",
                    "name": "K. Taghva"
                }
            ]
        },
        {
            "paperId": "f459ebeab4615ea01439c537d10dc18deeba685a",
            "title": "MapReduce Preprocess of Big Graphs for Rapid Connected Components Detection",
            "abstract": "Paramount and vast applications such as social networks deal with big graphs. For this reason, big graph analysis and processing is currently a necessity. Detection of connected components is one of the analysis of graphs which is utilized as a sub-part in many graph algorithms, such as clustering. The goal of this paper is to propose a parallel preprocess algorithm with MapReduce to decrease graph volume for rapid detection of connected components. Suggested method is able to lessen the volume up to more than 99% quickly by just two rounds of MapReduce. Our evaluation shows that the combination of the preprocess with detection of connected components has a significant impact on: reduction of execution time up to 7 times, decrease in data transmission of processing nodes in network and MapReduce rounds.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1805958417",
                    "name": "Reyhaneh Abdolazimi"
                },
                {
                    "authorId": "2023178116",
                    "name": "Maryam Heidari"
                },
                {
                    "authorId": "2056549500",
                    "name": "Armin Esmaeilzadeh"
                },
                {
                    "authorId": "2874707",
                    "name": "H. Naderi"
                }
            ]
        }
    ]
}