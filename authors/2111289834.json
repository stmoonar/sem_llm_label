{
    "authorId": "2111289834",
    "papers": [
        {
            "paperId": "6f424cbb924e20224a976e092283c8159152abc5",
            "title": "Smart Speaker Design and Implementation with Biometric Authentication and Advanced Voice Interaction Capability",
            "abstract": "Advancements in semiconductor technology have reduced dimensions and cost while improving the performance and capacity of chipsets. In addition, advancement in the AI frameworks and libraries brings possibilities to accommodate more AI at the resource-constrained edge of consumer IoT devices. Sensors are nowadays an integral part of our environment which provide continuous data streams to build intelligent applications. An example could be a smart home scenario with multiple interconnected devices. In such smart environments, for convenience and quick access to web-based service and personal information such as calendars, notes, emails, reminders, banking, etc, users link third-party skills or skills from the Amazon store to their smart speakers. Also, in current smart home scenarios, several smart home products such as smart security cameras, video doorbells, smart plugs, smart carbon monoxide monitors, and smart door locks, etc. are interlinked to a modern smart speaker via means of custom skill addition. Since smart speakers are linked to such services and devices via the smart speaker user's account. They can be used by anyone with physical access to the smart speaker via voice commands. If done so, the data privacy, home security and other aspects of the user get compromised. Recently launched, Tensor Cam's AI Camera, Toshiba's Symbio, Facebook's Portal are camera-enabled smart speakers with AI functionalities. Although they are camera-enabled, yet they do not have an authentication scheme in addition to calling out the wake-word. This paper provides an overview of cybersecurity risks faced by smart speaker users due to lack of authentication scheme and discusses the development of a state-of-the-art camera-enabled, microphone array-based modern Alexa smart speaker prototype to address these risks.",
            "fieldsOfStudy": [
                "Computer Science",
                "Engineering"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "1734172",
                    "name": "P. Corcoran"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "01b23dcb34403256d20ae92617a9757d23333b56",
            "title": "Toward Distributed, Global, Deep Learning Using IoT Devices",
            "abstract": "Deep learning (DL) using large scale, high-quality IoT datasets can be computationally expensive. Utilizing such datasets to produce a problem-solving model within a reasonable time frame requires a scalable distributed training platform/system. We present a novel approach where to train one DL model on the hardware of thousands of mid-sized IoT devices across the world, rather than the use of GPU cluster available within a data center. We analyze the scalability and model convergence of the subsequently generated model, identify three bottlenecks that are: high computational operations, time consuming dataset loading I/O, and the slow exchange of model gradients. To highlight research challenges for globally distributed DL training and classification, we consider a case study from the video data processing domain. A need for a two-step deep compression method, which increases the training speed and scalability of DL training processing, is also outlined. Our initial experimental validation shows that the proposed method is able to improve the tolerance of the distributed training process to varying internet bandwidth, latency, and Quality of Service metrics.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "39215185",
                    "name": "Pankesh Patel"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                },
                {
                    "authorId": "39595364",
                    "name": "Karan Mitra"
                },
                {
                    "authorId": "1691109",
                    "name": "S. Dustdar"
                },
                {
                    "authorId": "1751264",
                    "name": "O. Rana"
                },
                {
                    "authorId": "1777356",
                    "name": "P. Jayaraman"
                },
                {
                    "authorId": "144928956",
                    "name": "R. Ranjan"
                },
                {
                    "authorId": "1691109",
                    "name": "S. Dustdar"
                }
            ]
        },
        {
            "paperId": "23a94e971c141e2b5fb339afc498bd838cac4279",
            "title": "ElastiCL: Elastic Quantization for Communication Efficient Collaborative Learning in IoT",
            "abstract": "Transmitting updates of high-dimensional models between client IoT devices and the central aggregating server has always been a bottleneck in collaborative learning - especially in uncertain real-world IoT networks where congestion, latency, bandwidth issues are common. In this scenario, gradient quantization is an effective way to reduce bits count when transmitting each model update, but with a trade-off of having an elevated error floor due to higher variance of the stochastic gradients. In this paper, we propose ElastiCL, an elastic quantization strategy that achieves transmission efficiency plus a low error floor by dynamically altering the number of quantization levels during training on distributed IoT devices. Experiments on training ResNet-18, Vanilla CNN shows that ElastiCL can converge in much fewer transmitted bits than fixed quantization level, with little or no compromise on training and test accuracy.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "2139924974",
                    "name": "Dhruv Sheth"
                },
                {
                    "authorId": "1661217503",
                    "name": "Shailesh Arya"
                },
                {
                    "authorId": "39439746",
                    "name": "Federica Rollo"
                },
                {
                    "authorId": "9220510",
                    "name": "Piyush Yadav"
                },
                {
                    "authorId": "39215185",
                    "name": "Pankesh Patel"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "29626c2e11cd9d6e9e8e9f3bf162b2d531956b00",
            "title": "Porting and Execution of Anomalies Detection Models on Embedded Systems in IoT: Demo Abstract",
            "abstract": "In the Industry 4.0 era, Microcontrollers (MCUs) based tiny embedded sensor systems have become the sensing paradigm to interact with the physical world. In 2020, 25.6 billion MCUs were shipped, and over 250 billion MCUs are already operating in the wild. Such low-power, low-cost MCUs are being used as the brain to control diverse applications and soon will become the global digital nervous system. In an Industrial IoT setup, such tiny MCU-based embedded systems are equipped with anomaly detection models and mounted on production plant machines for monitoring the machine's health/condition. These models process the machine's health data (from temperature, RPM, vibration sensors) and raise timely alerts when it predicts/detects data patterns that show deviations from the normal operation state. In this demo, we train One Class Support Vector Machines (OC-SVM) based anomaly detection models and port the trained models to their MCU executable versions. We then deploy and execute the ported models on 4 popular MCUs and report their on-board inference performance along with their memory (Flash and SRAM) consumption. The steps/procedure that we show in the demo is generic, and the viewers can use it to efficiently port a wide variety of datasets-trained classifiers and execute them on different resource-constrained MCU and small CPU-based devices.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "39215185",
                    "name": "Pankesh Patel"
                },
                {
                    "authorId": "2139621227",
                    "name": "Abdul Wahid"
                },
                {
                    "authorId": "2094945756",
                    "name": "Muhammad Yahya"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "2c951e8528c87c5126d55ea2041d112ac5921f18",
            "title": "SRAM optimized porting and execution of machine learning classifiers on MCU-based IoT devices: demo abstract",
            "abstract": "With the introduction of edge analytics, IoT devices are becoming smarter and ready for AI applications. However, any increase in the training data results in a linear increase in the space complexity of the trained Machine Learning (ML) models, which means they cannot be deployed on IoT devices that have limited memory. To alleviate such memory issues, we recently proposed an SRAM-optimized classifier porting, stitching, and efficient deployment method in [3]. This is currently the most resource-friendly approach that enables large classifiers to be comfortably executed on microcontroller unit (MCU) based IoT devices, and perform ultra-fast classifications (1--4x times faster than state-of-the-art libraries) while consuming 0 bytes of SRAM. In this demo, realizing our recent SRAM-optimized approach, we port and execute 7 dataset-trained classifiers on 7 popular MCUs, and report their inference performance. It is apparent from the demo results that realizing our approach makes even the slowest Atmega328P MCU perform faster unit inference than a NVIDIA Jetson Nano GPU and Raspberry Pi 4 CPU.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "39215185",
                    "name": "Pankesh Patel"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "564644ef370f228b26e23775cc432425e5fd4451",
            "title": "Train++: An Incremental ML Model Training Algorithm to Create Self-Learning IoT Devices",
            "abstract": "The majority of Internet of Things (IoT) devices are tiny embedded systems with a micro-controller unit (MCU) as its brain. The memory footprint (SRAM, Flash, and EEPROM) of such MCU-based devices is often very limited, restricting onboard Machine Learning (ML) model training for large trainsets with high feature dimensions. To cope with memory issues, the current edge analytics approaches train high-quality ML models on the cloud GPUs (uses large volume historical data), then deploy the deep optimized version of the resultant models on edge devices for inference. Such approaches are inefficient in concept drift situations where the data generated at the device level vary frequently, and trained models are clueless on how to behave if previously unseen data arrives. In this paper, we present Train++, an incremental training algorithm that trains ML models locally at the device level (e.g., on MCUs and small CPUs) using the full n-samples of high-dimensional data. Train++ transforms even the most resource-constrained MCU-based IoT edge devices into intelligent devices that can locally build their own knowledge base on-the-fly using the live data, thus creating smart self-learning and autonomous problem-solving devices. Train++ algorithm is extensively evaluated on 5 popular MCU-boards, using 7 datasets of varying sizes and feature dimensions. A few exciting findings when analyzing the evaluation results are: (i) The proposed method reduces the onboard binary classifier training time by \u2248 10 - 226 sec across various commodity MCUs; (ii) Train++ can infer on MCUs for the entire test set in real-time of 1 ms; (iii) The accuracy improved by 5.15 - 7.3% since the incremental characteristic of Train++ enabled the loading of full n-samples of the high-dimensional datasets even on MCUs with only a few hundred kBs of memory.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "9220510",
                    "name": "Piyush Yadav"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "7349311ca0bc34989bf1d27da1b5a28d2ec9e1e4",
            "title": "Semantic Web and Knowledge Graphs for Industry 4.0",
            "abstract": "In recent years, due to technological advancements, the concept of Industry 4.0 (I4.0) is gaining popularity, while presenting several technical challenges being tackled by both the industrial and academic research communities. Semantic Web including Knowledge Graphs is a promising technology that can play a significant role in realizing I4.0 implementations. This paper surveys the use of the Semantic Web and Knowledge Graphs for I4.0 from different perspectives such as managing information related to equipment maintenance, resource optimization, and the provision of on-time and on-demand production and services. Moreover, to solve the challenges of limited depth and expressiveness in the current ontologies, we have proposed an enhanced reference generalized ontological model (RGOM) based on Reference Architecture Model for I4.0 (RAMI 4.0). RGOM can facilitate a range of I4.0 concepts including improved asset monitoring, production enhancement, reconfiguration of resources, process optimizations, product orders and deliveries, and the life cycle of products. Our proposed RGOM can be used to generate a knowledge graph capable of providing answers in response to any real-time query.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2094945756",
                    "name": "Muhammad Yahya"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "75052a659e5397c5f8c9a7b3355c31b7f86348fc",
            "title": "OWSNet: Towards Real-time Offensive Words Spotting Network for Consumer IoT Devices",
            "abstract": "Every modern household owns at least a dozen of IoT devices like smart speakers, video doorbells, smartwatches, where most of them are equipped with a Keyword spotting (KWS) system-based digital voice assistant like Alexa. The state-of-the-art KWS systems require a large number of operations, higher computation, memory resources to show top performance. In this paper, in contrast to existing resource-demanding KWS systems, we propose a light-weight temporal convolution based KWS system named OWSNet, that can comfortably execute on a variety of IoT devices around us and can accurately spot multiple keywords in real-time without disturbing the device\u2019s routine functionalities. When OWSNet is deployed on consumer IoT devices placed in the workplace, home, etc., in addition to spotting wake/trigger words like \u2018Hey Siri\u2019, \u2018Alexa\u2019, it can also accurately spot offensive words in real-time. If regular wake words are spotted, it activates the voice assistant; else if offensive words are spotted, it starts to capture and stream audio data to speech analytics APIs for autonomous threat and insecurities detection in the scene. The evaluation results show that the OWSNet is faster than state-of-the-art models as it produced $\\approx$ 1-74 times faster inference on Raspberry Pi 4 and $\\approx$ 1-12 times faster inference on NVIDIA Jetson Nano. In this paper, to optimize IoT use-case models like OWSNet, we present a generic multi-component ML model optimization sequence that can reduce the memory and computation demands of a wide range of ML models thus enabling their execution on low resource, cost, power IoT devices.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "1654168291",
                    "name": "B. Sudharsan"
                },
                {
                    "authorId": "116374579",
                    "name": "Sweta Malik"
                },
                {
                    "authorId": "1734172",
                    "name": "P. Corcoran"
                },
                {
                    "authorId": "39215185",
                    "name": "Pankesh Patel"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "82d83208085f37963a5f0e84fa11c90fa5ebc448",
            "title": "Digital Twins Collaboration for Automatic Erratic Operational Data Detection in Industry 4.0",
            "abstract": "Digital twin (DT) plays a pivotal role in the vision of Industry 4.0. The idea is that the real product and its virtual counterpart are twins that travel a parallel journey from design and development to production and service life. The intelligence that comes from DTs\u2019 operational data supports the interactions between the DTs to pave the way for the cyber-physical integration of smart manufacturing. This paper presents a conceptual framework for digital twins collaboration to provide an auto-detection of erratic operational data by utilizing operational data intelligence in the manufacturing systems. The proposed framework provide an interaction mechanism to understand the DT status, interact with other DTs, learn from each other DTs, and share common semantic knowledge. In addition, it can detect the anomalies and understand the overall picture and conditions of the operational environments. Furthermore, the proposed framework is described in the workflow model, which breaks down into four phases: information extraction, change detection, synchronization, and notification. A use case of Energy 4.0 fault diagnosis for wind turbines is described to present the use of the proposed framework and DTs collaboration to identify and diagnose the potential failure, e.g., malfunctioning nodes within the energy industry.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "3298018",
                    "name": "Radhya Sahal"
                },
                {
                    "authorId": "2988183",
                    "name": "S. Alsamhi"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2600658",
                    "name": "Kenneth N. Brown"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        },
        {
            "paperId": "94ccbf6cd27a4efb086e75c553f5e79e9039ba2d",
            "title": "Industry 4.0 towards Forestry 4.0: Fire Detection Use Case \u2020",
            "abstract": "Forestry 4.0 is inspired by the Industry 4.0 concept, which plays a vital role in the next industrial generation revolution. It is ushering in a new era for efficient and sustainable forest management. Environmental sustainability and climate change are related challenges to promote sustainable forest management of natural resources. Internet of Forest Things (IoFT) is an emerging technology that helps manage forest sustainability and protect forest from hazards via distributing smart devices for gathering data stream during monitoring and detecting fire. Stream processing is a well-known research area, and recently, it has gained a further significance due to the emergence of IoFT devices. Distributed stream processing platforms have emerged, e.g., Apache Flink, Storm, and Spark, etc. Querying windowing is the heart of any stream-processing platform which splits infinite data stream into chunks of finite data to execute a query. Dynamic query window-based processing can reduce the reporting time in case of missing and delayed events caused by data drift.In this paper, we present a novel dynamic mechanism to recommend the optimal window size and type based on the dynamic context of IoFT application. In particular, we designed a dynamic window selector for stream queries considering input stream data characteristics, application workload and resource constraints to recommend the optimal stream query window configuration. A research gap on the likelihood of adopting smart IoFT devices in environmental sustainability indicates a lack of empirical studies to pursue forest sustainability, i.e., sustainable forestry applications. So, we focus on forest fire management and detection as a use case of Forestry 4.0, one of the dynamic environmental management challenges, i.e., climate change, to deliver sustainable forestry goals. According to the dynamic window selector\u2019s experimental results, end-to-end latency time for the reported fire alerts has been reduced by dynamical adaptation of window size with IoFT stream rate changes.",
            "fieldsOfStudy": [
                "Computer Science",
                "Medicine"
            ],
            "authors": [
                {
                    "authorId": "3298018",
                    "name": "Radhya Sahal"
                },
                {
                    "authorId": "2988183",
                    "name": "S. Alsamhi"
                },
                {
                    "authorId": "1707342",
                    "name": "J. Breslin"
                },
                {
                    "authorId": "2111289834",
                    "name": "M. Ali"
                }
            ]
        }
    ]
}