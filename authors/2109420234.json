{
    "authorId": "2109420234",
    "papers": [
        {
            "paperId": "357613ea0e90bd41fb942fd65f39498e71e2dbc3",
            "title": "Mixture of Soft Prompts for Controllable Data Generation",
            "abstract": "Large language models (LLMs) effectively generate fluent text when the target output follows natural language patterns. However, structured prediction tasks confine the output format to a limited ontology, causing even very large models to struggle since they were never trained with such restrictions in mind. The difficulty of using LLMs for direct prediction is exacerbated in few-shot learning scenarios, which commonly arise due to domain shift and resource limitations. We flip the problem on its head by leveraging the LLM as a tool for data augmentation rather than direct prediction. Our proposed Mixture of Soft Prompts (MSP) serves as a parameter-efficient procedure for generating data in a controlled manner. Denoising mechanisms are further applied to improve the quality of synthesized data. Automatic metrics show our method is capable of producing diverse and natural text, while preserving label semantics. Moreover, MSP achieves state-of-the-art results on three benchmarks when compared against strong baselines. Our method offers an alternate data-centric approach for applying LLMs to complex prediction tasks.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2111900571",
                    "name": "Derek Chen"
                },
                {
                    "authorId": "2109420234",
                    "name": "Celine Lee"
                },
                {
                    "authorId": "46215479",
                    "name": "Yunan Lu"
                },
                {
                    "authorId": "24895235",
                    "name": "Domenic Rosati"
                },
                {
                    "authorId": "144007938",
                    "name": "Zhou Yu"
                }
            ]
        },
        {
            "paperId": "905cbe787b20fca3917d2afd6a7a5f073a50386e",
            "title": "MP-CodeCheck: Evolving Logical Expression Code Anomaly Learning with Iterative Self-Supervision",
            "abstract": "Machine programming (MP) is concerned with automating software development. According to studies, software engineers spend upwards of 50% of their development time debugging software. To help accelerate debugging, we present MP-CodeCheck (MPCC). MPCC is an MP system that at-tempts to identify anomalous code patterns within logical program expressions. In designing MPCC, we developed two novel programming language representations, the forma-tions of which are critical in its ability to exhaustively and efficiently process the billions of lines of code that are used in its self-supervised training. To quantify MPCC\u2019s performance, we compare it against ControlFlag, a state-of-the-art self-supervised code anomaly detection system; we find that MPCC is more spatially and temporally efficient. We demonstrate MPCC\u2019s anomalous code detection capabilities by exercising it on a variety of open-source GitHub repositories and one proprietary code base. We also provide a brief qualitative study on some of the different classes of code anomalies that MPCC can detect to provide an abbreviated insight into its capabilities. 1",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2162737511",
                    "name": "Urs C. Muff"
                },
                {
                    "authorId": "2109420234",
                    "name": "Celine Lee"
                },
                {
                    "authorId": "2162737513",
                    "name": "Paul Gottschlich"
                },
                {
                    "authorId": "2672873",
                    "name": "Justin Emile Gottschlich"
                }
            ]
        },
        {
            "paperId": "a48743b889db1faf0f04d4b29382634d19975f3f",
            "title": "Toward Code Generation: A Survey and Lessons from Semantic Parsing",
            "abstract": "With the growth of natural language processing techniques and demand for improved software engineering efficiency, there is an emerging interest in translating intention from human languages to programming languages. In this survey paper, we attempt to provide an overview of the growing body of research in this space. We begin by reviewing natural language semantic parsing techniques and draw parallels with program synthesis efforts. We then consider semantic parsing works from an evolutionary perspective, with specific analyses on neuro-symbolic methods, architecture, and supervision. We then analyze advancements in frameworks for semantic parsing for code generation. In closing, we present what we believe are some of the emerging open challenges in this domain.",
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "authors": [
                {
                    "authorId": "2109420234",
                    "name": "Celine Lee"
                },
                {
                    "authorId": "2672873",
                    "name": "Justin Emile Gottschlich"
                },
                {
                    "authorId": "2089785740",
                    "name": "Dan Roth Intel Labs"
                },
                {
                    "authorId": "102998291",
                    "name": "U. Pennsylvania"
                }
            ]
        }
    ]
}